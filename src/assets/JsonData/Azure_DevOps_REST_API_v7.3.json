{
  "name": "Azure DevOps REST API v7.3",
  "version": "1",
  "items": [
    {
      "type": "folder",
      "name": "Approvals and Checks",
      "filename": "Approvals and Checks",
      "root": {
        "docs": "[Checks REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/approvalsandchecks/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Approvals and Checks"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Approvals",
          "filename": "Approvals",
          "root": {
            "docs": "[Approvals - REST API (Azure DevOps Approvals And Checks) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/approvalsandchecks/approvals?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Approvals"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Approvals Get",
              "filename": "Approvals Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/approvals/{{approvalId}}?$expand=none&api-version={{api-version-preview}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version-preview}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Id field is present and not empty\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.have.property('id').that.is.not.empty;\r\n});\r\n\r\n\r\ntest(\"Pipeline object is present and contains expected fields\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.pipeline).to.exist;\r\n    expect(responseData.pipeline).to.have.property('owner');\r\n    expect(responseData.pipeline).to.have.property('id');\r\n    expect(responseData.pipeline).to.have.property('name');\r\n});\r\n\r\n\r\ntest(\"BlockedApprovers array is present and contains expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.blockedApprovers).to.exist.and.to.be.an('array');\r\n    expect(responseData.blockedApprovers).to.have.lengthOf(1); // Replace 1 with the expected number of elements\r\n});\r\n\r\n\r\ntest(\"Steps array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.steps).to.exist;\r\n    expect(responseData.steps).to.be.an('array');\r\n    expect(responseData.steps).to.have.lengthOf(1); // Replace 1 with the expected number of elements\r\n});\r\n\r\n",
                "docs": "Get an approval.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Approvals Query",
              "filename": "Approvals Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/approvals?approvalIds={{approvalId}}&$expand=none&api-version={{api-version-preview}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "approvalIds",
                    "value": "{{approvalId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version-preview}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response time is less than 200ms\", function () {\r\n    expect(res.getResponseTime()).to.be.below(200);\r\n});\r\n\r\ntest(\"Steps array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.be.an('array');\r\n    \r\n    responseData.value.forEach(approval => {\r\n        expect(approval.steps).to.be.an('array');\r\n        // You can add additional checks for the expected number of elements in the 'steps' array here if needed\r\n    });\r\n});\r\n\r\n",
                "docs": "List Approvals. This can be used to get a set of pending approvals in a pipeline, on an user or for a resource..",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Approvals Update",
              "filename": "Approvals Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/approvals?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"approvalId\": \"<uuid>\",\n    \"assignedApprover\": {\n      \"directoryAlias\": \"est dolor\",\n      \"id\": \"amet tempor consectetur irure\",\n      \"imageUrl\": \"deserunt non dolore\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"est adipisicing cupidatat nostrud\",\n      \"uniqueName\": \"ex sint\",\n      \"_links\": {\n        \"links\": {\n          \"consequat_b61\": {},\n          \"esse_30\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"comment\": \"<string>\",\n    \"reassignTo\": {\n      \"directoryAlias\": \"Duis irure\",\n      \"id\": \"anim consequat in quis\",\n      \"imageUrl\": \"pariatur esse Lorem\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"occaecat in\",\n      \"uniqueName\": \"Duis ea commodo dolor incididunt\",\n      \"_links\": {\n        \"links\": {\n          \"Duise\": {},\n          \"deserunt5\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"status\": \"pending\"\n  },\n  {\n    \"approvalId\": \"<uuid>\",\n    \"assignedApprover\": {\n      \"directoryAlias\": \"Excepteur Lo\",\n      \"id\": \"enim adipisicing\",\n      \"imageUrl\": \"pariatur ad Excepteur eu\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"nulla sed consectetur in\",\n      \"uniqueName\": \"et esse do\",\n      \"_links\": {\n        \"links\": {\n          \"ut_83a\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"comment\": \"<string>\",\n    \"reassignTo\": {\n      \"directoryAlias\": \"deserunt aute esse tempor\",\n      \"id\": \"voluptate ullamco\",\n      \"imageUrl\": \"magna\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"cillum non\",\n      \"uniqueName\": \"pariatur officia\",\n      \"_links\": {\n        \"links\": {\n          \"aute15e\": {},\n          \"aliquip_ce\": {},\n          \"eabc1\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"status\": \"skipped\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update approvals.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Check Configurations",
          "filename": "Check Configurations",
          "root": {
            "docs": "[Check Configurations - REST API (Azure DevOps Approvals And Checks) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/approvalsandchecks/check-configurations?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Check Configurations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Check Configurations Add",
              "filename": "Check Configurations Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/checks/configurations?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {},\n  \"createdBy\": {},\n  \"createdOn\": \"2004-12-15T17:10:23.783Z\",\n  \"isDisabled\": true,\n  \"issue\": {},\n  \"modifiedBy\": {},\n  \"modifiedOn\": \"2016-08-20T13:25:26.196Z\",\n  \"timeout\": 98370199,\n  \"id\": \"<integer>\",\n  \"resource\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a check configuration",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Check Configurations Delete",
              "filename": "Check Configurations Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/checks/configurations/{{configurationId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "configurationId",
                    "value": "{{configurationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete check configuration by id",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Check Configurations Get",
              "filename": "Check Configurations Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/checks/configurations/{{configurationId}}?$expand=settings&api-version={{api-version-preview}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "settings",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version-preview}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 404\", function () {\r\n    expect(res.getStatus()).to.equal(404);\r\n});\r\n\r\n\r\ntest(\"Response body contains relevant error information\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.errorCode).to.exist;\r\n    expect(responseData.message).to.exist;\r\n});\r\n\r\n\r\ntest(\"Verify that 'createdBy' and 'modifiedBy' fields are objects\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.createdBy).to.be.an('object');\r\n    expect(responseData.modifiedBy).to.be.an('object');\r\n});\r\n\r\n\r\ntest(\"CreatedOn and ModifiedOn fields are in a valid date format\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.createdOn).to.match(/\\d{4}-\\d{2}-\\d{2}/, \"Invalid date format for createdOn\");\r\n    expect(responseData.modifiedOn).to.match(/\\d{4}-\\d{2}-\\d{2}/, \"Invalid date format for modifiedOn\");\r\n});\r\n\r\n\r\ntest(\"Url field is present and not empty\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.url).to.exist.and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r\n});\r\n\r\n",
                "docs": "Get Check configuration by Id",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Check Configurations List",
              "filename": "Check Configurations List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/checks/configurations?resourceType=queue&resourceId=1&$expand=settings&api-version={{api-version-preview}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "resourceType",
                    "value": "queue",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "1",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "settings",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version-preview}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Response has the required fields - count and value\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.have.property('count');\r\n    expect(responseData).to.have.property('value');\r\n});\r\n\r\n\r\ntest(\"Value array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.exist.and.to.be.an('array');\r\n    expect(responseData.value).to.have.lengthOf(0);\r\n});\r\n\r\n",
                "docs": "Get Check configuration by resource type and id",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Check Configurations Query",
              "filename": "Check Configurations Query.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/checks/queryconfigurations?$expand=settings&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "settings",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get check configurations for multiple resources by resource type and id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Check Configurations Update",
              "filename": "Check Configurations Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/checks/configurations/{{configurationId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "configurationId",
                    "value": "{{configurationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {},\n  \"createdBy\": {},\n  \"createdOn\": \"2004-12-15T17:10:23.783Z\",\n  \"isDisabled\": true,\n  \"issue\": {},\n  \"modifiedBy\": {},\n  \"modifiedOn\": \"2016-08-20T13:25:26.196Z\",\n  \"timeout\": 98370199,\n  \"id\": \"<integer>\",\n  \"resource\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update check configuration",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Check Evaluations",
          "filename": "Check Evaluations",
          "root": {
            "docs": "[Check Evaluations - REST API (Azure DevOps Approvals And Checks) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/approvalsandchecks/check-evaluations?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Check Evaluations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Check Evaluations Evaluate",
              "filename": "Check Evaluations Evaluate.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/checks/runs?$expand=none&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"context\": {\n    \"item\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"resources\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Initiate an evaluation for a check in a pipeline",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Check Evaluations Get",
              "filename": "Check Evaluations Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/checks/runs/{{checkSuiteId}}?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "checkSuiteId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 404\", function () {\n  expect(res.getStatus()).to.equal(404);\n});\n\n\ntest(\"Response has the required fields\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData).to.be.an('object');\n    expect(responseData).to.include.all.keys('_links', 'completedDate', 'message', 'status', 'context', 'id');\n});\n\n\ntest(\"Validate context object contains expected fields\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.context).to.be.an('object');\n    expect(responseData.context.item).to.exist;\n    expect(responseData.context.type).to.exist;\n});\n\n\ntest(\"CompletedDate is in a valid date format\", function () {\n    const responseData = res.getBody();\n\n    expect(responseData.completedDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/, \"CompletedDate should be in valid date format\");\n});\n\n\ntest(\"Verify that the response message is 'Page not found'\", function () {\n  const responseData = res.getBody()?.toString();\n  expect(responseData).to.include(\"Page not found\");\n});\n\n",
                "docs": "Get details for a specific check evaluation",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pipeline Permissions",
          "filename": "Pipeline Permissions",
          "root": {
            "docs": "[Pipeline Permissions - REST API (Azure DevOps Approvals And Checks) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/approvalsandchecks/pipeline-permissions?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Pipeline Permissions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pipeline Permissions Get",
              "filename": "Pipeline Permissions Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/pipelinepermissions/{{resourceType}}/{{resourceId}}?api-version={{api-version-preview}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version-preview}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Validate the structure of the resource object\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.resource).to.exist.and.to.be.an('object');\r\n    expect(responseData.resource.type).to.exist.and.to.be.a('string');\r\n    expect(responseData.resource.id).to.exist.and.to.be.a('string');\r\n});\r\n\r\n\r\ntest(\"Response contains the required fields - type, id, pipelines\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.resource.type).to.exist;\r\n    expect(responseData.resource.id).to.exist;\r\n    expect(responseData.pipelines).to.exist;\r\n});\r\n\r\n",
                "docs": "Given a ResourceType and ResourceId, returns authorized definitions for that resource.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pipeline Permissions Update Pipeline Permisions For Resource",
              "filename": "Pipeline Permissions Update Pipeline Permisions For Resource.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/pipelinepermissions/{{resourceType}}/{{resourceId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceType",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "{{resourceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"allPipelines\": {\n    \"authorized\": \"<boolean>\",\n    \"authorizedBy\": {\n      \"directoryAlias\": \"oc\",\n      \"id\": \"labore culpa\",\n      \"imageUrl\": \"in sit minim\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"commodo dolor minim consequ\",\n      \"uniqueName\": \"tempor sint occaecat nulla\",\n      \"_links\": {\n        \"links\": {\n          \"dolorc\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"authorizedOn\": \"<dateTime>\"\n  },\n  \"pipelines\": [\n    {\n      \"id\": -53859009,\n      \"authorized\": \"<boolean>\",\n      \"authorizedBy\": {\n        \"directoryAlias\": \"ullamco minim ipsum\",\n        \"id\": \"in ea\",\n        \"imageUrl\": \"sed magna Excepteur cillum\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"sint dolor\",\n        \"uniqueName\": \"deserunt minim do est dolore\",\n        \"_links\": {\n          \"links\": {\n            \"ullamco_b5\": {},\n            \"enim46d\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"authorizedOn\": \"<dateTime>\"\n    },\n    {\n      \"id\": 41893662,\n      \"authorized\": \"<boolean>\",\n      \"authorizedBy\": {\n        \"directoryAlias\": \"consectetur sunt\",\n        \"id\": \"cillum ut consectetur laboris\",\n        \"imageUrl\": \"et\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"exercitation sunt tempor eiusmod velit\",\n        \"uniqueName\": \"Lorem consequat mollit\",\n        \"_links\": {\n          \"links\": {\n            \"culpa7\": {},\n            \"cillumd\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"authorizedOn\": \"<dateTime>\"\n    }\n  ],\n  \"resource\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Authorizes/Unauthorizes a list of definitions for a given resource.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pipeline Permissions Update Pipeline Permisions For Resources",
              "filename": "Pipeline Permissions Update Pipeline Permisions For Resources.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/pipelinepermissions?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"allPipelines\": {\n      \"authorized\": \"<boolean>\",\n      \"authorizedBy\": {\n        \"directoryAlias\": \"irure sunt mollit laborum\",\n        \"id\": \"cupidatat aliquip in esse\",\n        \"imageUrl\": \"eu\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"dolore consectetur velit \",\n        \"uniqueName\": \"incididunt dolore \",\n        \"_links\": {\n          \"links\": {\n            \"Ut_c\": {},\n            \"deserunt0\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"authorizedOn\": \"<dateTime>\"\n    },\n    \"pipelines\": [\n      {\n        \"id\": -15542583,\n        \"authorized\": \"<boolean>\",\n        \"authorizedBy\": {\n          \"directoryAlias\": \"sint cupidatat mollit ea ad\",\n          \"id\": \"eu consequat amet ea\",\n          \"imageUrl\": \"amet elit mollit Ut exercitation\",\n          \"inactive\": true,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"dolore veniam officia\",\n          \"uniqueName\": \"dolor exercitation consequat\",\n          \"_links\": {\n            \"links\": {\n              \"occaecat_f93\": {},\n              \"reprehenderit_82\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"authorizedOn\": \"<dateTime>\"\n      },\n      {\n        \"id\": -26376826,\n        \"authorized\": \"<boolean>\",\n        \"authorizedBy\": {\n          \"directoryAlias\": \"aute ipsum in occaecat amet\",\n          \"id\": \"aute culpa ve\",\n          \"imageUrl\": \"laboris dolor id\",\n          \"inactive\": false,\n          \"isAadIdentity\": false,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"deserunt irure in quis fugiat\",\n          \"uniqueName\": \"adipisicing pariatur\",\n          \"_links\": {\n            \"links\": {\n              \"qui8b\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"authorizedOn\": \"<dateTime>\"\n      }\n    ],\n    \"resource\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"allPipelines\": {\n      \"authorized\": \"<boolean>\",\n      \"authorizedBy\": {\n        \"directoryAlias\": \"ex\",\n        \"id\": \"ipsum sed dolor\",\n        \"imageUrl\": \"ut\",\n        \"inactive\": false,\n        \"isAadIdentity\": true,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"id ullamco\",\n        \"uniqueName\": \"magna ex nostrud fugiat\",\n        \"_links\": {\n          \"links\": {\n            \"ea_d\": {},\n            \"elit1\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"authorizedOn\": \"<dateTime>\"\n    },\n    \"pipelines\": [\n      {\n        \"id\": 88408204,\n        \"authorized\": \"<boolean>\",\n        \"authorizedBy\": {\n          \"directoryAlias\": \"minim do consequat aliqua\",\n          \"id\": \"exercitation ad elit\",\n          \"imageUrl\": \"nisi\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"ut enim occaecat nostrud\",\n          \"uniqueName\": \"dolore Ut laborum\",\n          \"_links\": {\n            \"links\": {\n              \"ullamcoc\": {},\n              \"proident35\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"authorizedOn\": \"<dateTime>\"\n      },\n      {\n        \"id\": -20269853,\n        \"authorized\": \"<boolean>\",\n        \"authorizedBy\": {\n          \"directoryAlias\": \"sunt sint id sed\",\n          \"id\": \"sint esse\",\n          \"imageUrl\": \"ex laboris\",\n          \"inactive\": true,\n          \"isAadIdentity\": true,\n          \"isContainer\": false,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"magna ipsum sed non esse\",\n          \"uniqueName\": \"velit culpa reprehenderit dolor amet\",\n          \"_links\": {\n            \"links\": {\n              \"temporc\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"authorizedOn\": \"<dateTime>\"\n      }\n    ],\n    \"resource\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Batch API to authorize/unauthorize a list of definitions for a multiple resources.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Account",
      "filename": "Account",
      "root": {
        "docs": "[Accounts REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/account/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Account"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Accounts",
          "filename": "Accounts",
          "root": {
            "docs": "[Accounts - REST API (Azure DevOps Accounts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/account/accounts?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Accounts"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Accounts List",
              "filename": "Accounts List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{vsServer}}/_apis/accounts?memberId=pgallucci&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "memberId",
                    "value": "pgallucci",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "ownerId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "properties",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 401\", function () {\n    expect(res.getStatus()).to.equal(401);\n});\n\n\ntest(\"Response Content-Type is text/xml\", function () {\n    expect(res.getHeader(\"Content-Type\")).to.include(\"text/xml\");\n});\n\n\ntest(\"Response body is not empty\", function () {\n    const responseData = xml2Json(res.getBody()?.toString());\n    \n    expect(responseData).to.not.be.empty;\n});\n\n\ntest(\"Ensure that the required parameters ownerId or memberId are present in the request and the response\", function () {\n//     const requestData = pm.request.url.query.toObject();\n    const responseData = xml2Json(res.getBody()?.toString());\n    \n    expect(requestData).to.include.any.keys('ownerId', 'memberId');\n    expect(responseData).to.include.any.keys('ownerId', 'memberId');\n});\n\n",
                "docs": "Get a list of accounts for a specific owner or a specific member. One of the following parameters is required: ownerId, memberId.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Artifacts",
      "filename": "Artifacts",
      "root": {
        "docs": "Service:Artifacts",
        "meta": {
          "name": "Artifacts"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Feed Recycle Bin",
          "filename": "Feed Recycle Bin",
          "root": {
            "docs": "[Feed Recycle Bin - REST API (Azure DevOps Artifacts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/feed-recycle-bin?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Feed Recycle Bin"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Feed Recycle Bin List",
              "filename": "Feed Recycle Bin List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feedrecyclebin?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Query for feeds within the recycle bin.\n\nIf the project parameter is present, gets all feeds in recycle bin in the given project.\nIf omitted, gets all feeds in recycle bin in the organization.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed Recycle Bin Permanent Delete Feed",
              "filename": "Feed Recycle Bin Permanent Delete Feed.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feedrecyclebin/{{feedId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed Recycle Bin Restore Deleted Feed",
              "filename": "Feed Recycle Bin Restore Deleted Feed.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feedrecyclebin/{{feedId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Feed  Management",
          "filename": "Feed  Management",
          "root": {
            "docs": "[Feed Management - REST API (Azure DevOps Artifacts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/feed-management?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Feed  Management"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Feed  Management Create Feed View",
              "filename": "Feed  Management Create Feed View.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/views?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"velit7\": {},\n      \"est_10\": {}\n    }\n  },\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"type\": \"none\",\n  \"url\": \"<string>\",\n  \"visibility\": \"private\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new view on the referenced feed.\n\nThe project parameter must be supplied if the feed was created in a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Create Feed",
              "filename": "Feed  Management Create Feed.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {},\n  \"badgesEnabled\": true,\n  \"defaultViewId\": \"urn:uuid:2706b571-d6d8-7978-3d85-513d4dd24f77\",\n  \"deletedDate\": \"1985-11-20T16:34:08.240Z\",\n  \"description\": \"deserunt minim ipsum ea\",\n  \"hideDeletedPackageVersions\": true,\n  \"permanentDeletedDate\": \"1977-04-18T23:28:46.256Z\",\n  \"scheduledPermanentDeleteDate\": \"1954-09-14T17:53:19.105Z\",\n  \"upstreamEnabledChangedDate\": \"1988-10-21T04:50:55.893Z\",\n  \"url\": \"ea aliqua\",\n  \"capabilities\": \"upstreamV2\",\n  \"fullyQualifiedId\": \"<string>\",\n  \"fullyQualifiedName\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"isReadOnly\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"project\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"visibility\": \"<string>\"\n  },\n  \"upstreamEnabled\": \"<boolean>\",\n  \"upstreamSources\": [\n    {\n      \"deletedDate\": \"<dateTime>\",\n      \"displayLocation\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"internalUpstreamCollectionId\": \"<uuid>\",\n      \"internalUpstreamFeedId\": \"<uuid>\",\n      \"internalUpstreamProjectId\": \"<uuid>\",\n      \"internalUpstreamViewId\": \"<uuid>\",\n      \"location\": \"<string>\",\n      \"name\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"serviceEndpointId\": \"<uuid>\",\n      \"serviceEndpointProjectId\": \"<uuid>\",\n      \"status\": \"ok\",\n      \"statusDetails\": [\n        {\n          \"reason\": \"<string>\"\n        },\n        {\n          \"reason\": \"<string>\"\n        }\n      ],\n      \"upstreamSourceType\": \"internal\"\n    },\n    {\n      \"deletedDate\": \"<dateTime>\",\n      \"displayLocation\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"internalUpstreamCollectionId\": \"<uuid>\",\n      \"internalUpstreamFeedId\": \"<uuid>\",\n      \"internalUpstreamProjectId\": \"<uuid>\",\n      \"internalUpstreamViewId\": \"<uuid>\",\n      \"location\": \"<string>\",\n      \"name\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"serviceEndpointId\": \"<uuid>\",\n      \"serviceEndpointProjectId\": \"<uuid>\",\n      \"status\": \"disabled\",\n      \"statusDetails\": [\n        {\n          \"reason\": \"<string>\"\n        },\n        {\n          \"reason\": \"<string>\"\n        }\n      ],\n      \"upstreamSourceType\": \"public\"\n    }\n  ],\n  \"view\": {\n    \"_links\": {\n      \"links\": {\n        \"sint_2\": {},\n        \"elit_d\": {}\n      }\n    },\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"release\",\n    \"url\": \"<string>\",\n    \"visibility\": \"private\"\n  },\n  \"viewId\": \"<uuid>\",\n  \"viewName\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a feed, a container for various package types.\n\nFeeds can be created in a project if the project parameter is included in the request url.\nIf the project parameter is omitted, the feed will not be associated with a project and will be created at the organization level.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Delete Feed View",
              "filename": "Feed  Management Delete Feed View.bru",
              "seq": 10,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/views/{{viewId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "viewId",
                    "value": "{{viewId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a feed view.\n\nThe project parameter must be supplied if the feed was created in a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Delete Feed",
              "filename": "Feed  Management Delete Feed.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Remove a feed and all its packages. The feed moves to the recycle bin and is reversible.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Get Feed Permissions",
              "filename": "Feed  Management Get Feed Permissions.bru",
              "seq": 6,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/permissions?includeIds=false&excludeInheritedPermissions=true&includeDeletedFeeds=false&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeIds",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "excludeInheritedPermissions",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDeletedFeeds",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 404\", function () {\r\n    expect(res.getStatus()).to.equal(404);\r\n});\r\n\r\n\r\ntest(\"Response content type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Validate that the error message is not empty\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData.message).to.exist.and.to.not.be.empty;\r\n});\r\n\r\n\r\ntest(\"Project parameter is omitted when feed is not associated with any project\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n//     expect(pm.request.url.query).to.not.include(\"project\", \"Project parameter should be omitted\");\r\n});\r\n\r\n",
                "docs": "Get the permissions for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Get Feed View",
              "filename": "Feed  Management Get Feed View.bru",
              "seq": 11,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/views/{{viewId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 404\", function () {\r\n    expect(res.getStatus()).to.equal(404);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData._links).to.exist;\r\n    expect(responseData.id).to.exist;\r\n    expect(responseData.name).to.exist;\r\n    expect(responseData.type).to.exist;\r\n    expect(responseData.url).to.exist;\r\n    expect(responseData.visibility).to.exist;\r\n});\r\n\r\n\r\ntest(\"Links object is present and contains expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData._links).to.exist.and.to.be.an('object');\r\n    expect(responseData._links).to.have.property('links').to.be.an('object');\r\n    expect(Object.keys(responseData._links.links)).to.have.lengthOf(2);\r\n});\r\n\r\n\r\ntest(\"Response time is less than 200ms\", function () {\r\n    expect(res.getResponseTime()).to.be.below(200);\r\n});\r\n\r\ntest(\"Id is a non-empty string\", function () {\r\n    const responseData = res.getBody();\r\n    expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r\n});\r\n\r\ntest(\"Verify that the innerException is null\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.innerException).to.be.null;\r\n});\r\n\r\n",
                "docs": "Get a view by Id.\n\nThe project parameter must be supplied if the feed was created in a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Get Feed Views",
              "filename": "Feed  Management Get Feed Views.bru",
              "seq": 9,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/views?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 404\", function () {\r\n    expect(res.getStatus()).to.equal(404);\r\n});\r\n\r\n\r\ntest(\"Response time is less than 200ms\", function () {\r\n    expect(res.getResponseTime()).to.be.below(200);\r\n});\r\n\r\ntest(\"Verify that _links object is present in the response\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('array');\r\n    responseData.forEach(function(view) {\r\n        expect(view._links).to.exist;\r\n    });\r\n});\r\n\r\n\r\ntest(\"Project parameter is required if the feed was created in a project\", function () {\r\n    const responseData = res.getBody();\r\n    expect(responseData).to.have.property('message', 'The project parameter must be supplied if the feed was created in a project.');\r\n});\r\n\r\n\r\ntest(\"Response content type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n",
                "docs": "Get all views for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Get Feed",
              "filename": "Feed  Management Get Feed.bru",
              "seq": 4,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}?includeDeletedUpstreams=false&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeDeletedUpstreams",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields - count and value\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData).to.have.property('count');\r\n    expect(responseData).to.have.property('value');\r\n});\r\n\r\n\r\ntest(\"UpstreamSources array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.upstreamSources).to.exist.and.to.be.an('array');\r\n    expect(responseData.upstreamSources).to.have.lengthOf(1); // Replace 1 with the expected number of elements\r\n});\r\n\r\n\r\ntest(\"UpstreamEnabled should be either true or false\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.upstreamEnabled).to.be.oneOf([true, false]);\r\n});\r\n\r\n\r\ntest(\"Project parameter is omitted when feed is not associated with any project\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.project).to.not.exist;\r\n});\r\n\r\n",
                "docs": "Get the settings for a specific feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Get Feeds",
              "filename": "Feed  Management Get Feeds.bru",
              "seq": 2,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/feeds?feedRole=custom&includeDeletedUpstreams=false&includeUrls=false&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "feedRole",
                    "value": "custom",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDeletedUpstreams",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeUrls",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response Content-Type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Response body contains 'count' and 'value' fields\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData).to.have.property('count');\r\n    expect(responseData).to.have.property('value');\r\n});\r\n\r\n\r\ntest(\"UpstreamSources array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.upstreamSources).to.exist.and.to.be.an('array');\r\n    expect(responseData.upstreamSources).to.have.lengthOf(1);\r\n});\r\n\r\n\r\ntest(\"Name and description fields are non-empty strings\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('array').that.is.not.empty;\r\n    \r\n    responseData.forEach(feed => {\r\n        expect(feed.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r\n        expect(feed.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");\r\n    });\r\n});\r\n\r\n",
                "docs": "Get all feeds in an account where you have the provided role access.\n\nIf the project parameter is present, gets all feeds in the given project.\nIf omitted, gets all feeds in the organization.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Set Feed Permissions",
              "filename": "Feed  Management Set Feed Permissions.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/permissions?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"displayName\": \"<string>\",\n    \"identityDescriptor\": {\n      \"identifier\": \"<string>\",\n      \"identityType\": \"<string>\"\n    },\n    \"identityId\": \"<uuid>\",\n    \"isInheritedRole\": \"<boolean>\",\n    \"role\": \"collaborator\"\n  },\n  {\n    \"displayName\": \"<string>\",\n    \"identityDescriptor\": {\n      \"identifier\": \"<string>\",\n      \"identityType\": \"<string>\"\n    },\n    \"identityId\": \"<uuid>\",\n    \"isInheritedRole\": \"<boolean>\",\n    \"role\": \"administrator\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the permissions on a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Update Feed View",
              "filename": "Feed  Management Update Feed View.bru",
              "seq": 12,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/views/{{viewId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "viewId",
                    "value": "{{viewId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"velit7\": {},\n      \"est_10\": {}\n    }\n  },\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"type\": \"none\",\n  \"url\": \"<string>\",\n  \"visibility\": \"private\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a view.\n\nThe project parameter must be supplied if the feed was created in a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Feed  Management Update Feed",
              "filename": "Feed  Management Update Feed.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"allowUpstreamNameConflict\": \"<boolean>\",\n  \"badgesEnabled\": \"<boolean>\",\n  \"defaultViewId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"hideDeletedPackageVersions\": \"<boolean>\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"upstreamEnabled\": \"<boolean>\",\n  \"upstreamSources\": [\n    {\n      \"deletedDate\": \"<dateTime>\",\n      \"displayLocation\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"internalUpstreamCollectionId\": \"<uuid>\",\n      \"internalUpstreamFeedId\": \"<uuid>\",\n      \"internalUpstreamProjectId\": \"<uuid>\",\n      \"internalUpstreamViewId\": \"<uuid>\",\n      \"location\": \"<string>\",\n      \"name\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"serviceEndpointId\": \"<uuid>\",\n      \"serviceEndpointProjectId\": \"<uuid>\",\n      \"status\": \"ok\",\n      \"statusDetails\": [\n        {\n          \"reason\": \"<string>\"\n        },\n        {\n          \"reason\": \"<string>\"\n        }\n      ],\n      \"upstreamSourceType\": \"internal\"\n    },\n    {\n      \"deletedDate\": \"<dateTime>\",\n      \"displayLocation\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"internalUpstreamCollectionId\": \"<uuid>\",\n      \"internalUpstreamFeedId\": \"<uuid>\",\n      \"internalUpstreamProjectId\": \"<uuid>\",\n      \"internalUpstreamViewId\": \"<uuid>\",\n      \"location\": \"<string>\",\n      \"name\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"serviceEndpointId\": \"<uuid>\",\n      \"serviceEndpointProjectId\": \"<uuid>\",\n      \"status\": \"ok\",\n      \"statusDetails\": [\n        {\n          \"reason\": \"<string>\"\n        },\n        {\n          \"reason\": \"<string>\"\n        }\n      ],\n      \"upstreamSourceType\": \"internal\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Change the attributes of a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Artifact  Details",
          "filename": "Artifact  Details",
          "root": {
            "docs": "[Artifact Details - REST API (Azure DevOps Artifacts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/artifact-details?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Artifact  Details"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Artifact  Details Get Badge",
              "filename": "Artifact  Details Get Badge.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/public/packaging/Feeds/{{feedId}}/Packages/{{packageId}}/badge?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "image/svg+xml",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Generate a SVG badge for the latest version of a package.  The generated SVG is typically used as the image in an HTML link which takes users to the feed containing the package to accelerate discovery and consumption.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Artifact  Details Get Package Version Provenance",
              "filename": "Artifact  Details Get Package Version Provenance.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/Packages/{{packageId}}/Versions/{{packageVersionId}}/provenance?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersionId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets provenance for a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Artifact  Details Get Package Version",
              "filename": "Artifact  Details Get Package Version.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/Packages/{{packageId}}/versions/{{packageVersionId}}?includeUrls=<boolean>&isListed=<boolean>&isDeleted=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeUrls",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isListed",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageId",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersionId",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get details about a specific package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Artifact  Details Get Package Versions",
              "filename": "Artifact  Details Get Package Versions.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/Packages/{{packageId}}/versions?includeUrls=<boolean>&isListed=<boolean>&isDeleted=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeUrls",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isListed",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageId",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of package versions, optionally filtering by state.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Artifact  Details Get Package",
              "filename": "Artifact  Details Get Package.bru",
              "seq": 3,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/packages/{{packageId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeAllVersions",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "includeUrls",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "isListed",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "isRelease",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "includeDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "includeDescription",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response Content-Type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Verify that the versions array is present and contains at least one element\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.versions).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1);\r\n});\r\n\r\n\r\ntest(\"Publish date in versions array is in a valid date format\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData.versions).to.be.an('array');\r\n    responseData.versions.forEach(function(version) {\r\n        expect(version.publishDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/);\r\n    });\r\n});\r\n\r\n",
                "docs": "Get details about a specific package.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Artifact  Details Get Packages",
              "filename": "Artifact  Details Get Packages.bru",
              "seq": 2,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/packages?protocolType=NuGet&normalizedPackageName=7zip&includeUrls=true&includeAllVersions=true&isListed=true&getTopPackageVersions=true&isRelease=false&includeDescription=false&$top=2&$skip=0&includeDeleted=false&isCached=false&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "protocolType",
                    "value": "NuGet",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "normalizedPackageName",
                    "value": "7zip",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeUrls",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeAllVersions",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isListed",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "getTopPackageVersions",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isRelease",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDescription",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "2",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "0",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDeleted",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isCached",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "directUpstreamId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": false
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields - count and value\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData).to.have.property('count');\r\n    expect(responseData).to.have.property('value');\r\n});\r\n\r\n\r\ntest(\"Value array is present and has the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.have.property('value').that.is.an('array').and.to.have.lengthOf(0);\r\n});\r\n\r\n\r\ntest(\"Versions array contains necessary fields\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.versions).to.be.an('array').that.is.not.empty;\r\n    \r\n    responseData.versions.forEach(function(version) {\r\n        expect(version).to.have.property('id');\r\n        expect(version).to.have.property('name');\r\n        expect(version).to.have.property('protocolType');\r\n        expect(version).to.have.property('url');\r\n    });\r\n});\r\n\r\n",
                "docs": "Get details about all of the packages in the feed. Use the various filters to include or exclude information from the result set.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Artifact  Details Query Package Metrics",
              "filename": "Artifact  Details Query Package Metrics.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/packagemetricsbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"packageIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Artifact  Details Query Package Version Metrics",
              "filename": "Artifact  Details Query Package Version Metrics.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/Packages/{{packageId}}/versionmetricsbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"packageVersionIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Change  Tracking",
          "filename": "Change  Tracking",
          "root": {
            "docs": "[Change Tracking - REST API (Azure DevOps Artifacts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/change-tracking?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Change  Tracking"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Change  Tracking Get Feed Change",
              "filename": "Change  Tracking Get Feed Change.bru",
              "seq": 2,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/feedchanges/{{feedId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields - count and feedChanges\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData).to.have.property('count');\r\n    expect(responseData).to.have.property('feedChanges');\r\n});\r\n\r\n\r\ntest(\"Verify that the changeType is a non-empty string\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.changeType).to.be.a('string').and.to.have.lengthOf.at.least(1, \"changeType should not be empty\");\r\n});\r\n\r\ntest(\"UpstreamSources array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.upstreamSources).to.be.an('array').and.to.have.lengthOf(1);\r\n});\r\n\r\n\r\ntest(\"Feed continuation token and latest package continuation token are present and non-empty strings\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.feedContinuationToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r\n    expect(responseData.latestPackageContinuationToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r\n});\r\n",
                "docs": "Query a feed to determine its current state.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Change  Tracking Get Feed Changes",
              "filename": "Change  Tracking Get Feed Changes.bru",
              "seq": 1,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/feedchanges?includeDeleted=false&batchSize=10&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeDeleted",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "batchSize",
                    "value": "10",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields - count and feedChanges\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData).to.have.property('count');\r\n    expect(responseData).to.have.property('feedChanges');\r\n});\r\n\r\n\r\ntest(\"FeedChanges array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.feedChanges).to.exist.and.to.be.an('array');\r\n    expect(responseData.feedChanges).to.have.lengthOf(responseData.count, \"Number of elements should match the count\");\r\n});\r\n\r\n\r\ntest(\"ChangeType in each feedChanges object is a non-empty string\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.feedChanges).to.be.an('array').and.to.have.length.above(0);\r\n    \r\n    responseData.feedChanges.forEach(function(feedChange) {\r\n        expect(feedChange.changeType).to.be.a('string').and.to.have.length.above(0);\r\n    });\r\n});\r\n\r\n",
                "docs": "Query to determine which feeds have changed since the last call, tracked through the provided continuationToken. Only changes to a feed itself are returned and impact the continuationToken, not additions or alterations to packages within the feeds.\n\nIf the project parameter is present, gets all feed changes in the given project.\nIf omitted, gets all feed changes in the organization.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Change  Tracking Get Package Changes",
              "filename": "Change  Tracking Get Package Changes.bru",
              "seq": 3,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/packagechanges?batchSize=10&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "batchSize",
                    "value": "10",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 404\", function () {\r\n    expect(res.getStatus()).to.equal(404);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields - errorCode, eventId, message\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.errorCode).to.exist;\r\n    expect(responseData.eventId).to.exist;\r\n    expect(responseData.message).to.exist;\r\n});\r\n\r\n\r\ntest(\"Status code is 404\", function () {\r\n    expect(res.getStatus()).to.equal(404);\r\n});\r\n\r\ntest(\"Response body must be an object\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.be.an('object');\r\n});\r\n\r\ntest(\"Response body must contain errorCode and eventId\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData.errorCode).to.exist.and.to.be.a('number');\r\n    expect(responseData.eventId).to.exist.and.to.be.a('number');\r\n});\r\n\r\ntest(\"PackageChanges array is present and empty\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.packageChanges).to.exist.and.to.be.an('array').that.is.empty;\r\n});\r\n\r\n\r\ntest(\"Ensure that count field is empty or not present\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.count).to.not.exist;\r\n});\r\n\r\n",
                "docs": "Get a batch of package changes made to a feed.  The changes returned are 'most recent change' so if an Add is followed by an Update before you begin enumerating, you'll only see one change in the batch.  While consuming batches using the continuation token, you may see changes to the same package version multiple times if they are happening as you enumerate.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Provenance",
          "filename": "Provenance",
          "root": {
            "docs": "[Provenance - REST API (Azure DevOps Artifacts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/provenance?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Provenance"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Provenance Create Session",
              "filename": "Provenance Create Session.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/provenance/session/{{protocol}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "protocol",
                    "value": "{{protocol}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {\n    \"cillum_5\": \"<string>\"\n  },\n  \"feed\": \"<string>\",\n  \"source\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a session, a wrapper around a feed that can store additional metadata on the packages published to it.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Recycle  Bin",
          "filename": "Recycle  Bin",
          "root": {
            "docs": "[Recycle Bin - REST API (Azure DevOps Artifacts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/recycle-bin?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Recycle  Bin"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Recycle  Bin Empty Recycle Bin",
              "filename": "Recycle  Bin Empty Recycle Bin.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/RecycleBin/Packages?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queues a job to remove all package versions from a feed's recycle bin",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Recycle  Bin Get Recycle Bin Package Version",
              "filename": "Recycle  Bin Get Recycle Bin Package Version.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/RecycleBin/Packages/{{packageId}}/Versions/{{packageVersionId}}?includeUrls=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeUrls",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersionId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a package version within the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Recycle  Bin Get Recycle Bin Package Versions",
              "filename": "Recycle  Bin Get Recycle Bin Package Versions.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/RecycleBin/Packages/{{packageId}}/Versions?includeUrls=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeUrls",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of package versions within the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Recycle  Bin Get Recycle Bin Package",
              "filename": "Recycle  Bin Get Recycle Bin Package.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/RecycleBin/Packages/{{packageId}}?includeUrls=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeUrls",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a package and all its versions within the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Recycle  Bin Get Recycle Bin Packages",
              "filename": "Recycle  Bin Get Recycle Bin Packages.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/RecycleBin/Packages?protocolType=<string>&packageNameQuery=<string>&includeUrls=<boolean>&$top=<integer>&$skip=<integer>&includeAllVersions=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "protocolType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "packageNameQuery",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeUrls",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeAllVersions",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Query for packages within the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Service  Settings",
          "filename": "Service  Settings",
          "root": {
            "docs": "[Service Settings - REST API (Azure DevOps Artifacts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/service-settings?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Service  Settings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Service  Settings Get Global Permissions",
              "filename": "Service  Settings Get Global Permissions.bru",
              "seq": 1,
              "request": {
                "url": "https://{{feedsServer}}/{{organization}}/_apis/packaging/globalpermissions?includeIds=false&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeIds",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n\ntest(\"Response has the required fields - count and value\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData).to.be.an('object');\n    expect(responseData).to.have.property('count');\n    expect(responseData).to.have.property('value');\n});\n\n\ntest(\"Value array contains objects with non-empty role and identityDescriptor\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.value).to.be.an('array');\n    responseData.value.forEach(function(item) {\n        expect(item.role).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Role should not be empty\");\n        expect(item.identityDescriptor).to.exist.and.to.be.an('object');\n    });\n});\n\n\ntest(\"Content type is application/json\", function () {\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\n});\n\n\ntest(\"Description is present and matches the expected description\", function () {\n  const responseData = res.getBody();\n  \n  expect(responseData).to.be.an('object');\n  expect(responseData.description).to.exist.and.to.equal(\"Get all service-wide feed creation and administration permissions.\");\n});\n\n",
                "docs": "Get all service-wide feed creation and administration permissions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Service  Settings Set Global Permissions",
              "filename": "Service  Settings Set Global Permissions.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/packaging/globalpermissions?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"identityDescriptor\": {\n      \"identifier\": \"<string>\",\n      \"identityType\": \"<string>\"\n    },\n    \"identityId\": \"<uuid>\",\n    \"role\": \"custom\"\n  },\n  {\n    \"identityDescriptor\": {\n      \"identifier\": \"<string>\",\n      \"identityType\": \"<string>\"\n    },\n    \"identityId\": \"<uuid>\",\n    \"role\": \"custom\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set service-wide permissions that govern feed creation and administration.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Retention  Policies",
          "filename": "Retention  Policies",
          "root": {
            "docs": "[Retention Policies - REST API (Azure DevOps Artifacts) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/retention-policies?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Retention  Policies"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Retention  Policies Delete Retention Policy",
              "filename": "Retention  Policies Delete Retention Policy.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/retentionpolicies?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete the retention policy for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Retention  Policies Get Retention Policy",
              "filename": "Retention  Policies Get Retention Policy.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/retentionpolicies?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the retention policy for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Retention  Policies Set Retention Policy",
              "filename": "Retention  Policies Set Retention Policy.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/Feeds/{{feedId}}/retentionpolicies?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"ageLimitInDays\": \"<integer>\",\n  \"countLimit\": \"<integer>\",\n  \"daysToKeepRecentlyDownloadedPackages\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set the retention policy for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Artifacts Package Types",
      "filename": "Artifacts Package Types",
      "root": {
        "meta": {
          "name": "Artifacts Package Types"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Maven",
          "filename": "Maven",
          "root": {
            "docs": "[Maven - REST API (Azure DevOps Artifacts Package Types) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifactspackagetypes/maven?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Maven"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Maven Delete Package Version From Recycle Bin",
              "filename": "Maven Delete Package Version From Recycle Bin.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/RecycleBin/groups/{{groupId}}/artifacts/{{artifactId}}/versions/{{version}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "version",
                    "value": "{{version}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Permanently delete a package from a feed's recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Delete Package Version",
              "filename": "Maven Delete Package Version.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/groups/{{groupId}}/artifacts/{{artifactId}}/versions/{{version}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "version",
                    "value": "{{version}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a package version from the feed and move it to the feed's recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Download Package",
              "filename": "Maven Download Package.bru",
              "seq": 10,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/maven/{{groupId}}/{{artifactId}}/{{version}}/{{fileName}}/content?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "version",
                    "value": "{{version}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Fulfills Maven package file download requests by either returning the URL of the requested package file or, in the case of Azure DevOps Server (OnPrem), returning the content as a stream.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Get Package Version From Recycle Bin",
              "filename": "Maven Get Package Version From Recycle Bin.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/RecycleBin/groups/{{groupId}}/artifacts/{{artifactId}}/versions/{{version}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "version",
                    "value": "{{version}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Get Package Version",
              "filename": "Maven Get Package Version.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/groups/{{groupId}}/artifacts/{{artifactId}}/versions/{{version}}?showDeleted=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "showDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "version",
                    "value": "{{version}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Get Upstreaming Behavior",
              "filename": "Maven Get Upstreaming Behavior.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/groups/{{groupId}}/artifacts/{{artifactId}}/upstreaming?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the upstreaming behavior of a package within the context of a feed",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Restore Package Version From Recycle Bin",
              "filename": "Maven Restore Package Version From Recycle Bin.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/RecycleBin/groups/{{groupId}}/artifacts/{{artifactId}}/versions/{{version}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "version",
                    "value": "{{version}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deleted\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Restore a package version from the recycle bin to its associated feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Set Upstreaming Behavior",
              "filename": "Maven Set Upstreaming Behavior.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/groups/{{groupId}}/artifacts/{{artifactId}}/upstreaming?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"versionsFromExternalUpstreams\": \"allowExternalVersions\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set the upstreaming behavior of a package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Update Package Version",
              "filename": "Maven Update Package Version.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/groups/{{groupId}}/artifacts/{{artifactId}}/versions/{{version}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "version",
                    "value": "{{version}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"views\": {\n    \"from\": \"<string>\",\n    \"op\": \"test\",\n    \"path\": \"<string>\",\n    \"value\": {}\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update state for a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Update Package Versions",
              "filename": "Maven Update Package Versions.bru",
              "seq": 11,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/maven/packagesbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"promote\",\n  \"packages\": [\n    {\n      \"artifact\": \"<string>\",\n      \"group\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"artifact\": \"<string>\",\n      \"group\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Maven Update Recycle Bin Packages",
              "filename": "Maven Update Recycle Bin Packages.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feed}}/maven/RecycleBin/packagesBatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feed",
                    "value": "{{feed}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"promote\",\n  \"packages\": [\n    {\n      \"artifact\": \"<string>\",\n      \"group\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"artifact\": \"<string>\",\n      \"group\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Npm",
          "filename": "Npm",
          "root": {
            "docs": "[Npm - REST API (Azure DevOps Artifacts Package Types) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifactspackagetypes/npm?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Npm"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Npm Delete Package Version From Recycle Bin",
              "filename": "Npm Delete Package Version From Recycle Bin.bru",
              "seq": 19,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a package version without an npm scope from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Delete Scoped Package Version From Recycle Bin",
              "filename": "Npm Delete Scoped Package Version From Recycle Bin.bru",
              "seq": 16,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/RecycleBin/packages/@{{packageScope}}/{{unscopedPackageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a package version with an npm scope from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Download Package",
              "filename": "Npm Download Package.bru",
              "seq": 13,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packages/{{packageName}}/versions/{{packageVersion}}/content?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get an unscoped npm package.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Download Scoped Package",
              "filename": "Npm Download Scoped Package.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packages/@{{packageScope}}/{{unscopedPackageName}}/versions/{{packageVersion}}/content?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Get Package Readme",
              "filename": "Npm Get Package Readme.bru",
              "seq": 14,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packages/{{packageName}}/versions/{{packageVersion}}/readme?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "text/plain",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the Readme for a package version that has no npm scope.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Get Package Upstreaming Behavior",
              "filename": "Npm Get Package Upstreaming Behavior.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packages/@{{packageScope}}/{{unscopedPackageName}}/upstreaming?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the upstreaming behavior of the (scoped) package within the context of a feed",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Get Package Version From Recycle Bin",
              "filename": "Npm Get Package Version From Recycle Bin.bru",
              "seq": 20,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about an unscoped package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Get Package Version",
              "filename": "Npm Get Package Version.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about an unscoped package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Get Scoped Package Readme",
              "filename": "Npm Get Scoped Package Readme.bru",
              "seq": 10,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packages/@{{packageScope}}/{{unscopedPackageName}}/versions/{{packageVersion}}/readme?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "text/plain",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the Readme for a package version with an npm scope.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Get Scoped Package Upstreaming Behavior",
              "filename": "Npm Get Scoped Package Upstreaming Behavior.bru",
              "seq": 11,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packages/{{packageName}}/upstreaming?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the upstreaming behavior of the (unscoped) package within the context of a feed",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Get Scoped Package Version From Recycle Bin",
              "filename": "Npm Get Scoped Package Version From Recycle Bin.bru",
              "seq": 17,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/RecycleBin/packages/@{{packageScope}}/{{unscopedPackageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a scoped package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Get Scoped Package Version",
              "filename": "Npm Get Scoped Package Version.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/@{{packageScope}}/{{unscopedPackageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a scoped package version (such as @scope/name).\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Restore Package Version From Recycle Bin",
              "filename": "Npm Restore Package Version From Recycle Bin.bru",
              "seq": 21,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deleted\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Restore a package version without an npm scope from the recycle bin to its feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Restore Scoped Package Version From Recycle Bin",
              "filename": "Npm Restore Scoped Package Version From Recycle Bin.bru",
              "seq": 18,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/RecycleBin/packages/@{{packageScope}}/{{unscopedPackageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deleted\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Restore a package version with an npm scope from the recycle bin to its feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Set Scoped Upstreaming Behavior",
              "filename": "Npm Set Scoped Upstreaming Behavior.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packages/@{{packageScope}}/{{unscopedPackageName}}/upstreaming?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"versionsFromExternalUpstreams\": \"allowExternalVersions\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set the upstreaming behavior of a (scoped) package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Set Upstreaming Behavior",
              "filename": "Npm Set Upstreaming Behavior.bru",
              "seq": 12,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packages/{{packageName}}/upstreaming?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"versionsFromExternalUpstreams\": \"allowExternalVersions\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set the upstreaming behavior of a (scoped) package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Unpublish Package",
              "filename": "Npm Unpublish Package.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Unpublish an unscoped package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Unpublish Scoped Package",
              "filename": "Npm Unpublish Scoped Package.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/@{{packageScope}}/{{unscopedPackageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Unpublish a scoped package version (such as @scope/name).\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Update Package",
              "filename": "Npm Update Package.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deprecateMessage\": \"<string>\",\n  \"views\": {\n    \"from\": \"<string>\",\n    \"op\": \"add\",\n    \"path\": \"<string>\",\n    \"value\": {}\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Update Packages",
              "filename": "Npm Update Packages.bru",
              "seq": 15,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/packagesbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"permanentDelete\",\n  \"packages\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Update Recycle Bin Packages",
              "filename": "Npm Update Recycle Bin Packages.bru",
              "seq": 22,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/RecycleBin/PackagesBatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"permanentDelete\",\n  \"packages\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Npm Update Scoped Package",
              "filename": "Npm Update Scoped Package.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/npm/@{{packageScope}}/{{unscopedPackageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "unscopedPackageName",
                    "value": "{{unscopedPackageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deprecateMessage\": \"<string>\",\n  \"views\": {\n    \"from\": \"<string>\",\n    \"op\": \"add\",\n    \"path\": \"<string>\",\n    \"value\": {}\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "NuGet",
          "filename": "NuGet",
          "root": {
            "docs": "[NuGet - REST API (Azure DevOps Artifacts Package Types) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifactspackagetypes/nuget?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "NuGet"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Nu Get Delete Package Version From Recycle Bin",
              "filename": "Nu Get Delete Package Version From Recycle Bin.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a package version from a feed's recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Delete Package Version",
              "filename": "Nu Get Delete Package Version.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Send a package version from the feed to its paired recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Download Package",
              "filename": "Nu Get Download Package.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/packages/{{packageName}}/versions/{{packageVersion}}/content?sourceProtocolVersion=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "sourceProtocolVersion",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Download a package version directly.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Get Package Version From Recycle Bin",
              "filename": "Nu Get Get Package Version From Recycle Bin.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "View a package version's deletion/recycled status\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Get Package Version",
              "filename": "Nu Get Get Package Version.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/packages/{{packageName}}/versions/{{packageVersion}}?showDeleted=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "showDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Get Upstreaming Behavior",
              "filename": "Nu Get Get Upstreaming Behavior.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/packages/{{packageName}}/upstreaming?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the upstreaming behavior of a package within the context of a feed",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Restore Package Version From Recycle Bin",
              "filename": "Nu Get Restore Package Version From Recycle Bin.bru",
              "seq": 10,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deleted\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Restore a package version from a feed's recycle bin back into the active feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Set Upstreaming Behavior",
              "filename": "Nu Get Set Upstreaming Behavior.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/packages/{{packageName}}/upstreaming?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"versionsFromExternalUpstreams\": \"auto\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set the upstreaming behavior of a package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Update Package Version",
              "filename": "Nu Get Update Package Version.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"listed\": \"<boolean>\",\n  \"views\": {\n    \"from\": \"<string>\",\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {}\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set mutable state on a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Update Package Versions",
              "filename": "Nu Get Update Package Versions.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/packagesbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"permanentDelete\",\n  \"packages\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nu Get Update Recycle Bin Package Versions",
              "filename": "Nu Get Update Recycle Bin Package Versions.bru",
              "seq": 11,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/nuget/RecycleBin/packagesBatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"permanentDelete\",\n  \"packages\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Python",
          "filename": "Python",
          "root": {
            "docs": "[Python - REST API (Azure DevOps Artifacts Package Types) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifactspackagetypes/python?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Python"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Python Delete Package Version From Recycle Bin",
              "filename": "Python Delete Package Version From Recycle Bin.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a package version from the feed, moving it to the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Delete Package Version",
              "filename": "Python Delete Package Version.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a package version, moving it to the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Download Package",
              "filename": "Python Download Package.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/packages/{{packageName}}/versions/{{packageVersion}}/{{fileName}}/content?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Download a python package file directly. This API is intended for manual UI download options, not for programmatic access and scripting.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Get Package Version From Recycle Bin",
              "filename": "Python Get Package Version From Recycle Bin.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Get Package Version",
              "filename": "Python Get Package Version.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/packages/{{packageName}}/versions/{{packageVersion}}?showDeleted=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "showDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Get Upstreaming Behavior",
              "filename": "Python Get Upstreaming Behavior.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/packages/{{packageName}}/upstreaming?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the upstreaming behavior of a package within the context of a feed",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Restore Package Version From Recycle Bin",
              "filename": "Python Restore Package Version From Recycle Bin.bru",
              "seq": 10,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deleted\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Restore a package version from the recycle bin to its associated feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Set Upstreaming Behavior",
              "filename": "Python Set Upstreaming Behavior.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/packages/{{packageName}}/upstreaming?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"versionsFromExternalUpstreams\": \"auto\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set the upstreaming behavior of a package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Update Package Version",
              "filename": "Python Update Package Version.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"views\": {\n    \"from\": \"<string>\",\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {}\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update state for a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Update Package Versions",
              "filename": "Python Update Package Versions.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/packagesbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"permanentDelete\",\n  \"packages\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Python Update Recycle Bin Package Versions",
              "filename": "Python Update Recycle Bin Package Versions.bru",
              "seq": 11,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/pypi/RecycleBin/packagesBatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"permanentDelete\",\n  \"packages\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Universal",
          "filename": "Universal",
          "root": {
            "docs": "[Universal - REST API (Azure DevOps Artifacts Package Types) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifactspackagetypes/universal?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Universal"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Universal Delete Package Version From Recycle Bin",
              "filename": "Universal Delete Package Version From Recycle Bin.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/upack/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a package version from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Universal Delete Package Version",
              "filename": "Universal Delete Package Version.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/upack/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a package version from a feed's recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Universal Get Package Version From Recycle Bin",
              "filename": "Universal Get Package Version From Recycle Bin.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/upack/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about a package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Universal Get Package Version",
              "filename": "Universal Get Package Version.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/upack/packages/{{packageName}}/versions/{{packageVersion}}?showDeleted=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "showDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Show information about a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Universal Restore Package Version From Recycle Bin",
              "filename": "Universal Restore Package Version From Recycle Bin.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/upack/RecycleBin/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deleted\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Restore a package version from the recycle bin to its associated feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Universal Update Package Version",
              "filename": "Universal Update Package Version.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/upack/packages/{{packageName}}/versions/{{packageVersion}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageName",
                    "value": "{{packageName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "packageVersion",
                    "value": "{{packageVersion}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"views\": {\n    \"from\": \"<string>\",\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {}\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update information for a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Universal Update Package Versions",
              "filename": "Universal Update Package Versions.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/upack/packagesbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"restoreToFeed\",\n  \"packages\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Universal Update Recycle Bin Package Versions",
              "filename": "Universal Update Recycle Bin Package Versions.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/packaging/feeds/{{feedId}}/upack/RecycleBin/packagesBatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "feedId",
                    "value": "{{feedId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"data\": {},\n  \"operation\": \"restoreToFeed\",\n  \"packages\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Audit",
      "filename": "Audit",
      "root": {
        "docs": "[Audit REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/audit/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Audit"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Audit Log",
          "filename": "Audit Log",
          "root": {
            "meta": {
              "name": "Audit Log"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Audit Log Query",
              "filename": "Audit Log Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/auditlog?startTime=<dateTime>&endTime=<dateTime>&batchSize=<integer>&continuationToken=<string>&skipAggregation=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "startTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "endTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "batchSize",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "skipAggregation",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queries audit log entries",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Actions",
          "filename": "Actions",
          "root": {
            "meta": {
              "name": "Actions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Actions List",
              "filename": "Actions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/actions?areaName={{areaName}}&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "areaName",
                    "value": "{{areaName}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all auditable actions filterable by area.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Streams",
          "filename": "Streams",
          "root": {
            "meta": {
              "name": "Streams"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Streams Create",
              "filename": "Streams Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/streams?daysToBackfill=<integer>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "daysToBackfill",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"consumerInputs\": {\n    \"cupidatatd\": \"<string>\",\n    \"nisi52\": \"<string>\",\n    \"velita7\": \"<string>\"\n  },\n  \"consumerType\": \"<string>\",\n  \"createdTime\": \"<dateTime>\",\n  \"displayName\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"status\": \"disabledBySystem\",\n  \"statusReason\": \"<string>\",\n  \"updatedTime\": \"<dateTime>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create new Audit Stream",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Streams Delete",
              "filename": "Streams Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/streams/{{streamId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "streamId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete Audit Stream",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Streams Query All Streams",
              "filename": "Streams Query All Streams.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/streams?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Return all Audit Streams scoped to an organization",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Streams Query Stream By Id",
              "filename": "Streams Query Stream By Id.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/streams/{{streamId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "streamId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Return Audit Stream with id of streamId if one exists otherwise throw",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Streams Update Status",
              "filename": "Streams Update Status.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/streams/{{streamId}}?status=disabledBySystem&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "status",
                    "value": "disabledBySystem",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "streamId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update existing Audit Stream status",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Streams Update Stream",
              "filename": "Streams Update Stream.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/streams?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"consumerInputs\": {\n    \"cupidatatd\": \"<string>\",\n    \"nisi52\": \"<string>\",\n    \"velita7\": \"<string>\"\n  },\n  \"consumerType\": \"<string>\",\n  \"createdTime\": \"<dateTime>\",\n  \"displayName\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"status\": \"disabledBySystem\",\n  \"statusReason\": \"<string>\",\n  \"updatedTime\": \"<dateTime>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update existing Audit Stream",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Download Log",
          "filename": "Download Log",
          "root": {
            "meta": {
              "name": "Download Log"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Download Log Download Log",
              "filename": "Download Log Download Log.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/audit/downloadlog?format=<string>&startTime=<dateTime>&endTime=<dateTime>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "format",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "startTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "endTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Downloads audit log entries.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Build",
      "filename": "Build",
      "root": {
        "docs": "[Build REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/build/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Build"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Artifacts",
          "filename": "Artifacts",
          "root": {
            "docs": "Provides methods for working with artifacts produced by builds.",
            "meta": {
              "name": "Artifacts"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Artifacts Create",
              "filename": "Artifacts Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/artifacts?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"resource\": {\n    \"_links\": {\n      \"links\": {\n        \"Ut_ca8\": {}\n      }\n    },\n    \"data\": \"<string>\",\n    \"downloadUrl\": \"<string>\",\n    \"properties\": {\n      \"amet_77a\": \"<string>\",\n      \"ut6d\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"source\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Associates an artifact with a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Artifacts List",
              "filename": "Artifacts List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/artifacts?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets all artifacts for a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Authorizedresources",
          "filename": "Authorizedresources",
          "root": {
            "meta": {
              "name": "Authorizedresources"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Authorizedresources Authorize Project Resources",
              "filename": "Authorizedresources Authorize Project Resources.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/authorizedresources?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"authorized\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"authorized\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Authorizedresources List",
              "filename": "Authorizedresources List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/authorizedresources?type=<string>&id=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "type",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "id",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Badge",
          "filename": "Badge",
          "root": {
            "docs": "Provides methods to generate SVG images representing the status of builds.",
            "meta": {
              "name": "Badge"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Badge Get Build Badge Data",
              "filename": "Badge Get Build Badge Data.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/repos/{{repoType}}/badge?repoId=<string>&branchName=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "repoId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "branchName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repoType",
                    "value": "{{repoType}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a badge that indicates the status of the most recent build for the specified branch.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Badge Get",
              "filename": "Badge Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/public/build/definitions/{{project}}/{{definitionId}}/badge?branchName=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "branchName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "This endpoint is deprecated. Please see the Build Status REST endpoint.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Attachments",
          "filename": "Attachments",
          "root": {
            "meta": {
              "name": "Attachments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Attachments Get",
              "filename": "Attachments Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/{{timelineId}}/{{recordId}}/attachments/{{attachmentType}}/{{attachmentName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a specific attachment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments List",
              "filename": "Attachments List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/attachments/{{type}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "type",
                    "value": "{{attachmentType}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the list of attachments of a specific type that are associated with a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Builds",
          "filename": "Builds",
          "root": {
            "docs": "Provides methods for working with builds.",
            "meta": {
              "name": "Builds"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Builds Delete",
              "filename": "Builds Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get Build Changes",
              "filename": "Builds Get Build Changes.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/changes?continuationToken=<string>&$top=<integer>&includeSourceChange=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeSourceChange",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the changes associated with a build",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get Build Log",
              "filename": "Builds Get Build Log.bru",
              "seq": 10,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/logs/{{logId}}?startLine=<long>&endLine=<long>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "startLine",
                    "value": "<long>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "endLine",
                    "value": "<long>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "logId",
                    "value": "{{logId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets an individual log file for a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get Build Logs",
              "filename": "Builds Get Build Logs.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/logs?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the logs for a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get Build Work Items Refs From Commits",
              "filename": "Builds Get Build Work Items Refs From Commits.bru",
              "seq": 12,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/workitems?$top=<integer>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the work items associated with a build, filtered to specific commits.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get Build Work Items Refs",
              "filename": "Builds Get Build Work Items Refs.bru",
              "seq": 11,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/workitems?$top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the work items associated with a build. Only work items in the same project are returned.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get Changes Between Builds",
              "filename": "Builds Get Changes Between Builds.bru",
              "seq": 13,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/changes?fromBuildId=<integer>&toBuildId=<integer>&$top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "fromBuildId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "toBuildId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the changes made to the repository between two given builds.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get Retention Leases For Build",
              "filename": "Builds Get Retention Leases For Build.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/leases?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets all retention leases that apply to a specific build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get Work Items Between Builds",
              "filename": "Builds Get Work Items Between Builds.bru",
              "seq": 14,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/workitems?fromBuildId=<integer>&toBuildId=<integer>&$top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "fromBuildId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "toBuildId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets all the work items between two builds.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Get",
              "filename": "Builds Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}?propertyFilters=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a build",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds List",
              "filename": "Builds List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds?definitions=<string>&queues=<string>&buildNumber=<string>&minTime=<dateTime>&maxTime=<dateTime>&requestedFor=<string>&reasonFilter=checkInShelveset&statusFilter=notStarted&resultFilter=none&tagFilters=<string>&properties=<string>&$top=<integer>&continuationToken=<string>&maxBuildsPerDefinition=<integer>&deletedFilter=includeDeleted&queryOrder=queueTimeDescending&branchName=<string>&buildIds=<string>&repositoryId={{repositoryId}}&repositoryType=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "definitions",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queues",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "buildNumber",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "minTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "maxTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestedFor",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "reasonFilter",
                    "value": "checkInShelveset",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "statusFilter",
                    "value": "notStarted",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "resultFilter",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "tagFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "properties",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "maxBuildsPerDefinition",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "deletedFilter",
                    "value": "includeDeleted",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queryOrder",
                    "value": "queueTimeDescending",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "branchName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "buildIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repositoryType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of builds.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Queue",
              "filename": "Builds Queue.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds?ignoreWarnings=<boolean>&checkInTicket=<string>&sourceBuildId={{sourceBuildId}}&definitionId={{definitionId}}&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "ignoreWarnings",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "checkInTicket",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "sourceBuildId",
                    "value": "{{sourceBuildId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"ine0d\": {},\n      \"commodod\": {}\n    }\n  },\n  \"agentSpecification\": {\n    \"identifier\": \"<string>\"\n  },\n  \"appendCommitMessageToRunName\": \"<boolean>\",\n  \"buildNumber\": \"<string>\",\n  \"buildNumberRevision\": \"<integer>\",\n  \"controller\": {\n    \"_links\": {},\n    \"createdDate\": \"2024-02-07T12:24:17.251Z\",\n    \"description\": \"amet Duis ea in\",\n    \"enabled\": true,\n    \"status\": \"unavailable\",\n    \"updatedDate\": \"2017-06-27T19:05:55.933Z\",\n    \"uri\": \"officia reprehenderit\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"definition\": {\n    \"createdDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"new\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"queueStatus\": \"paused\",\n    \"revision\": \"<integer>\",\n    \"type\": \"build\",\n    \"uri\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"deleted\": \"<boolean>\",\n  \"deletedBy\": {\n    \"directoryAlias\": \"ip\",\n    \"id\": \"Ut sit nulla\",\n    \"imageUrl\": \"nulla Ut\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"non ess\",\n    \"uniqueName\": \"esse Lorem\",\n    \"_links\": {\n      \"links\": {\n        \"adipisicing_9\": {},\n        \"ipsum_c36\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"deletedDate\": \"<dateTime>\",\n  \"deletedReason\": \"<string>\",\n  \"demands\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"finishTime\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"lastChangedBy\": {\n    \"directoryAlias\": \"nulla fugiat ipsum do\",\n    \"id\": \"elit reprehenderit Lorem incididunt\",\n    \"imageUrl\": \"in\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"amet proident quis\",\n    \"uniqueName\": \"eiusmod qui\",\n    \"_links\": {\n      \"links\": {\n        \"ut_35b\": {},\n        \"eiusmod_844\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastChangedDate\": \"<dateTime>\",\n  \"logs\": {\n    \"id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"orchestrationPlan\": {\n    \"orchestrationType\": \"<integer>\",\n    \"planId\": \"<uuid>\"\n  },\n  \"parameters\": \"<string>\",\n  \"plans\": [\n    {\n      \"orchestrationType\": \"<integer>\",\n      \"planId\": \"<uuid>\"\n    },\n    {\n      \"orchestrationType\": \"<integer>\",\n      \"planId\": \"<uuid>\"\n    }\n  ],\n  \"priority\": \"normal\",\n  \"project\": {\n    \"abbreviation\": \"<string>\",\n    \"defaultTeamImageUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"lastUpdateTime\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"revision\": \"<long>\",\n    \"state\": \"unchanged\",\n    \"url\": \"<string>\",\n    \"visibility\": \"private\"\n  },\n  \"properties\": {\n    \"count\": \"<integer>\",\n    \"item\": {},\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"quality\": \"<string>\",\n  \"queue\": {\n    \"_links\": {\n      \"links\": {\n        \"fugiat_5\": {}\n      }\n    },\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"pool\": {\n      \"id\": \"<integer>\",\n      \"isHosted\": \"<boolean>\",\n      \"name\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  },\n  \"queueOptions\": \"doNotRun\",\n  \"queuePosition\": \"<integer>\",\n  \"queueTime\": \"<dateTime>\",\n  \"reason\": \"scheduleForced\",\n  \"repository\": {\n    \"checkoutSubmodules\": \"<boolean>\",\n    \"clean\": \"<string>\",\n    \"defaultBranch\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"properties\": {\n      \"ullamco0\": \"<string>\",\n      \"mollit__\": \"<string>\"\n    },\n    \"rootFolder\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"requestedBy\": {\n    \"directoryAlias\": \"fugiat nisi magna dolor\",\n    \"id\": \"in ullamco qui\",\n    \"imageUrl\": \"elit id qui adipisicing Excepteur\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"nulla quis deserunt\",\n    \"uniqueName\": \"deserunt\",\n    \"_links\": {\n      \"links\": {\n        \"magna3\": {},\n        \"eiusmod6fd\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"requestedFor\": {\n    \"directoryAlias\": \"aliquip exercit\",\n    \"id\": \"officia nisi mollit consectetur\",\n    \"imageUrl\": \"velit\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"minim tempor non e\",\n    \"uniqueName\": \"aliquip proident ea\",\n    \"_links\": {\n      \"links\": {\n        \"velit_23\": {},\n        \"dolor3fb\": {},\n        \"in2\": {},\n        \"eiusmod580\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"result\": \"succeeded\",\n  \"retainedByRelease\": \"<boolean>\",\n  \"sourceBranch\": \"<string>\",\n  \"sourceVersion\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"status\": \"inProgress\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"templateParameters\": {\n    \"aliqua8\": \"<string>\",\n    \"ullamco_2\": \"<string>\"\n  },\n  \"triggeredByBuild\": {\n    \"value\": \"<Circular reference to #/components/schemas/Build detected>\"\n  },\n  \"triggerInfo\": {\n    \"ipsum_4f\": \"<string>\",\n    \"sint35\": \"<string>\"\n  },\n  \"uri\": \"<string>\",\n  \"url\": \"<string>\",\n  \"validationResults\": [\n    {\n      \"message\": \"<string>\",\n      \"result\": \"error\"\n    },\n    {\n      \"message\": \"<string>\",\n      \"result\": \"error\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queues a build",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Update Build",
              "filename": "Builds Update Build.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}?retry=<boolean>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "retry",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"ine0d\": {},\n      \"commodod\": {}\n    }\n  },\n  \"agentSpecification\": {\n    \"identifier\": \"<string>\"\n  },\n  \"appendCommitMessageToRunName\": \"<boolean>\",\n  \"buildNumber\": \"<string>\",\n  \"buildNumberRevision\": \"<integer>\",\n  \"controller\": {\n    \"_links\": {},\n    \"createdDate\": \"2024-02-07T12:24:17.251Z\",\n    \"description\": \"amet Duis ea in\",\n    \"enabled\": true,\n    \"status\": \"unavailable\",\n    \"updatedDate\": \"2017-06-27T19:05:55.933Z\",\n    \"uri\": \"officia reprehenderit\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"definition\": {\n    \"createdDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"new\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"queueStatus\": \"paused\",\n    \"revision\": \"<integer>\",\n    \"type\": \"build\",\n    \"uri\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"deleted\": \"<boolean>\",\n  \"deletedBy\": {\n    \"directoryAlias\": \"ip\",\n    \"id\": \"Ut sit nulla\",\n    \"imageUrl\": \"nulla Ut\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"non ess\",\n    \"uniqueName\": \"esse Lorem\",\n    \"_links\": {\n      \"links\": {\n        \"adipisicing_9\": {},\n        \"ipsum_c36\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"deletedDate\": \"<dateTime>\",\n  \"deletedReason\": \"<string>\",\n  \"demands\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"finishTime\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"lastChangedBy\": {\n    \"directoryAlias\": \"nulla fugiat ipsum do\",\n    \"id\": \"elit reprehenderit Lorem incididunt\",\n    \"imageUrl\": \"in\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"amet proident quis\",\n    \"uniqueName\": \"eiusmod qui\",\n    \"_links\": {\n      \"links\": {\n        \"ut_35b\": {},\n        \"eiusmod_844\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastChangedDate\": \"<dateTime>\",\n  \"logs\": {\n    \"id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"orchestrationPlan\": {\n    \"orchestrationType\": \"<integer>\",\n    \"planId\": \"<uuid>\"\n  },\n  \"parameters\": \"<string>\",\n  \"plans\": [\n    {\n      \"orchestrationType\": \"<integer>\",\n      \"planId\": \"<uuid>\"\n    },\n    {\n      \"orchestrationType\": \"<integer>\",\n      \"planId\": \"<uuid>\"\n    }\n  ],\n  \"priority\": \"normal\",\n  \"project\": {\n    \"abbreviation\": \"<string>\",\n    \"defaultTeamImageUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"lastUpdateTime\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"revision\": \"<long>\",\n    \"state\": \"unchanged\",\n    \"url\": \"<string>\",\n    \"visibility\": \"private\"\n  },\n  \"properties\": {\n    \"count\": \"<integer>\",\n    \"item\": {},\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"quality\": \"<string>\",\n  \"queue\": {\n    \"_links\": {\n      \"links\": {\n        \"fugiat_5\": {}\n      }\n    },\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"pool\": {\n      \"id\": \"<integer>\",\n      \"isHosted\": \"<boolean>\",\n      \"name\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  },\n  \"queueOptions\": \"doNotRun\",\n  \"queuePosition\": \"<integer>\",\n  \"queueTime\": \"<dateTime>\",\n  \"reason\": \"scheduleForced\",\n  \"repository\": {\n    \"checkoutSubmodules\": \"<boolean>\",\n    \"clean\": \"<string>\",\n    \"defaultBranch\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"properties\": {\n      \"ullamco0\": \"<string>\",\n      \"mollit__\": \"<string>\"\n    },\n    \"rootFolder\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"requestedBy\": {\n    \"directoryAlias\": \"fugiat nisi magna dolor\",\n    \"id\": \"in ullamco qui\",\n    \"imageUrl\": \"elit id qui adipisicing Excepteur\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"nulla quis deserunt\",\n    \"uniqueName\": \"deserunt\",\n    \"_links\": {\n      \"links\": {\n        \"magna3\": {},\n        \"eiusmod6fd\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"requestedFor\": {\n    \"directoryAlias\": \"aliquip exercit\",\n    \"id\": \"officia nisi mollit consectetur\",\n    \"imageUrl\": \"velit\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"minim tempor non e\",\n    \"uniqueName\": \"aliquip proident ea\",\n    \"_links\": {\n      \"links\": {\n        \"velit_23\": {},\n        \"dolor3fb\": {},\n        \"in2\": {},\n        \"eiusmod580\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"result\": \"succeeded\",\n  \"retainedByRelease\": \"<boolean>\",\n  \"sourceBranch\": \"<string>\",\n  \"sourceVersion\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"status\": \"inProgress\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"templateParameters\": {\n    \"aliqua8\": \"<string>\",\n    \"ullamco_2\": \"<string>\"\n  },\n  \"triggeredByBuild\": {\n    \"value\": \"<Circular reference to #/components/schemas/Build detected>\"\n  },\n  \"triggerInfo\": {\n    \"ipsum_4f\": \"<string>\",\n    \"sint35\": \"<string>\"\n  },\n  \"uri\": \"<string>\",\n  \"url\": \"<string>\",\n  \"validationResults\": [\n    {\n      \"message\": \"<string>\",\n      \"result\": \"error\"\n    },\n    {\n      \"message\": \"<string>\",\n      \"result\": \"error\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Builds Update Builds",
              "filename": "Builds Update Builds.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"_links\": {\n      \"links\": {\n        \"Lorem_065\": {},\n        \"aliquip_c4\": {},\n        \"consequat_ad9\": {},\n        \"Lorem_55\": {}\n      }\n    },\n    \"agentSpecification\": {\n      \"identifier\": \"<string>\"\n    },\n    \"appendCommitMessageToRunName\": \"<boolean>\",\n    \"buildNumber\": \"<string>\",\n    \"buildNumberRevision\": \"<integer>\",\n    \"controller\": {\n      \"_links\": {},\n      \"createdDate\": \"2010-01-27T12:02:48.389Z\",\n      \"description\": \"dolore in Duis\",\n      \"enabled\": false,\n      \"status\": \"unavailable\",\n      \"updatedDate\": \"1975-10-22T04:24:26.897Z\",\n      \"uri\": \"quis commodo est veniam deserunt\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"definition\": {\n      \"createdDate\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"path\": \"<string>\",\n      \"project\": {\n        \"abbreviation\": \"<string>\",\n        \"defaultTeamImageUrl\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"lastUpdateTime\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"revision\": \"<long>\",\n        \"state\": \"deleted\",\n        \"url\": \"<string>\",\n        \"visibility\": \"private\"\n      },\n      \"queueStatus\": \"enabled\",\n      \"revision\": \"<integer>\",\n      \"type\": \"build\",\n      \"uri\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"deleted\": \"<boolean>\",\n    \"deletedBy\": {\n      \"directoryAlias\": \"nulla nostrud consectetur Ut dolor\",\n      \"id\": \"ut sit cupidatat\",\n      \"imageUrl\": \"dolor do Ut\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"culpa ad nulla labore\",\n      \"uniqueName\": \"et ut L\",\n      \"_links\": {\n        \"links\": {\n          \"ipsum_2a7\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"deletedDate\": \"<dateTime>\",\n    \"deletedReason\": \"<string>\",\n    \"demands\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"finishTime\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"lastChangedBy\": {\n      \"directoryAlias\": \"ipsum\",\n      \"id\": \"amet dolore\",\n      \"imageUrl\": \"Ut Duis dolor irure\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"sed dolore ex veniam\",\n      \"uniqueName\": \"elit quis voluptate sit\",\n      \"_links\": {\n        \"links\": {\n          \"veniamf1\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"lastChangedDate\": \"<dateTime>\",\n    \"logs\": {\n      \"id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"orchestrationPlan\": {\n      \"orchestrationType\": \"<integer>\",\n      \"planId\": \"<uuid>\"\n    },\n    \"parameters\": \"<string>\",\n    \"plans\": [\n      {\n        \"orchestrationType\": \"<integer>\",\n        \"planId\": \"<uuid>\"\n      },\n      {\n        \"orchestrationType\": \"<integer>\",\n        \"planId\": \"<uuid>\"\n      }\n    ],\n    \"priority\": \"aboveNormal\",\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"new\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"properties\": {\n      \"count\": \"<integer>\",\n      \"item\": {},\n      \"keys\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"quality\": \"<string>\",\n    \"queue\": {\n      \"_links\": {\n        \"links\": {\n          \"incididunt_021\": {},\n          \"ex_b\": {},\n          \"laboris_6d\": {},\n          \"culpa_9\": {},\n          \"utf96\": {}\n        }\n      },\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"pool\": {\n        \"id\": \"<integer>\",\n        \"isHosted\": \"<boolean>\",\n        \"name\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    },\n    \"queueOptions\": \"none\",\n    \"queuePosition\": \"<integer>\",\n    \"queueTime\": \"<dateTime>\",\n    \"reason\": \"buildCompletion\",\n    \"repository\": {\n      \"checkoutSubmodules\": \"<boolean>\",\n      \"clean\": \"<string>\",\n      \"defaultBranch\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"properties\": {\n        \"in_a\": \"<string>\",\n        \"proident_0b\": \"<string>\"\n      },\n      \"rootFolder\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"requestedBy\": {\n      \"directoryAlias\": \"adipisicing enim in\",\n      \"id\": \"proident est veniam irure\",\n      \"imageUrl\": \"aute dolore enim\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"aliqua irure sunt\",\n      \"uniqueName\": \"fugiat reprehenderit proident magn\",\n      \"_links\": {\n        \"links\": {\n          \"aute929\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"requestedFor\": {\n      \"directoryAlias\": \"mollit ad labori\",\n      \"id\": \"quis aute irure culpa pariatur\",\n      \"imageUrl\": \"voluptate in cupidatat sint aliqua\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"nisi ad\",\n      \"uniqueName\": \"esse id dolore incididunt eiusmod\",\n      \"_links\": {\n        \"links\": {\n          \"qui80d\": {},\n          \"in_3ac\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"result\": \"canceled\",\n    \"retainedByRelease\": \"<boolean>\",\n    \"sourceBranch\": \"<string>\",\n    \"sourceVersion\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"status\": \"postponed\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"templateParameters\": {\n      \"utb\": \"<string>\",\n      \"quis_8\": \"<string>\"\n    },\n    \"triggeredByBuild\": {\n      \"value\": \"<Circular reference to #/components/schemas/Build detected>\"\n    },\n    \"triggerInfo\": {\n      \"magnaf\": \"<string>\"\n    },\n    \"uri\": \"<string>\",\n    \"url\": \"<string>\",\n    \"validationResults\": [\n      {\n        \"message\": \"<string>\",\n        \"result\": \"warning\"\n      },\n      {\n        \"message\": \"<string>\",\n        \"result\": \"warning\"\n      }\n    ]\n  },\n  {\n    \"_links\": {\n      \"links\": {\n        \"fugiat_4\": {},\n        \"laborum_0_b\": {},\n        \"amet_874\": {}\n      }\n    },\n    \"agentSpecification\": {\n      \"identifier\": \"<string>\"\n    },\n    \"appendCommitMessageToRunName\": \"<boolean>\",\n    \"buildNumber\": \"<string>\",\n    \"buildNumberRevision\": \"<integer>\",\n    \"controller\": {\n      \"_links\": {},\n      \"createdDate\": \"2014-06-19T00:21:38.473Z\",\n      \"description\": \"enim ea ipsum Ut\",\n      \"enabled\": true,\n      \"status\": \"offline\",\n      \"updatedDate\": \"1968-06-14T11:59:54.081Z\",\n      \"uri\": \"cupidatat sit Excepteur exercitation\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"definition\": {\n      \"createdDate\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"path\": \"<string>\",\n      \"project\": {\n        \"abbreviation\": \"<string>\",\n        \"defaultTeamImageUrl\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"lastUpdateTime\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"revision\": \"<long>\",\n        \"state\": \"all\",\n        \"url\": \"<string>\",\n        \"visibility\": \"private\"\n      },\n      \"queueStatus\": \"enabled\",\n      \"revision\": \"<integer>\",\n      \"type\": \"build\",\n      \"uri\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"deleted\": \"<boolean>\",\n    \"deletedBy\": {\n      \"directoryAlias\": \"occaecat et esse enim\",\n      \"id\": \"in et\",\n      \"imageUrl\": \"aliquip Duis do ea occaecat\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"id veniam officia\",\n      \"uniqueName\": \"irure laboris\",\n      \"_links\": {\n        \"links\": {\n          \"Duis_0d\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"deletedDate\": \"<dateTime>\",\n    \"deletedReason\": \"<string>\",\n    \"demands\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"finishTime\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"lastChangedBy\": {\n      \"directoryAlias\": \"non ullamco cillum\",\n      \"id\": \"magna veniam laboris ipsum\",\n      \"imageUrl\": \"ut sunt quis enim\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"id veniam\",\n      \"uniqueName\": \"sit fugiat in dolore\",\n      \"_links\": {\n        \"links\": {\n          \"laborumf\": {},\n          \"sit_425\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"lastChangedDate\": \"<dateTime>\",\n    \"logs\": {\n      \"id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"orchestrationPlan\": {\n      \"orchestrationType\": \"<integer>\",\n      \"planId\": \"<uuid>\"\n    },\n    \"parameters\": \"<string>\",\n    \"plans\": [\n      {\n        \"orchestrationType\": \"<integer>\",\n        \"planId\": \"<uuid>\"\n      },\n      {\n        \"orchestrationType\": \"<integer>\",\n        \"planId\": \"<uuid>\"\n      }\n    ],\n    \"priority\": \"high\",\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"createPending\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"properties\": {\n      \"count\": \"<integer>\",\n      \"item\": {},\n      \"keys\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"quality\": \"<string>\",\n    \"queue\": {\n      \"_links\": {\n        \"links\": {\n          \"proident_c5b\": {},\n          \"dolor_3\": {},\n          \"aliquipec\": {}\n        }\n      },\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"pool\": {\n        \"id\": \"<integer>\",\n        \"isHosted\": \"<boolean>\",\n        \"name\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    },\n    \"queueOptions\": \"none\",\n    \"queuePosition\": \"<integer>\",\n    \"queueTime\": \"<dateTime>\",\n    \"reason\": \"none\",\n    \"repository\": {\n      \"checkoutSubmodules\": \"<boolean>\",\n      \"clean\": \"<string>\",\n      \"defaultBranch\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"properties\": {\n        \"Excepteur_526\": \"<string>\"\n      },\n      \"rootFolder\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"requestedBy\": {\n      \"directoryAlias\": \"ut sunt officia aliquip\",\n      \"id\": \"qui reprehenderit\",\n      \"imageUrl\": \"tempor amet\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"sunt non\",\n      \"uniqueName\": \"consectetur enim labor\",\n      \"_links\": {\n        \"links\": {\n          \"sint_f8\": {},\n          \"proident_c39\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"requestedFor\": {\n      \"directoryAlias\": \"qui ipsum occaec\",\n      \"id\": \"ut id esse\",\n      \"imageUrl\": \"id veniam culpa sint eiusmod\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"qui ad\",\n      \"uniqueName\": \"qui non\",\n      \"_links\": {\n        \"links\": {\n          \"eiusmodb2\": {},\n          \"commodo_d3\": {},\n          \"ea_8\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"result\": \"succeeded\",\n    \"retainedByRelease\": \"<boolean>\",\n    \"sourceBranch\": \"<string>\",\n    \"sourceVersion\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"status\": \"postponed\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"templateParameters\": {\n      \"occaecat3a\": \"<string>\",\n      \"amet_f\": \"<string>\",\n      \"ut7\": \"<string>\",\n      \"ullamco0\": \"<string>\"\n    },\n    \"triggeredByBuild\": {\n      \"value\": \"<Circular reference to #/components/schemas/Build detected>\"\n    },\n    \"triggerInfo\": {\n      \"adipisicing_0\": \"<string>\",\n      \"dolor_f\": \"<string>\",\n      \"laborisf0\": \"<string>\",\n      \"sint_67d\": \"<string>\"\n    },\n    \"uri\": \"<string>\",\n    \"url\": \"<string>\",\n    \"validationResults\": [\n      {\n        \"message\": \"<string>\",\n        \"result\": \"warning\"\n      },\n      {\n        \"message\": \"<string>\",\n        \"result\": \"ok\"\n      }\n    ]\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates multiple builds.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Controllers",
          "filename": "Controllers",
          "root": {
            "meta": {
              "name": "Controllers"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Controllers Get",
              "filename": "Controllers Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/build/controllers/{{controllerId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "controllerId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a controller",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Controllers List",
              "filename": "Controllers List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/build/controllers?name=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets controller, optionally filtered by name",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Folders",
          "filename": "Folders",
          "root": {
            "docs": "Provides methods for working with folders of build definitions.",
            "meta": {
              "name": "Folders"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Folders Create",
              "filename": "Folders Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/folders?path={{path}}&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"createdBy\": {\n    \"directoryAlias\": \"velit nulla\",\n    \"id\": \"quis ut consequat sunt commodo\",\n    \"imageUrl\": \"Excepteur in reprehenderit Duis\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ut exercitation nostrud\",\n    \"uniqueName\": \"consectetur aliquip commodo culpa cillum\",\n    \"_links\": {\n      \"links\": {\n        \"qui_48\": {},\n        \"aliqua26\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"createdOn\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"lastChangedBy\": {\n    \"directoryAlias\": \"Excepteur Duis\",\n    \"id\": \"Ut veniam pariatur\",\n    \"imageUrl\": \"exercitation amet eu in minim\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"culpa aliquip\",\n    \"uniqueName\": \"laboris sed occaecat aute\",\n    \"_links\": {\n      \"links\": {\n        \"aliqua_7\": {},\n        \"in22\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastChangedDate\": \"<dateTime>\",\n  \"path\": \"<string>\",\n  \"project\": {\n    \"abbreviation\": \"<string>\",\n    \"defaultTeamImageUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"lastUpdateTime\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"revision\": \"<long>\",\n    \"state\": \"unchanged\",\n    \"url\": \"<string>\",\n    \"visibility\": \"private\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a new folder.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Folders Delete",
              "filename": "Folders Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/folders?path={{path}}&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a definition folder. Definitions and their corresponding builds will also be deleted.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Folders List",
              "filename": "Folders List.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/folders/{{path}}?queryOrder=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "queryOrder",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of build definition folders.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Folders Update",
              "filename": "Folders Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/folders?path={{path}}&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"createdBy\": {\n    \"directoryAlias\": \"velit nulla\",\n    \"id\": \"quis ut consequat sunt commodo\",\n    \"imageUrl\": \"Excepteur in reprehenderit Duis\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ut exercitation nostrud\",\n    \"uniqueName\": \"consectetur aliquip commodo culpa cillum\",\n    \"_links\": {\n      \"links\": {\n        \"qui_48\": {},\n        \"aliqua26\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"createdOn\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"lastChangedBy\": {\n    \"directoryAlias\": \"Excepteur Duis\",\n    \"id\": \"Ut veniam pariatur\",\n    \"imageUrl\": \"exercitation amet eu in minim\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"culpa aliquip\",\n    \"uniqueName\": \"laboris sed occaecat aute\",\n    \"_links\": {\n      \"links\": {\n        \"aliqua_7\": {},\n        \"in22\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastChangedDate\": \"<dateTime>\",\n  \"path\": \"<string>\",\n  \"project\": {\n    \"abbreviation\": \"<string>\",\n    \"defaultTeamImageUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"lastUpdateTime\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"revision\": \"<long>\",\n    \"state\": \"unchanged\",\n    \"url\": \"<string>\",\n    \"visibility\": \"private\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates an existing folder at given  existing path",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "General Settings",
          "filename": "General Settings",
          "root": {
            "docs": "Provides methods for working with general pipeline settings.",
            "meta": {
              "name": "General Settings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "General Settings Get",
              "filename": "General Settings Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/generalsettings?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets pipeline general settings.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "General Settings Update",
              "filename": "General Settings Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/generalsettings?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"auditEnforceSettableVar\": \"<boolean>\",\n  \"disableClassicBuildPipelineCreation\": \"<boolean>\",\n  \"disableClassicPipelineCreation\": \"<boolean>\",\n  \"disableClassicReleasePipelineCreation\": \"<boolean>\",\n  \"enforceJobAuthScope\": \"<boolean>\",\n  \"enforceJobAuthScopeForReleases\": \"<boolean>\",\n  \"enforceReferencedRepoScopedToken\": \"<boolean>\",\n  \"enforceSettableVar\": \"<boolean>\",\n  \"publishPipelineMetadata\": \"<boolean>\",\n  \"statusBadgesArePrivate\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates pipeline general settings.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "History",
          "filename": "History",
          "root": {
            "meta": {
              "name": "History"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "History Get",
              "filename": "History Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/build/retention/history?daysToLookback=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "daysToLookback",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns the retention history for the project collection. This includes pipelines that have custom retention rules that may prevent the retention job from cleaning them up, runs per pipeline with retention type, files associated with pipelines owned by the collection with retention type, and the number of files per pipeline.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Metrics",
          "filename": "Metrics",
          "root": {
            "docs": "Provides methods for getting summary information about builds that have run in the system.",
            "meta": {
              "name": "Metrics"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Metrics Get Definition Metrics",
              "filename": "Metrics Get Definition Metrics.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/metrics?minMetricsTime=<dateTime>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "minMetricsTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets build metrics for a definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Metrics Get Project Metrics",
              "filename": "Metrics Get Project Metrics.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/metrics/{{metricAggregationType}}?minMetricsTime=<dateTime>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "minMetricsTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "metricAggregationType",
                    "value": "{{metricAggregationType}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets build metrics for a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Leases",
          "filename": "Leases",
          "root": {
            "docs": "Retention leases are used to manage the lifetime of pipeline runs beyond the configured retention periods.",
            "meta": {
              "name": "Leases"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Leases Add",
              "filename": "Leases Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/retention/leases?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"daysValid\": \"<integer>\",\n    \"definitionId\": \"<integer>\",\n    \"ownerId\": \"<string>\",\n    \"protectPipeline\": \"<boolean>\",\n    \"runId\": \"<integer>\"\n  },\n  {\n    \"daysValid\": \"<integer>\",\n    \"definitionId\": \"<integer>\",\n    \"ownerId\": \"<string>\",\n    \"protectPipeline\": \"<boolean>\",\n    \"runId\": \"<integer>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds new leases for pipeline runs.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Leases Delete",
              "filename": "Leases Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/retention/leases?ids=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "ids",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes specific retention leases.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Leases Get Retention Leases By Minimal Retention Leases",
              "filename": "Leases Get Retention Leases By Minimal Retention Leases.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/retention/leases?leasesToFetch=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "leasesToFetch",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns any leases matching the specified MinimalRetentionLeases",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Leases Get",
              "filename": "Leases Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/retention/leases/{{leaseId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "leaseId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns the details of the retention lease given a lease id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Leases Update",
              "filename": "Leases Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/retention/leases/{{leaseId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "leaseId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"daysValid\": \"<integer>\",\n  \"protectPipeline\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates the duration or pipeline protection status of a retention lease.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Options",
          "filename": "Options",
          "root": {
            "docs": "Provides methods for discovering build definition options supported by the system.",
            "meta": {
              "name": "Options"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Options List",
              "filename": "Options List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/options?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets all build definition options supported by the system.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Latest",
          "filename": "Latest",
          "root": {
            "docs": "Provides methods to return the latest builds for definitions.",
            "meta": {
              "name": "Latest"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Latest Get",
              "filename": "Latest Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/latest/{{definition}}?branchName=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "branchName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definition",
                    "value": "{{definition}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the latest build for a definition, optionally scoped to a specific branch.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Definitions",
          "filename": "Definitions",
          "root": {
            "docs": "Provides methods for working with build definitions.",
            "meta": {
              "name": "Definitions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Definitions Create",
              "filename": "Definitions Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions?definitionToCloneId=<integer>&definitionToCloneRevision=<integer>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "definitionToCloneId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "definitionToCloneRevision",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"badgeEnabled\": false,\n  \"buildNumberFormat\": \"nisi nulla esse eu Ut\",\n  \"comment\": \"sint occaecat magna\",\n  \"description\": \"irure dolore\",\n  \"dropLocation\": \"eu dolor\",\n  \"jobAuthorizationScope\": \"projectCollection\",\n  \"jobCancelTimeoutInMinutes\": -21463422,\n  \"jobTimeoutInMinutes\": -41590066,\n  \"process\": {},\n  \"processParameters\": {},\n  \"properties\": {},\n  \"repository\": {},\n  \"tags\": [\n    \"Excepteur\",\n    \"officia aute\"\n  ],\n  \"variables\": {\n    \"aute__\": {}\n  },\n  \"_links\": {},\n  \"authoredBy\": {},\n  \"draftOf\": {},\n  \"latestBuild\": {},\n  \"latestCompletedBuild\": {},\n  \"quality\": \"draft\",\n  \"queue\": {},\n  \"createdDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"path\": \"<string>\",\n  \"project\": {\n    \"abbreviation\": \"<string>\",\n    \"defaultTeamImageUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"lastUpdateTime\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"revision\": \"<long>\",\n    \"state\": \"deleting\",\n    \"url\": \"<string>\",\n    \"visibility\": \"private\"\n  },\n  \"queueStatus\": \"disabled\",\n  \"revision\": \"<integer>\",\n  \"type\": \"xaml\",\n  \"uri\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a new definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Delete",
              "filename": "Definitions Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a definition and all associated builds.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Get Definition Revisions",
              "filename": "Definitions Get Definition Revisions.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/revisions?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets all revisions of a definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Get",
              "filename": "Definitions Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}?revision={{revision}}&minMetricsTime=<dateTime>&propertyFilters=<string>&includeLatestBuilds=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "revision",
                    "value": "{{revision}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "minMetricsTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLatestBuilds",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a definition, optionally at a specific revision.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions List",
              "filename": "Definitions List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions?name=<string>&repositoryId={{repositoryId}}&repositoryType=<string>&queryOrder=lastModifiedDescending&$top=<integer>&continuationToken=<string>&minMetricsTime=<dateTime>&definitionIds=<string>&path={{path}}&builtAfter=<dateTime>&notBuiltAfter=<dateTime>&includeAllProperties=<boolean>&includeLatestBuilds=<boolean>&taskIdFilter=<uuid>&processType=<integer>&yamlFilename=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repositoryType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queryOrder",
                    "value": "lastModifiedDescending",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "minMetricsTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "definitionIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "builtAfter",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "notBuiltAfter",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeAllProperties",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLatestBuilds",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "taskIdFilter",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "processType",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "yamlFilename",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of definitions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Restore Definition",
              "filename": "Definitions Restore Definition.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}?deleted=<boolean>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "deleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Restores a deleted definition",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Update",
              "filename": "Definitions Update.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}?secretsSourceDefinitionId=<integer>&secretsSourceDefinitionRevision=<integer>&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "secretsSourceDefinitionId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "secretsSourceDefinitionRevision",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"badgeEnabled\": false,\n  \"buildNumberFormat\": \"nisi nulla esse eu Ut\",\n  \"comment\": \"sint occaecat magna\",\n  \"description\": \"irure dolore\",\n  \"dropLocation\": \"eu dolor\",\n  \"jobAuthorizationScope\": \"projectCollection\",\n  \"jobCancelTimeoutInMinutes\": -21463422,\n  \"jobTimeoutInMinutes\": -41590066,\n  \"process\": {},\n  \"processParameters\": {},\n  \"properties\": {},\n  \"repository\": {},\n  \"tags\": [\n    \"Excepteur\",\n    \"officia aute\"\n  ],\n  \"variables\": {\n    \"aute__\": {}\n  },\n  \"_links\": {},\n  \"authoredBy\": {},\n  \"draftOf\": {},\n  \"latestBuild\": {},\n  \"latestCompletedBuild\": {},\n  \"quality\": \"draft\",\n  \"queue\": {},\n  \"createdDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"path\": \"<string>\",\n  \"project\": {\n    \"abbreviation\": \"<string>\",\n    \"defaultTeamImageUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"lastUpdateTime\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"revision\": \"<long>\",\n    \"state\": \"deleting\",\n    \"url\": \"<string>\",\n    \"visibility\": \"private\"\n  },\n  \"queueStatus\": \"disabled\",\n  \"revision\": \"<integer>\",\n  \"type\": \"xaml\",\n  \"uri\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates an existing build definition.  In order for this operation to succeed, the value of the \"Revision\" property of the request body must match the existing build definition's. It is recommended that you obtain the existing build definition by using GET, modify the build definition as necessary, and then submit the modified definition with PUT.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Properties",
          "filename": "Properties",
          "root": {
            "docs": "Provides methods for working with extended properties of builds and definitions.",
            "meta": {
              "name": "Properties"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Properties Get Build Properties",
              "filename": "Properties Get Build Properties.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/properties?filter=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "filter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets properties for a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Properties Get Definition Properties",
              "filename": "Properties Get Definition Properties.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/properties?filter=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "filter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets properties for a definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Properties Update Build Properties",
              "filename": "Properties Update Build Properties.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/properties?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates properties for a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Properties Update Definition Properties",
              "filename": "Properties Update Definition Properties.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/properties?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates properties for a definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Report",
          "filename": "Report",
          "root": {
            "docs": "Provides methods for working with build reports.",
            "meta": {
              "name": "Report"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Report Get",
              "filename": "Report Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/report?type=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "text/html",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "type",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a build report.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Resource Usage",
          "filename": "Resource Usage",
          "root": {
            "docs": "Provides information about build resources in the system.",
            "meta": {
              "name": "Resource Usage"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Resource Usage Get",
              "filename": "Resource Usage Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/build/resourceusage?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets information about build resources in the system.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Settings",
          "filename": "Settings",
          "root": {
            "docs": "Provides methods for updating build-related system settings.",
            "meta": {
              "name": "Settings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Settings Get",
              "filename": "Settings Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/settings?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the build settings.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Settings Update",
              "filename": "Settings Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/settings?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"daysToKeepDeletedBuildsBeforeDestroy\": \"<integer>\",\n  \"defaultRetentionPolicy\": {\n    \"artifacts\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"artifactTypesToDelete\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"branches\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"daysToKeep\": \"<integer>\",\n    \"deleteBuildRecord\": \"<boolean>\",\n    \"deleteTestResults\": \"<boolean>\",\n    \"minimumToKeep\": \"<integer>\"\n  },\n  \"maximumRetentionPolicy\": {\n    \"artifacts\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"artifactTypesToDelete\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"branches\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"daysToKeep\": \"<integer>\",\n    \"deleteBuildRecord\": \"<boolean>\",\n    \"deleteTestResults\": \"<boolean>\",\n    \"minimumToKeep\": \"<integer>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates the build settings.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Retention",
          "filename": "Retention",
          "root": {
            "docs": "Provides methods for updating pipeline retention settings.",
            "meta": {
              "name": "Retention"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Retention Get",
              "filename": "Retention Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/retention?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the project's retention settings.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Retention Update",
              "filename": "Retention Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/retention?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"artifactsRetention\": {\n    \"value\": \"<integer>\"\n  },\n  \"pullRequestRunRetention\": {\n    \"value\": \"<integer>\"\n  },\n  \"retainRunsPerProtectedBranch\": {\n    \"value\": \"<integer>\"\n  },\n  \"runRetention\": {\n    \"value\": \"<integer>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates the project's retention settings.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Source Providers",
          "filename": "Source Providers",
          "root": {
            "docs": "Provides methods for working with source providers.",
            "meta": {
              "name": "Source Providers"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Source Providers Get File Contents",
              "filename": "Source Providers Get File Contents.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/sourceProviders/{{providerName}}/filecontents?serviceEndpointId=<uuid>&repository={{repository}}&commitOrBranch=<string>&path={{path}}&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "text/plain",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "serviceEndpointId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repository",
                    "value": "{{repository}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "commitOrBranch",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "providerName",
                    "value": "{{providerName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the contents of a file in the given source code repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Source Providers Get Path Contents",
              "filename": "Source Providers Get Path Contents.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/sourceProviders/{{providerName}}/pathcontents?serviceEndpointId=<uuid>&repository={{repository}}&commitOrBranch=<string>&path={{path}}&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "serviceEndpointId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repository",
                    "value": "{{repository}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "commitOrBranch",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "providerName",
                    "value": "{{providerName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the contents of a directory in the given source code repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Source Providers Get Pull Request",
              "filename": "Source Providers Get Pull Request.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/sourceProviders/{{providerName}}/pullrequests/{{pullRequestId}}?repositoryId={{repositoryId}}&serviceEndpointId=<uuid>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "serviceEndpointId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "providerName",
                    "value": "{{providerName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a pull request object from source provider.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Source Providers List Branches",
              "filename": "Source Providers List Branches.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/sourceProviders/{{providerName}}/branches?serviceEndpointId=<uuid>&repository={{repository}}&branchName=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "serviceEndpointId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repository",
                    "value": "{{repository}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "branchName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "providerName",
                    "value": "{{providerName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of branches for the given source code repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Source Providers List Repositories",
              "filename": "Source Providers List Repositories.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/sourceProviders/{{providerName}}/repositories?serviceEndpointId=<uuid>&repository={{repository}}&resultSet=top&pageResults=<boolean>&continuationToken=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "serviceEndpointId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repository",
                    "value": "{{repository}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "resultSet",
                    "value": "top",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "pageResults",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "providerName",
                    "value": "{{providerName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of source code repositories.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Source Providers List Webhooks",
              "filename": "Source Providers List Webhooks.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/sourceProviders/{{providerName}}/webhooks?serviceEndpointId=<uuid>&repository={{repository}}&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "serviceEndpointId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repository",
                    "value": "{{repository}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "providerName",
                    "value": "{{providerName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of webhooks installed in the given source code repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Source Providers List",
              "filename": "Source Providers List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/sourceproviders?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of source providers and their capabilities.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Source Providers Restore Webhooks",
              "filename": "Source Providers Restore Webhooks.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/sourceProviders/{{providerName}}/webhooks?serviceEndpointId=<uuid>&repository={{repository}}&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "serviceEndpointId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "repository",
                    "value": "{{repository}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "providerName",
                    "value": "{{providerName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Recreates the webhooks for the specified triggers in the given source code repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Resources",
          "filename": "Resources",
          "root": {
            "meta": {
              "name": "Resources"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Resources Authorize Definition Resources",
              "filename": "Resources Authorize Definition Resources.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/resources?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"authorized\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"authorized\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Resources List",
              "filename": "Resources List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/resources?api-version={{api-version-preview}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version-preview}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Content-Type header is application/json\", function () {\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\n});\n\n\ntest(\"Response has the required fields - count and value\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData).to.be.an('object');\n    expect(responseData).to.have.property('count');\n    expect(responseData).to.have.property('value');\n});\n\n\ntest(\"Response contains at least one element in the 'value' array\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.value).to.be.an('array').that.is.not.empty;\n});\n\n",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Status",
          "filename": "Status",
          "root": {
            "docs": "Provides methods to generate SVG images representing the status of builds.",
            "meta": {
              "name": "Status"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Status Get",
              "filename": "Status Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/status/{{definition}}?branchName=<string>&stageName=<string>&jobName=<string>&configuration=<string>&label=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "branchName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "stageName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "jobName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "configuration",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "label",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definition",
                    "value": "{{definition}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "<p>Gets the build status for a definition, optionally scoped to a specific branch, stage, job, and configuration.</p> <p>If there are more than one, then it is required to pass in a stageName value when specifying a jobName, and the same rule then applies for both if passing a configuration parameter.</p>",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Templates",
          "filename": "Templates",
          "root": {
            "docs": "Provides methods for working with build definition templates.",
            "meta": {
              "name": "Templates"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Templates Delete",
              "filename": "Templates Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/templates/{{templateId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "templateId",
                    "value": "{{templateId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a build definition template.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Templates Get",
              "filename": "Templates Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/templates/{{templateId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "templateId",
                    "value": "{{templateId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a specific build definition template.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Templates List",
              "filename": "Templates List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/templates?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets all definition templates.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Templates Save Template",
              "filename": "Templates Save Template.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/templates/{{templateId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "templateId",
                    "value": "{{templateId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"canDelete\": \"<boolean>\",\n  \"category\": \"<string>\",\n  \"defaultHostedQueue\": \"<string>\",\n  \"description\": \"<string>\",\n  \"icons\": {\n    \"nullac1\": \"<string>\"\n  },\n  \"iconTaskId\": \"<uuid>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"template\": {\n    \"badgeEnabled\": false,\n    \"buildNumberFormat\": \"Duis cupidatat nostrud\",\n    \"comment\": \"enim c\",\n    \"description\": \"ve\",\n    \"dropLocation\": \"sed eiusmod\",\n    \"jobAuthorizationScope\": \"projectCollection\",\n    \"jobCancelTimeoutInMinutes\": -92268572,\n    \"jobTimeoutInMinutes\": -35762318,\n    \"process\": {},\n    \"processParameters\": {},\n    \"properties\": {},\n    \"repository\": {},\n    \"tags\": [\n      \"fugiat cupidatat irure Lorem id\",\n      \"id ea Duis cupidatat est\"\n    ],\n    \"variables\": {\n      \"ullamco_ca\": {},\n      \"ad1a6\": {},\n      \"aliqua_97a\": {},\n      \"amete2\": {},\n      \"esse_6e\": {}\n    },\n    \"_links\": {},\n    \"authoredBy\": {},\n    \"draftOf\": {},\n    \"latestBuild\": {},\n    \"latestCompletedBuild\": {},\n    \"quality\": \"definition\",\n    \"queue\": {},\n    \"createdDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"createPending\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"queueStatus\": \"disabled\",\n    \"revision\": \"<integer>\",\n    \"type\": \"build\",\n    \"uri\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates an existing build definition template.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Stages",
          "filename": "Stages",
          "root": {
            "meta": {
              "name": "Stages"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Stages Update",
              "filename": "Stages Update.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/stages/{{stageRefName}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "stageRefName",
                    "value": "{{stageRefName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"forceRetryAllJobs\": \"<boolean>\",\n  \"state\": \"retry\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a build stage",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Tags",
          "filename": "Tags",
          "root": {
            "meta": {
              "name": "Tags"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Tags Add Build Tag",
              "filename": "Tags Add Build Tag.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/tags/{{tag}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "tag",
                    "value": "{{tag}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds a tag to a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Add Build Tags",
              "filename": "Tags Add Build Tags.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/tags?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds tags to a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Add Definition Tag",
              "filename": "Tags Add Definition Tag.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/tags/{{tag}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "DefinitionId",
                    "value": "",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "tag",
                    "value": "{{tag}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds a tag to a definition",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Add Definition Tags",
              "filename": "Tags Add Definition Tags.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/tags?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "DefinitionId",
                    "value": "",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds multiple tags to a definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Delete Build Tag",
              "filename": "Tags Delete Build Tag.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/tags/{{tag}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "tag",
                    "value": "{{tag}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a tag from a build. NOTE: This API will not work for tags with special characters. To remove tags with special characters, use the PATCH method instead (in 6.0+)",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Delete Definition Tag",
              "filename": "Tags Delete Definition Tag.bru",
              "seq": 10,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/tags/{{tag}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "DefinitionId",
                    "value": "",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "tag",
                    "value": "{{tag}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a tag from a definition. NOTE: This API will not work for tags with special characters. To remove tags with special characters, use the PATCH method instead (in 6.0+)",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Delete Tag",
              "filename": "Tags Delete Tag.bru",
              "seq": 12,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/tags/{{tag}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "tag",
                    "value": "{{tag}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a tag from builds, definitions, and from the tag store",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Get Build Tags",
              "filename": "Tags Get Build Tags.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/tags?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the tags for a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Get Definition Tags",
              "filename": "Tags Get Definition Tags.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/tags?revision={{revision}}&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "revision",
                    "value": "{{revision}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "DefinitionId",
                    "value": "",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the tags for a definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Get Tags",
              "filename": "Tags Get Tags.bru",
              "seq": 11,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/tags?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of all build tags in the project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Update Build Tags",
              "filename": "Tags Update Build Tags.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/tags?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"tagsToAdd\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tagsToRemove\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds/Removes tags from a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Update Definition Tags",
              "filename": "Tags Update Definition Tags.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/tags?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "DefinitionId",
                    "value": "",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"tagsToAdd\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tagsToRemove\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds/Removes tags from a definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Timeline",
          "filename": "Timeline",
          "root": {
            "meta": {
              "name": "Timeline"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Timeline Get",
              "filename": "Timeline Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/builds/{{buildId}}/timeline/{{timelineId}}?changeId=<integer>&planId=<uuid>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "changeId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "timelineId",
                    "value": "{{timelineId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets details for a build",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Yaml",
          "filename": "Yaml",
          "root": {
            "docs": "Provides conversion from Build Definition to Yaml.",
            "meta": {
              "name": "Yaml"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Yaml Get",
              "filename": "Yaml Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/build/definitions/{{definitionId}}/yaml?revision={{revision}}&minMetricsTime=<dateTime>&propertyFilters=<string>&includeLatestBuilds=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "revision",
                    "value": "{{revision}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "minMetricsTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLatestBuilds",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Converts a definition to YAML, optionally at a specific revision.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Core",
      "filename": "Core",
      "root": {
        "docs": "[Projects and teams REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/core/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Core"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Avatar",
          "filename": "Avatar",
          "root": {
            "meta": {
              "name": "Avatar"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Avatar Remove Project Avatar",
              "filename": "Avatar Remove Project Avatar.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/avatar?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "{{projectId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes the avatar for the project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Avatar Set Project Avatar",
              "filename": "Avatar Set Project Avatar.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/avatar?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "{{projectId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"image\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Sets the avatar for the project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Projects",
          "filename": "Projects",
          "root": {
            "docs": "DO NOT REMOVE. Used in TfsDeleteProject.exe to determine whether soft-delete is enabled.",
            "meta": {
              "name": "Projects"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Projects Create",
              "filename": "Projects Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {},\n  \"capabilities\": {\n    \"labore_510\": {\n      \"fugiat_604\": \"sed\"\n    },\n    \"aliqua_ba\": {\n      \"incididunt_\": \"sit pariatur\"\n    },\n    \"utec\": {\n      \"do2b\": \"ipsum aliqua sit\",\n      \"ut_88\": \"irure esse in ut nisi\",\n      \"proident_bd\": \"ullamco nisi\"\n    }\n  },\n  \"defaultTeam\": {},\n  \"abbreviation\": \"<string>\",\n  \"defaultTeamImageUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"lastUpdateTime\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"revision\": \"<long>\",\n  \"state\": \"unchanged\",\n  \"url\": \"<string>\",\n  \"visibility\": \"private\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queues a project to be created. Use the [GetOperation](../../operations/operations/get) to periodically check for create project status.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Projects Delete",
              "filename": "Projects Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queues a project to be deleted. Use the [GetOperation](../../operations/operations/get) to periodically check for delete project status.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Projects Get Project Properties",
              "filename": "Projects Get Project Properties.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/properties?api-version={{api-version-preview}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version-preview}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Response has a count field\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.have.property('count');\r\n});\r\n\r\n\r\ntest(\"Value array is present in the response\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.exist.and.to.be.an('array');\r\n});\r\n\r\n\r\ntest(\"Each object in the 'value' array contains non-empty 'name' and 'value' properties\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.value).to.be.an('array').that.is.not.empty;\r\n    \r\n    responseData.value.forEach(function(obj) {\r\n        expect(obj.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r\n        expect(obj.value).to.exist.and.to.not.be.empty;\r\n    });\r\n});\r\n\r\n",
                "docs": "Get a collection of team project properties.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Projects Get",
              "filename": "Projects Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}?includeCapabilities=true&includeHistory=true&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeCapabilities",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeHistory",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Ensure that the response includes the specified capabilities - processTemplate and versioncontrol\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.capabilities).to.include.all.keys('processTemplate', 'versioncontrol');\r\n});\r\n\r\n\r\ntest(\"DefaultTeam object is present in the response\", function () {\r\n    const responseData = res.getBody();\r\n    expect(responseData.defaultTeam).to.exist;\r\n});\r\n\r\n",
                "docs": "Get project with the specified id or name, optionally including capabilities.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Projects List",
              "filename": "Projects List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"Response is an object with count and value properties\", function () {\n    expect(res.getBody()).to.be.an('object').that.has.all.keys('count', 'value');\n});\n\ntest(\"Each element in the value array has specific properties\", function () {\n    res.getBody().value.forEach(function(project) {\n        expect(project).to.have.all.keys('abbreviation', 'defaultTeamImageUrl', 'description', 'id', 'lastUpdateTime', 'name', 'revision', 'state', 'url', 'visibility');\n    });\n});\ntest(\"Response count is a number\", function () {\n    expect(res.getBody().count).to.be.a('number');\n});\n\ntest(\"Each element in the value array has specific properties\", function () {\n    res.getBody().value.forEach(function(project) {\n        expect(project).to.have.all.keys('id', 'name', 'description', 'url', 'state', 'revision', 'visibility', 'lastUpdateTime');\n    });\n});",
                "docs": "Get all projects in the organization that the authenticated user has access to.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Projects Set Project Properties",
              "filename": "Projects Set Project Properties.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/properties?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create, update, and delete team project properties.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Projects Update",
              "filename": "Projects Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {},\n  \"capabilities\": {\n    \"labore_510\": {\n      \"fugiat_604\": \"sed\"\n    },\n    \"aliqua_ba\": {\n      \"incididunt_\": \"sit pariatur\"\n    },\n    \"utec\": {\n      \"do2b\": \"ipsum aliqua sit\",\n      \"ut_88\": \"irure esse in ut nisi\",\n      \"proident_bd\": \"ullamco nisi\"\n    }\n  },\n  \"defaultTeam\": {},\n  \"abbreviation\": \"<string>\",\n  \"defaultTeamImageUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"lastUpdateTime\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"revision\": \"<long>\",\n  \"state\": \"unchanged\",\n  \"url\": \"<string>\",\n  \"visibility\": \"private\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update an existing project's name, abbreviation, description, or restore a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Categorized Teams",
          "filename": "Categorized Teams",
          "root": {
            "docs": "Manage teams in Azure DevOps Services.\nA DevOps account has one or more team projects.\nEach team project has one or more teams that contribute to that project.",
            "meta": {
              "name": "Categorized Teams"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Categorized Teams Get",
              "filename": "Categorized Teams Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/categorizedteams/?$expandIdentity=<boolean>&$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expandIdentity",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "{{projectId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets list of user readable teams in a project and teams user is member of (excluded from readable list).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Processes",
          "filename": "Processes",
          "root": {
            "docs": "Controller for processes.",
            "meta": {
              "name": "Processes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Processes Get",
              "filename": "Processes Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/process/processes/{{processId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a process by ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Processes List",
              "filename": "Processes List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/process/processes?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n  expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Value array is present and contains at least one element\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.have.property('value').that.is.an('array').and.not.to.be.empty;\r\n});\r\n\r\n\r\ntest(\"Id is a non-empty string\", function () {\r\n    const responseData = res.getBody();\r\n    responseData.value.forEach(function(item) {\r\n        expect(item.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r\n    });\r\n});\r\n\r\ntest(\"isDefault is a boolean\", function () {\r\n    const responseData = res.getBody();\r\n    responseData.value.forEach(function(item) {\r\n        expect(item.isDefault).to.be.a('boolean');\r\n    });\r\n});\r\n",
                "docs": "Get a list of processes.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Teams",
          "filename": "Teams",
          "root": {
            "docs": "Manage teams in Azure DevOps Services.\nA DevOps account has one or more team projects.\nEach team project has one or more teams that contribute to that project.",
            "meta": {
              "name": "Teams"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Teams Create",
              "filename": "Teams Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/teams?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "{{projectId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"eiusmod cupidatat Lorem\",\n  \"identity\": {},\n  \"identityUrl\": \"qui tempor\",\n  \"projectId\": \"08141d24-a7df-cc0b-328f-2c6323d78228\",\n  \"projectName\": \"nulla pariatur consequat ip\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a team in a team project.\n\nPossible failure scenarios\nInvalid project name/ID (project doesn't exist) 404\nInvalid team name or description 400\nTeam already exists 400\nInsufficient privileges 400",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teams Delete",
              "filename": "Teams Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/teams/{{teamId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "{{projectId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "teamId",
                    "value": "{{teamId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a team.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teams Get All Teams",
              "filename": "Teams Get All Teams.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/teams?$mine=<boolean>&$top=<integer>&$skip=<integer>&$expandIdentity=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$mine",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expandIdentity",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of all teams.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teams Get Team Members With Extended Properties",
              "filename": "Teams Get Team Members With Extended Properties.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/teams/{{teamId}}/members?$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "{{projectId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "teamId",
                    "value": "{{teamId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of members for a specific team.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teams Get Teams",
              "filename": "Teams Get Teams.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/teams?$mine=false&$top=200&$skip=0&$expandIdentity=false&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$mine",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "200",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "0",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expandIdentity",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "{{projectId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n\ntest(\"Value array is present and contains at least one element\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData).to.have.property('value').that.is.an('array').and.not.empty;\n});\n\n\ntest(\"Count value is a non-negative integer\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.count).to.be.a('number');\n    expect(responseData.count).to.be.at.least(0);\n});\n\n\ntest(\"Verify the presence and validity of the 'identity' object in each element of the 'value' array\", function () {\n    const responseData = res.getBody();\n\n    expect(responseData.value).to.be.an('array').that.is.not.empty;\n\n    responseData.value.forEach(function (team) {\n        expect(team.identity).to.be.an('object').that.is.not.empty;\n    });\n});\n\n",
                "docs": "Get a list of teams.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teams Get",
              "filename": "Teams Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/teams/{{teamId}}?$expandIdentity=true&api-version=7.1-preview.3",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expandIdentity",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "7.1-preview.3",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.id).to.exist;\r\n    expect(responseData.name).to.exist;\r\n    expect(responseData.url).to.exist;\r\n    expect(responseData.description).to.exist;\r\n    expect(responseData.identityUrl).to.exist;\r\n    expect(responseData.projectName).to.exist;\r\n    expect(responseData.projectId).to.exist;\r\n});\r\n\r\n\r\ntest(\"Identity is an empty object\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.identity).to.be.an('object').that.is.empty;\r\n});\r\n\r\n\r\ntest(\"Description is a non-empty string\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.description).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");\r\n});\r\n\r\n\r\ntest(\"Url is in a valid URL format\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.url).to.match(/^http(s)?:\\/\\/.+/);\r\n});\r\n\r\n",
                "docs": "Get a specific team.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teams Update",
              "filename": "Teams Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/projects/{{projectId}}/teams/{{teamId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "{{projectId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "teamId",
                    "value": "{{teamId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"eiusmod cupidatat Lorem\",\n  \"identity\": {},\n  \"identityUrl\": \"qui tempor\",\n  \"projectId\": \"08141d24-a7df-cc0b-328f-2c6323d78228\",\n  \"projectName\": \"nulla pariatur consequat ip\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a team's name and/or description.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Dashboard",
      "filename": "Dashboard",
      "root": {
        "docs": "[Dashboards and widgets REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/dashboard/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Dashboard"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Dashboards",
          "filename": "Dashboards",
          "root": {
            "docs": "APIs for viewing and managing dashboards.",
            "meta": {
              "name": "Dashboards"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Dashboards Create",
              "filename": "Dashboards Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"amet_5_\": {}\n    }\n  },\n  \"dashboardScope\": \"collection_User\",\n  \"description\": \"<string>\",\n  \"eTag\": \"<string>\",\n  \"groupId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"lastAccessedDate\": \"<dateTime>\",\n  \"modifiedBy\": \"<uuid>\",\n  \"modifiedDate\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<uuid>\",\n  \"position\": \"<integer>\",\n  \"refreshInterval\": \"<integer>\",\n  \"url\": \"<string>\",\n  \"widgets\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"doloreaa\": {},\n          \"non177\": {}\n        }\n      },\n      \"allowedSizes\": [\n        {\n          \"columnSpan\": \"<integer>\",\n          \"rowSpan\": \"<integer>\"\n        },\n        {\n          \"columnSpan\": \"<integer>\",\n          \"rowSpan\": \"<integer>\"\n        }\n      ],\n      \"areSettingsBlockedForUser\": \"<boolean>\",\n      \"artifactId\": \"<string>\",\n      \"configurationContributionId\": \"<string>\",\n      \"configurationContributionRelativeId\": \"<string>\",\n      \"contentUri\": \"<string>\",\n      \"contributionId\": \"<string>\",\n      \"dashboard\": {\n        \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n      },\n      \"eTag\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"isEnabled\": \"<boolean>\",\n      \"isNameConfigurable\": \"<boolean>\",\n      \"lightboxOptions\": {\n        \"height\": \"<integer>\",\n        \"resizable\": \"<boolean>\",\n        \"width\": \"<integer>\"\n      },\n      \"loadingImageUrl\": \"<string>\",\n      \"name\": \"<string>\",\n      \"position\": {\n        \"column\": \"<integer>\",\n        \"row\": \"<integer>\"\n      },\n      \"settings\": \"<string>\",\n      \"settingsVersion\": {\n        \"major\": \"<integer>\",\n        \"minor\": \"<integer>\",\n        \"patch\": \"<integer>\"\n      },\n      \"size\": {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      },\n      \"typeId\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"_links\": {\n        \"links\": {\n          \"aute_e7\": {},\n          \"dolor48\": {},\n          \"proident_07\": {}\n        }\n      },\n      \"allowedSizes\": [\n        {\n          \"columnSpan\": \"<integer>\",\n          \"rowSpan\": \"<integer>\"\n        },\n        {\n          \"columnSpan\": \"<integer>\",\n          \"rowSpan\": \"<integer>\"\n        }\n      ],\n      \"areSettingsBlockedForUser\": \"<boolean>\",\n      \"artifactId\": \"<string>\",\n      \"configurationContributionId\": \"<string>\",\n      \"configurationContributionRelativeId\": \"<string>\",\n      \"contentUri\": \"<string>\",\n      \"contributionId\": \"<string>\",\n      \"dashboard\": {\n        \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n      },\n      \"eTag\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"isEnabled\": \"<boolean>\",\n      \"isNameConfigurable\": \"<boolean>\",\n      \"lightboxOptions\": {\n        \"height\": \"<integer>\",\n        \"resizable\": \"<boolean>\",\n        \"width\": \"<integer>\"\n      },\n      \"loadingImageUrl\": \"<string>\",\n      \"name\": \"<string>\",\n      \"position\": {\n        \"column\": \"<integer>\",\n        \"row\": \"<integer>\"\n      },\n      \"settings\": \"<string>\",\n      \"settingsVersion\": {\n        \"major\": \"<integer>\",\n        \"minor\": \"<integer>\",\n        \"patch\": \"<integer>\"\n      },\n      \"size\": {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      },\n      \"typeId\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create the supplied dashboard.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Dashboards Delete",
              "filename": "Dashboards Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a dashboard given its ID. This also deletes the widgets associated with this dashboard.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Dashboards Get",
              "filename": "Dashboards Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a dashboard by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Dashboards List",
              "filename": "Dashboards List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of dashboards under a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Dashboards Replace Dashboard",
              "filename": "Dashboards Replace Dashboard.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"amet_5_\": {}\n    }\n  },\n  \"dashboardScope\": \"collection_User\",\n  \"description\": \"<string>\",\n  \"eTag\": \"<string>\",\n  \"groupId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"lastAccessedDate\": \"<dateTime>\",\n  \"modifiedBy\": \"<uuid>\",\n  \"modifiedDate\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<uuid>\",\n  \"position\": \"<integer>\",\n  \"refreshInterval\": \"<integer>\",\n  \"url\": \"<string>\",\n  \"widgets\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"doloreaa\": {},\n          \"non177\": {}\n        }\n      },\n      \"allowedSizes\": [\n        {\n          \"columnSpan\": \"<integer>\",\n          \"rowSpan\": \"<integer>\"\n        },\n        {\n          \"columnSpan\": \"<integer>\",\n          \"rowSpan\": \"<integer>\"\n        }\n      ],\n      \"areSettingsBlockedForUser\": \"<boolean>\",\n      \"artifactId\": \"<string>\",\n      \"configurationContributionId\": \"<string>\",\n      \"configurationContributionRelativeId\": \"<string>\",\n      \"contentUri\": \"<string>\",\n      \"contributionId\": \"<string>\",\n      \"dashboard\": {\n        \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n      },\n      \"eTag\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"isEnabled\": \"<boolean>\",\n      \"isNameConfigurable\": \"<boolean>\",\n      \"lightboxOptions\": {\n        \"height\": \"<integer>\",\n        \"resizable\": \"<boolean>\",\n        \"width\": \"<integer>\"\n      },\n      \"loadingImageUrl\": \"<string>\",\n      \"name\": \"<string>\",\n      \"position\": {\n        \"column\": \"<integer>\",\n        \"row\": \"<integer>\"\n      },\n      \"settings\": \"<string>\",\n      \"settingsVersion\": {\n        \"major\": \"<integer>\",\n        \"minor\": \"<integer>\",\n        \"patch\": \"<integer>\"\n      },\n      \"size\": {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      },\n      \"typeId\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"_links\": {\n        \"links\": {\n          \"aute_e7\": {},\n          \"dolor48\": {},\n          \"proident_07\": {}\n        }\n      },\n      \"allowedSizes\": [\n        {\n          \"columnSpan\": \"<integer>\",\n          \"rowSpan\": \"<integer>\"\n        },\n        {\n          \"columnSpan\": \"<integer>\",\n          \"rowSpan\": \"<integer>\"\n        }\n      ],\n      \"areSettingsBlockedForUser\": \"<boolean>\",\n      \"artifactId\": \"<string>\",\n      \"configurationContributionId\": \"<string>\",\n      \"configurationContributionRelativeId\": \"<string>\",\n      \"contentUri\": \"<string>\",\n      \"contributionId\": \"<string>\",\n      \"dashboard\": {\n        \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n      },\n      \"eTag\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"isEnabled\": \"<boolean>\",\n      \"isNameConfigurable\": \"<boolean>\",\n      \"lightboxOptions\": {\n        \"height\": \"<integer>\",\n        \"resizable\": \"<boolean>\",\n        \"width\": \"<integer>\"\n      },\n      \"loadingImageUrl\": \"<string>\",\n      \"name\": \"<string>\",\n      \"position\": {\n        \"column\": \"<integer>\",\n        \"row\": \"<integer>\"\n      },\n      \"settings\": \"<string>\",\n      \"settingsVersion\": {\n        \"major\": \"<integer>\",\n        \"minor\": \"<integer>\",\n        \"patch\": \"<integer>\"\n      },\n      \"size\": {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      },\n      \"typeId\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Replace configuration for the specified dashboard. Replaces Widget list on Dashboard, only if property is supplied.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Dashboards Replace Dashboards",
              "filename": "Dashboards Replace Dashboards.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"dolor_d\": {},\n      \"consequatb\": {},\n      \"non_3\": {}\n    }\n  },\n  \"dashboardEntries\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"minim_8c\": {}\n        }\n      },\n      \"dashboardScope\": \"collection_User\",\n      \"description\": \"<string>\",\n      \"eTag\": \"<string>\",\n      \"groupId\": \"<uuid>\",\n      \"id\": \"<uuid>\",\n      \"lastAccessedDate\": \"<dateTime>\",\n      \"modifiedBy\": \"<uuid>\",\n      \"modifiedDate\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"ownerId\": \"<uuid>\",\n      \"position\": \"<integer>\",\n      \"refreshInterval\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"widgets\": [\n        {\n          \"_links\": {\n            \"links\": {\n              \"aliquip3_2\": {},\n              \"non_\": {}\n            }\n          },\n          \"allowedSizes\": [\n            {\n              \"columnSpan\": \"<integer>\",\n              \"rowSpan\": \"<integer>\"\n            },\n            {\n              \"columnSpan\": \"<integer>\",\n              \"rowSpan\": \"<integer>\"\n            }\n          ],\n          \"areSettingsBlockedForUser\": \"<boolean>\",\n          \"artifactId\": \"<string>\",\n          \"configurationContributionId\": \"<string>\",\n          \"configurationContributionRelativeId\": \"<string>\",\n          \"contentUri\": \"<string>\",\n          \"contributionId\": \"<string>\",\n          \"dashboard\": {\n            \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n          },\n          \"eTag\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"isEnabled\": \"<boolean>\",\n          \"isNameConfigurable\": \"<boolean>\",\n          \"lightboxOptions\": {\n            \"height\": \"<integer>\",\n            \"resizable\": \"<boolean>\",\n            \"width\": \"<integer>\"\n          },\n          \"loadingImageUrl\": \"<string>\",\n          \"name\": \"<string>\",\n          \"position\": {\n            \"column\": \"<integer>\",\n            \"row\": \"<integer>\"\n          },\n          \"settings\": \"<string>\",\n          \"settingsVersion\": {\n            \"major\": \"<integer>\",\n            \"minor\": \"<integer>\",\n            \"patch\": \"<integer>\"\n          },\n          \"size\": {\n            \"columnSpan\": \"<integer>\",\n            \"rowSpan\": \"<integer>\"\n          },\n          \"typeId\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"_links\": {\n            \"links\": {\n              \"ut_23e\": {}\n            }\n          },\n          \"allowedSizes\": [\n            {\n              \"columnSpan\": \"<integer>\",\n              \"rowSpan\": \"<integer>\"\n            },\n            {\n              \"columnSpan\": \"<integer>\",\n              \"rowSpan\": \"<integer>\"\n            }\n          ],\n          \"areSettingsBlockedForUser\": \"<boolean>\",\n          \"artifactId\": \"<string>\",\n          \"configurationContributionId\": \"<string>\",\n          \"configurationContributionRelativeId\": \"<string>\",\n          \"contentUri\": \"<string>\",\n          \"contributionId\": \"<string>\",\n          \"dashboard\": {\n            \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n          },\n          \"eTag\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"isEnabled\": \"<boolean>\",\n          \"isNameConfigurable\": \"<boolean>\",\n          \"lightboxOptions\": {\n            \"height\": \"<integer>\",\n            \"resizable\": \"<boolean>\",\n            \"width\": \"<integer>\"\n          },\n          \"loadingImageUrl\": \"<string>\",\n          \"name\": \"<string>\",\n          \"position\": {\n            \"column\": \"<integer>\",\n            \"row\": \"<integer>\"\n          },\n          \"settings\": \"<string>\",\n          \"settingsVersion\": {\n            \"major\": \"<integer>\",\n            \"minor\": \"<integer>\",\n            \"patch\": \"<integer>\"\n          },\n          \"size\": {\n            \"columnSpan\": \"<integer>\",\n            \"rowSpan\": \"<integer>\"\n          },\n          \"typeId\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"_links\": {\n        \"links\": {\n          \"tempor_a\": {},\n          \"do_7d_\": {},\n          \"elit_949\": {}\n        }\n      },\n      \"dashboardScope\": \"collection_User\",\n      \"description\": \"<string>\",\n      \"eTag\": \"<string>\",\n      \"groupId\": \"<uuid>\",\n      \"id\": \"<uuid>\",\n      \"lastAccessedDate\": \"<dateTime>\",\n      \"modifiedBy\": \"<uuid>\",\n      \"modifiedDate\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"ownerId\": \"<uuid>\",\n      \"position\": \"<integer>\",\n      \"refreshInterval\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"widgets\": [\n        {\n          \"_links\": {\n            \"links\": {\n              \"elit_ff5\": {}\n            }\n          },\n          \"allowedSizes\": [\n            {\n              \"columnSpan\": \"<integer>\",\n              \"rowSpan\": \"<integer>\"\n            },\n            {\n              \"columnSpan\": \"<integer>\",\n              \"rowSpan\": \"<integer>\"\n            }\n          ],\n          \"areSettingsBlockedForUser\": \"<boolean>\",\n          \"artifactId\": \"<string>\",\n          \"configurationContributionId\": \"<string>\",\n          \"configurationContributionRelativeId\": \"<string>\",\n          \"contentUri\": \"<string>\",\n          \"contributionId\": \"<string>\",\n          \"dashboard\": {\n            \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n          },\n          \"eTag\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"isEnabled\": \"<boolean>\",\n          \"isNameConfigurable\": \"<boolean>\",\n          \"lightboxOptions\": {\n            \"height\": \"<integer>\",\n            \"resizable\": \"<boolean>\",\n            \"width\": \"<integer>\"\n          },\n          \"loadingImageUrl\": \"<string>\",\n          \"name\": \"<string>\",\n          \"position\": {\n            \"column\": \"<integer>\",\n            \"row\": \"<integer>\"\n          },\n          \"settings\": \"<string>\",\n          \"settingsVersion\": {\n            \"major\": \"<integer>\",\n            \"minor\": \"<integer>\",\n            \"patch\": \"<integer>\"\n          },\n          \"size\": {\n            \"columnSpan\": \"<integer>\",\n            \"rowSpan\": \"<integer>\"\n          },\n          \"typeId\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"_links\": {\n            \"links\": {\n              \"aute24b\": {},\n              \"sinte1\": {},\n              \"qui_a\": {}\n            }\n          },\n          \"allowedSizes\": [\n            {\n              \"columnSpan\": \"<integer>\",\n              \"rowSpan\": \"<integer>\"\n            },\n            {\n              \"columnSpan\": \"<integer>\",\n              \"rowSpan\": \"<integer>\"\n            }\n          ],\n          \"areSettingsBlockedForUser\": \"<boolean>\",\n          \"artifactId\": \"<string>\",\n          \"configurationContributionId\": \"<string>\",\n          \"configurationContributionRelativeId\": \"<string>\",\n          \"contentUri\": \"<string>\",\n          \"contributionId\": \"<string>\",\n          \"dashboard\": {\n            \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n          },\n          \"eTag\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"isEnabled\": \"<boolean>\",\n          \"isNameConfigurable\": \"<boolean>\",\n          \"lightboxOptions\": {\n            \"height\": \"<integer>\",\n            \"resizable\": \"<boolean>\",\n            \"width\": \"<integer>\"\n          },\n          \"loadingImageUrl\": \"<string>\",\n          \"name\": \"<string>\",\n          \"position\": {\n            \"column\": \"<integer>\",\n            \"row\": \"<integer>\"\n          },\n          \"settings\": \"<string>\",\n          \"settingsVersion\": {\n            \"major\": \"<integer>\",\n            \"minor\": \"<integer>\",\n            \"patch\": \"<integer>\"\n          },\n          \"size\": {\n            \"columnSpan\": \"<integer>\",\n            \"rowSpan\": \"<integer>\"\n          },\n          \"typeId\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"permission\": \"edit\",\n  \"teamDashboardPermission\": \"create\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the name and position of dashboards in the supplied group, and remove omitted dashboards. Does not modify dashboard content.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Widgets",
          "filename": "Widgets",
          "root": {
            "docs": "APIs for viewing and managing widgets.",
            "meta": {
              "name": "Widgets"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Widgets Create",
              "filename": "Widgets Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}/widgets?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"consectetur_547\": {},\n      \"aliquip87d\": {},\n      \"elit_6\": {}\n    }\n  },\n  \"allowedSizes\": [\n    {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    },\n    {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    }\n  ],\n  \"areSettingsBlockedForUser\": \"<boolean>\",\n  \"artifactId\": \"<string>\",\n  \"configurationContributionId\": \"<string>\",\n  \"configurationContributionRelativeId\": \"<string>\",\n  \"contentUri\": \"<string>\",\n  \"contributionId\": \"<string>\",\n  \"dashboard\": {\n    \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n  },\n  \"eTag\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"isEnabled\": \"<boolean>\",\n  \"isNameConfigurable\": \"<boolean>\",\n  \"lightboxOptions\": {\n    \"height\": \"<integer>\",\n    \"resizable\": \"<boolean>\",\n    \"width\": \"<integer>\"\n  },\n  \"loadingImageUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"position\": {\n    \"column\": \"<integer>\",\n    \"row\": \"<integer>\"\n  },\n  \"settings\": \"<string>\",\n  \"settingsVersion\": {\n    \"major\": \"<integer>\",\n    \"minor\": \"<integer>\",\n    \"patch\": \"<integer>\"\n  },\n  \"size\": {\n    \"columnSpan\": \"<integer>\",\n    \"rowSpan\": \"<integer>\"\n  },\n  \"typeId\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a widget on the specified dashboard.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Widgets Delete",
              "filename": "Widgets Delete.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}/widgets/{{widgetId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "widgetId",
                    "value": "{{widgetId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete the specified widget.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Widgets Get Widget",
              "filename": "Widgets Get Widget.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}/widgets/{{widgetId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "widgetId",
                    "value": "{{widgetId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the current state of the specified widget.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Widgets Get Widgets",
              "filename": "Widgets Get Widgets.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}/widgets?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "eTag",
                    "value": "<string>",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get widgets contained on the specified dashboard.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Widgets Replace Widget",
              "filename": "Widgets Replace Widget.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}/widgets/{{widgetId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "widgetId",
                    "value": "{{widgetId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"consectetur_547\": {},\n      \"aliquip87d\": {},\n      \"elit_6\": {}\n    }\n  },\n  \"allowedSizes\": [\n    {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    },\n    {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    }\n  ],\n  \"areSettingsBlockedForUser\": \"<boolean>\",\n  \"artifactId\": \"<string>\",\n  \"configurationContributionId\": \"<string>\",\n  \"configurationContributionRelativeId\": \"<string>\",\n  \"contentUri\": \"<string>\",\n  \"contributionId\": \"<string>\",\n  \"dashboard\": {\n    \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n  },\n  \"eTag\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"isEnabled\": \"<boolean>\",\n  \"isNameConfigurable\": \"<boolean>\",\n  \"lightboxOptions\": {\n    \"height\": \"<integer>\",\n    \"resizable\": \"<boolean>\",\n    \"width\": \"<integer>\"\n  },\n  \"loadingImageUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"position\": {\n    \"column\": \"<integer>\",\n    \"row\": \"<integer>\"\n  },\n  \"settings\": \"<string>\",\n  \"settingsVersion\": {\n    \"major\": \"<integer>\",\n    \"minor\": \"<integer>\",\n    \"patch\": \"<integer>\"\n  },\n  \"size\": {\n    \"columnSpan\": \"<integer>\",\n    \"rowSpan\": \"<integer>\"\n  },\n  \"typeId\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Override the  state of the specified widget.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Widgets Replace Widgets",
              "filename": "Widgets Replace Widgets.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}/widgets?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "eTag",
                    "value": "<string>",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"_links\": {\n      \"links\": {\n        \"est7\": {},\n        \"laboris_545\": {},\n        \"ad_b7\": {}\n      }\n    },\n    \"allowedSizes\": [\n      {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      },\n      {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      }\n    ],\n    \"areSettingsBlockedForUser\": \"<boolean>\",\n    \"artifactId\": \"<string>\",\n    \"configurationContributionId\": \"<string>\",\n    \"configurationContributionRelativeId\": \"<string>\",\n    \"contentUri\": \"<string>\",\n    \"contributionId\": \"<string>\",\n    \"dashboard\": {\n      \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n    },\n    \"eTag\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isEnabled\": \"<boolean>\",\n    \"isNameConfigurable\": \"<boolean>\",\n    \"lightboxOptions\": {\n      \"height\": \"<integer>\",\n      \"resizable\": \"<boolean>\",\n      \"width\": \"<integer>\"\n    },\n    \"loadingImageUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"position\": {\n      \"column\": \"<integer>\",\n      \"row\": \"<integer>\"\n    },\n    \"settings\": \"<string>\",\n    \"settingsVersion\": {\n      \"major\": \"<integer>\",\n      \"minor\": \"<integer>\",\n      \"patch\": \"<integer>\"\n    },\n    \"size\": {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    },\n    \"typeId\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  {\n    \"_links\": {\n      \"links\": {\n        \"mollit_73\": {}\n      }\n    },\n    \"allowedSizes\": [\n      {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      },\n      {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      }\n    ],\n    \"areSettingsBlockedForUser\": \"<boolean>\",\n    \"artifactId\": \"<string>\",\n    \"configurationContributionId\": \"<string>\",\n    \"configurationContributionRelativeId\": \"<string>\",\n    \"contentUri\": \"<string>\",\n    \"contributionId\": \"<string>\",\n    \"dashboard\": {\n      \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n    },\n    \"eTag\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isEnabled\": \"<boolean>\",\n    \"isNameConfigurable\": \"<boolean>\",\n    \"lightboxOptions\": {\n      \"height\": \"<integer>\",\n      \"resizable\": \"<boolean>\",\n      \"width\": \"<integer>\"\n    },\n    \"loadingImageUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"position\": {\n      \"column\": \"<integer>\",\n      \"row\": \"<integer>\"\n    },\n    \"settings\": \"<string>\",\n    \"settingsVersion\": {\n      \"major\": \"<integer>\",\n      \"minor\": \"<integer>\",\n      \"patch\": \"<integer>\"\n    },\n    \"size\": {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    },\n    \"typeId\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Replace the widgets on specified dashboard with the supplied widgets.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Widgets Update Widget",
              "filename": "Widgets Update Widget.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}/widgets/{{widgetId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "widgetId",
                    "value": "{{widgetId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"consectetur_547\": {},\n      \"aliquip87d\": {},\n      \"elit_6\": {}\n    }\n  },\n  \"allowedSizes\": [\n    {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    },\n    {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    }\n  ],\n  \"areSettingsBlockedForUser\": \"<boolean>\",\n  \"artifactId\": \"<string>\",\n  \"configurationContributionId\": \"<string>\",\n  \"configurationContributionRelativeId\": \"<string>\",\n  \"contentUri\": \"<string>\",\n  \"contributionId\": \"<string>\",\n  \"dashboard\": {\n    \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n  },\n  \"eTag\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"isEnabled\": \"<boolean>\",\n  \"isNameConfigurable\": \"<boolean>\",\n  \"lightboxOptions\": {\n    \"height\": \"<integer>\",\n    \"resizable\": \"<boolean>\",\n    \"width\": \"<integer>\"\n  },\n  \"loadingImageUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"position\": {\n    \"column\": \"<integer>\",\n    \"row\": \"<integer>\"\n  },\n  \"settings\": \"<string>\",\n  \"settingsVersion\": {\n    \"major\": \"<integer>\",\n    \"minor\": \"<integer>\",\n    \"patch\": \"<integer>\"\n  },\n  \"size\": {\n    \"columnSpan\": \"<integer>\",\n    \"rowSpan\": \"<integer>\"\n  },\n  \"typeId\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Perform a partial update of the specified widget.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Widgets Update Widgets",
              "filename": "Widgets Update Widgets.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/dashboard/dashboards/{{dashboardId}}/widgets?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "eTag",
                    "value": "<string>",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "dashboardId",
                    "value": "{{dashboardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"_links\": {\n      \"links\": {\n        \"est7\": {},\n        \"laboris_545\": {},\n        \"ad_b7\": {}\n      }\n    },\n    \"allowedSizes\": [\n      {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      },\n      {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      }\n    ],\n    \"areSettingsBlockedForUser\": \"<boolean>\",\n    \"artifactId\": \"<string>\",\n    \"configurationContributionId\": \"<string>\",\n    \"configurationContributionRelativeId\": \"<string>\",\n    \"contentUri\": \"<string>\",\n    \"contributionId\": \"<string>\",\n    \"dashboard\": {\n      \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n    },\n    \"eTag\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isEnabled\": \"<boolean>\",\n    \"isNameConfigurable\": \"<boolean>\",\n    \"lightboxOptions\": {\n      \"height\": \"<integer>\",\n      \"resizable\": \"<boolean>\",\n      \"width\": \"<integer>\"\n    },\n    \"loadingImageUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"position\": {\n      \"column\": \"<integer>\",\n      \"row\": \"<integer>\"\n    },\n    \"settings\": \"<string>\",\n    \"settingsVersion\": {\n      \"major\": \"<integer>\",\n      \"minor\": \"<integer>\",\n      \"patch\": \"<integer>\"\n    },\n    \"size\": {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    },\n    \"typeId\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  {\n    \"_links\": {\n      \"links\": {\n        \"mollit_73\": {}\n      }\n    },\n    \"allowedSizes\": [\n      {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      },\n      {\n        \"columnSpan\": \"<integer>\",\n        \"rowSpan\": \"<integer>\"\n      }\n    ],\n    \"areSettingsBlockedForUser\": \"<boolean>\",\n    \"artifactId\": \"<string>\",\n    \"configurationContributionId\": \"<string>\",\n    \"configurationContributionRelativeId\": \"<string>\",\n    \"contentUri\": \"<string>\",\n    \"contributionId\": \"<string>\",\n    \"dashboard\": {\n      \"value\": \"<Circular reference to #/components/schemas/Dashboard detected>\"\n    },\n    \"eTag\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isEnabled\": \"<boolean>\",\n    \"isNameConfigurable\": \"<boolean>\",\n    \"lightboxOptions\": {\n      \"height\": \"<integer>\",\n      \"resizable\": \"<boolean>\",\n      \"width\": \"<integer>\"\n    },\n    \"loadingImageUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"position\": {\n      \"column\": \"<integer>\",\n      \"row\": \"<integer>\"\n    },\n    \"settings\": \"<string>\",\n    \"settingsVersion\": {\n      \"major\": \"<integer>\",\n      \"minor\": \"<integer>\",\n      \"patch\": \"<integer>\"\n    },\n    \"size\": {\n      \"columnSpan\": \"<integer>\",\n      \"rowSpan\": \"<integer>\"\n    },\n    \"typeId\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the supplied widgets on the dashboard using supplied state. State of existing Widgets not passed in the widget list is preserved.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Widget Types",
          "filename": "Widget Types",
          "root": {
            "docs": "APIs for viewing widget type information.",
            "meta": {
              "name": "Widget Types"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Widget Types Get Widget Metadata",
              "filename": "Widget Types Get Widget Metadata.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/dashboard/widgettypes/{{contributionId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "contributionId",
                    "value": "{{contributionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the widget metadata satisfying the specified contribution ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Widget Types Get Widget Types",
              "filename": "Widget Types Get Widget Types.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/dashboard/widgettypes?$scope=project_Team&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$scope",
                    "value": "project_Team",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all available widget metadata in alphabetical order, including widgets marked with isVisibleFromCatalog == false.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Distributed Task",
      "filename": "Distributed Task",
      "root": {
        "docs": "[Pipelines REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/distributedtask/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Distributed Task"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Agentclouds",
          "filename": "Agentclouds",
          "root": {
            "meta": {
              "name": "Agentclouds"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Agentclouds Add",
              "filename": "Agentclouds Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/agentclouds?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"acquireAgentEndpoint\": \"<string>\",\n  \"acquisitionTimeout\": \"<integer>\",\n  \"agentCloudId\": \"<integer>\",\n  \"getAccountParallelismEndpoint\": \"<string>\",\n  \"getAgentDefinitionEndpoint\": \"<string>\",\n  \"getAgentRequestStatusEndpoint\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"internal\": \"<boolean>\",\n  \"maxParallelism\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"releaseAgentEndpoint\": \"<string>\",\n  \"sharedSecret\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agentclouds Delete",
              "filename": "Agentclouds Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/agentclouds/{{agentCloudId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "agentCloudId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agentclouds Get",
              "filename": "Agentclouds Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/agentclouds/{{agentCloudId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "agentCloudId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agentclouds List",
              "filename": "Agentclouds List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/agentclouds?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agentclouds Update",
              "filename": "Agentclouds Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/agentclouds/{{agentCloudId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "agentCloudId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"acquireAgentEndpoint\": \"<string>\",\n  \"acquisitionTimeout\": \"<integer>\",\n  \"agentCloudId\": \"<integer>\",\n  \"getAccountParallelismEndpoint\": \"<string>\",\n  \"getAgentDefinitionEndpoint\": \"<string>\",\n  \"getAgentRequestStatusEndpoint\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"internal\": \"<boolean>\",\n  \"maxParallelism\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"releaseAgentEndpoint\": \"<string>\",\n  \"sharedSecret\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Agents",
          "filename": "Agents",
          "root": {
            "docs": "Agents run jobs in pipelines.",
            "meta": {
              "name": "Agents"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Agents Add",
              "filename": "Agents Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}/agents?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"assignedAgentCloudRequest\": {},\n  \"assignedRequest\": {},\n  \"authorization\": {},\n  \"createdOn\": \"1975-06-20T21:54:51.305Z\",\n  \"lastCompletedRequest\": {},\n  \"maxParallelism\": -71825202,\n  \"pendingUpdate\": {},\n  \"properties\": {},\n  \"statusChangedOn\": \"1993-12-22T06:13:06.187Z\",\n  \"systemCapabilities\": {\n    \"proident3e\": \"amet mollit\"\n  },\n  \"userCapabilities\": {\n    \"ex_3\": \"pariatur aliquip sunt aute\",\n    \"magna5\": \"dolore\"\n  },\n  \"_links\": {\n    \"links\": {\n      \"irurea03\": {}\n    }\n  },\n  \"accessPoint\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"osDescription\": \"<string>\",\n  \"provisioningState\": \"<string>\",\n  \"status\": \"offline\",\n  \"version\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds an agent to a pool.  You probably don't want to call this endpoint directly. Instead, [configure an agent](https://docs.microsoft.com/azure/devops/pipelines/agents/agents) using the agent download package.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agents Delete",
              "filename": "Agents Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}/agents/{{agentId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "agentId",
                    "value": "{{agentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete an agent.  You probably don't want to call this endpoint directly. Instead, [use the agent configuration script](https://docs.microsoft.com/azure/devops/pipelines/agents/agents) to remove an agent from your organization.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agents Get",
              "filename": "Agents Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}/agents/{{agentId}}?includeCapabilities=<boolean>&includeAssignedRequest=<boolean>&includeLastCompletedRequest=<boolean>&propertyFilters=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeCapabilities",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeAssignedRequest",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLastCompletedRequest",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "agentId",
                    "value": "{{agentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about an agent.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agents List",
              "filename": "Agents List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}/agents?agentName=<string>&includeCapabilities=<boolean>&includeAssignedRequest=<boolean>&includeLastCompletedRequest=<boolean>&propertyFilters=<string>&demands=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "agentName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeCapabilities",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeAssignedRequest",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLastCompletedRequest",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "demands",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of agents.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agents Replace Agent",
              "filename": "Agents Replace Agent.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}/agents/{{agentId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "agentId",
                    "value": "{{agentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"assignedAgentCloudRequest\": {},\n  \"assignedRequest\": {},\n  \"authorization\": {},\n  \"createdOn\": \"1975-06-20T21:54:51.305Z\",\n  \"lastCompletedRequest\": {},\n  \"maxParallelism\": -71825202,\n  \"pendingUpdate\": {},\n  \"properties\": {},\n  \"statusChangedOn\": \"1993-12-22T06:13:06.187Z\",\n  \"systemCapabilities\": {\n    \"proident3e\": \"amet mollit\"\n  },\n  \"userCapabilities\": {\n    \"ex_3\": \"pariatur aliquip sunt aute\",\n    \"magna5\": \"dolore\"\n  },\n  \"_links\": {\n    \"links\": {\n      \"irurea03\": {}\n    }\n  },\n  \"accessPoint\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"osDescription\": \"<string>\",\n  \"provisioningState\": \"<string>\",\n  \"status\": \"offline\",\n  \"version\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Replace an agent.  You probably don't want to call this endpoint directly. Instead, [use the agent configuration script](https://docs.microsoft.com/azure/devops/pipelines/agents/agents) to remove and reconfigure an agent from your organization.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Agents Update",
              "filename": "Agents Update.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}/agents/{{agentId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "agentId",
                    "value": "{{agentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"assignedAgentCloudRequest\": {},\n  \"assignedRequest\": {},\n  \"authorization\": {},\n  \"createdOn\": \"1975-06-20T21:54:51.305Z\",\n  \"lastCompletedRequest\": {},\n  \"maxParallelism\": -71825202,\n  \"pendingUpdate\": {},\n  \"properties\": {},\n  \"statusChangedOn\": \"1993-12-22T06:13:06.187Z\",\n  \"systemCapabilities\": {\n    \"proident3e\": \"amet mollit\"\n  },\n  \"userCapabilities\": {\n    \"ex_3\": \"pariatur aliquip sunt aute\",\n    \"magna5\": \"dolore\"\n  },\n  \"_links\": {\n    \"links\": {\n      \"irurea03\": {}\n    }\n  },\n  \"accessPoint\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"osDescription\": \"<string>\",\n  \"provisioningState\": \"<string>\",\n  \"status\": \"offline\",\n  \"version\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update agent details.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Deploymentgroups",
          "filename": "Deploymentgroups",
          "root": {
            "meta": {
              "name": "Deploymentgroups"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Deploymentgroups Add",
              "filename": "Deploymentgroups Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"poolId\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a deployment group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Deploymentgroups Delete",
              "filename": "Deploymentgroups Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups/{{deploymentGroupId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "deploymentGroupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a deployment group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Deploymentgroups Get",
              "filename": "Deploymentgroups Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups/{{deploymentGroupId}}?actionFilter=none&$expand=machines&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "actionFilter",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "machines",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "deploymentGroupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a deployment group by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Deploymentgroups List",
              "filename": "Deploymentgroups List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups?actionFilter=none&$expand=machines&$top=100",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "actionFilter",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "machines",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "100",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "ids",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of deployment groups by name or IDs.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Deploymentgroups Update",
              "filename": "Deploymentgroups Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups/{{deploymentGroupId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "deploymentGroupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a deployment group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Agentcloudtypes",
          "filename": "Agentcloudtypes",
          "root": {
            "meta": {
              "name": "Agentcloudtypes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Agentcloudtypes List",
              "filename": "Agentcloudtypes List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/agentcloudtypes?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get agent cloud types.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Elasticpoollogs",
          "filename": "Elasticpoollogs",
          "root": {
            "docs": "Controller to handle organization/collection level elastic pool logs operations",
            "meta": {
              "name": "Elasticpoollogs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Elasticpoollogs List",
              "filename": "Elasticpoollogs List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/elasticpools/{{poolId}}/logs?$top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get elastic pool diagnostics logs for a specified Elastic Pool.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Environmentdeployment Records",
          "filename": "Environmentdeployment Records",
          "root": {
            "meta": {
              "name": "Environmentdeployment Records"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Environmentdeployment Records List",
              "filename": "Environmentdeployment Records List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments/{{environmentId}}/environmentdeploymentrecords?continuationToken=<string>&top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get environment deployment execution history",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Elasticpools",
          "filename": "Elasticpools",
          "root": {
            "docs": "Controller to handle organization/collection level elastic pool operations",
            "meta": {
              "name": "Elasticpools"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Elasticpools Create",
              "filename": "Elasticpools Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/elasticpools?poolName=<string>&authorizeAllPipelines=<boolean>&autoProvisionProjectPools=<boolean>&projectId=<uuid>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "poolName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "authorizeAllPipelines",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "autoProvisionProjectPools",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"agentInteractiveUI\": \"<boolean>\",\n  \"azureId\": \"<string>\",\n  \"desiredIdle\": \"<integer>\",\n  \"desiredSize\": \"<integer>\",\n  \"maxCapacity\": \"<integer>\",\n  \"maxSavedNodeCount\": \"<integer>\",\n  \"offlineSince\": \"<dateTime>\",\n  \"orchestrationType\": \"flexible\",\n  \"osType\": \"windows\",\n  \"poolId\": \"<integer>\",\n  \"recycleAfterEachUse\": \"<boolean>\",\n  \"serviceEndpointId\": \"<uuid>\",\n  \"serviceEndpointScope\": \"<uuid>\",\n  \"sizingAttempts\": \"<integer>\",\n  \"state\": \"new\",\n  \"timeToLiveMinutes\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new elastic pool. This will create a new TaskAgentPool at the organization level. If a project id is provided, this will create a new TaskAgentQueue in the specified project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Elasticpools Get",
              "filename": "Elasticpools Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/elasticpools/{{poolId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns the Elastic Pool with the specified Pool Id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Elasticpools List",
              "filename": "Elasticpools List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/elasticpools?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of all Elastic Pools.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Elasticpools Update",
              "filename": "Elasticpools Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/elasticpools/{{poolId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"agentInteractiveUI\": \"<boolean>\",\n  \"azureId\": \"<string>\",\n  \"desiredIdle\": \"<integer>\",\n  \"maxCapacity\": \"<integer>\",\n  \"maxSavedNodeCount\": \"<integer>\",\n  \"orchestrationType\": \"uniform\",\n  \"osType\": \"windows\",\n  \"recycleAfterEachUse\": \"<boolean>\",\n  \"serviceEndpointId\": \"<uuid>\",\n  \"serviceEndpointScope\": \"<uuid>\",\n  \"timeToLiveMinutes\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update settings on a specified Elastic Pool.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Environments",
          "filename": "Environments",
          "root": {
            "meta": {
              "name": "Environments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Environments Add",
              "filename": "Environments Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create an environment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Environments Delete",
              "filename": "Environments Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments/{{environmentId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete the specified environment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Environments Get",
              "filename": "Environments Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments/{{environmentId}}?expands=resourceReferences&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "expands",
                    "value": "resourceReferences",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get an environment by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Environments List",
              "filename": "Environments List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all environments.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Environments Update",
              "filename": "Environments Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments/{{environmentId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the specified environment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Logs",
          "filename": "Logs",
          "root": {
            "meta": {
              "name": "Logs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Logs Append Log Content",
              "filename": "Logs Append Log Content.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{scopeId}}entifier/_apis/distributedtask/hubs/{{hubName}}/plans/{{planId}}/logs/{{logId}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/octet-stream",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeIdentifier",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "hubName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "logId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "text",
                  "text": "<string>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Append a log to a task's log. The log should be sent in the body of the request as a TaskLog object stream.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Logs Create",
              "filename": "Logs Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{scopeId}}entifier/_apis/distributedtask/hubs/{{hubName}}/plans/{{planId}}/logs?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeIdentifier",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "hubName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"createdOn\": \"2019-07-01T05:01:30.403Z\",\n  \"indexLocation\": \"Ut Lorem sit\",\n  \"lastChangedOn\": \"1974-11-12T10:23:20.631Z\",\n  \"lineCount\": -83205105,\n  \"path\": \"dolore do occaecat et\",\n  \"id\": \"<integer>\",\n  \"location\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a log and connect it to a pipeline run's execution plan.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Events",
          "filename": "Events",
          "root": {
            "meta": {
              "name": "Events"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Events Post Event",
              "filename": "Events Post Event.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{scopeId}}entifier/_apis/distributedtask/hubs/{{hubName}}/plans/{{planId}}/events?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeIdentifier",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "hubName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"jobId\": \"<uuid>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Send a pipeline job event to be processed by the execution plan.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Oidctoken",
          "filename": "Oidctoken",
          "root": {
            "meta": {
              "name": "Oidctoken"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Oidctoken Create",
              "filename": "Oidctoken Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{scopeId}}entifier/_apis/distributedtask/hubs/{{hubName}}/plans/{{planId}}/jobs/{{jobId}}/oidctoken?serviceConnectionId=<uuid>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "serviceConnectionId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeIdentifier",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "hubName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "jobId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"irure_1e\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Kubernetes",
          "filename": "Kubernetes",
          "root": {
            "meta": {
              "name": "Kubernetes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Kubernetes Add",
              "filename": "Kubernetes Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments/{{environmentId}}/providers/kubernetes?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"clusterName\": \"<string>\",\n  \"name\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Kubernetes Delete",
              "filename": "Kubernetes Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments/{{environmentId}}/providers/kubernetes/{{resourceId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Kubernetes Get",
              "filename": "Kubernetes Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/environments/{{environmentId}}/providers/kubernetes/{{resourceId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Nodes",
          "filename": "Nodes",
          "root": {
            "docs": "Controller to handle organization/collection level elastic node operations",
            "meta": {
              "name": "Nodes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Nodes List",
              "filename": "Nodes List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/elasticpools/{{poolId}}/nodes?$state=restartingAgent&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$state",
                    "value": "restartingAgent",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of ElasticNodes currently in the ElasticPool",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Nodes Update",
              "filename": "Nodes Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/elasticpools/{{poolId}}/nodes/{{elasticNodeId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "elasticNodeId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"state\": \"pendingDelete\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update properties on a specified ElasticNode",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pools",
          "filename": "Pools",
          "root": {
            "docs": "Agent pools offer up agents at the organization level.",
            "meta": {
              "name": "Pools"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pools Add",
              "filename": "Pools Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"agentCloudId\": 14027435,\n  \"autoProvision\": true,\n  \"autoSize\": true,\n  \"autoUpdate\": true,\n  \"createdBy\": {},\n  \"createdOn\": \"1974-01-25T21:19:37.371Z\",\n  \"owner\": {},\n  \"properties\": {},\n  \"targetSize\": 35209177,\n  \"id\": \"<integer>\",\n  \"isHosted\": \"<boolean>\",\n  \"isLegacy\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"options\": \"none\",\n  \"poolType\": \"deployment\",\n  \"scope\": \"<uuid>\",\n  \"size\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create an agent pool.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pools Delete",
              "filename": "Pools Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete an agent pool.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pools Get Agent Pools By Ids",
              "filename": "Pools Get Agent Pools By Ids.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools?poolIds=<string>&actionFilter=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "poolIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "actionFilter",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of agent pools.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pools Get",
              "filename": "Pools Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}?properties=<string>&actionFilter=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "properties",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "actionFilter",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about an agent pool.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pools Update",
              "filename": "Pools Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/pools/{{poolId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "poolId",
                    "value": "{{poolId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"agentCloudId\": 14027435,\n  \"autoProvision\": true,\n  \"autoSize\": true,\n  \"autoUpdate\": true,\n  \"createdBy\": {},\n  \"createdOn\": \"1974-01-25T21:19:37.371Z\",\n  \"owner\": {},\n  \"properties\": {},\n  \"targetSize\": 35209177,\n  \"id\": \"<integer>\",\n  \"isHosted\": \"<boolean>\",\n  \"isLegacy\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"options\": \"none\",\n  \"poolType\": \"deployment\",\n  \"scope\": \"<uuid>\",\n  \"size\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update properties on an agent pool",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Records",
          "filename": "Records",
          "root": {
            "meta": {
              "name": "Records"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Records Update",
              "filename": "Records Update.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{scopeId}}entifier/_apis/distributedtask/hubs/{{hubName}}/plans/{{planId}}/timelines/{{timelineId}}/records?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeIdentifier",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "hubName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "timelineId",
                    "value": "{{timelineId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"sunt ut velit id\",\n  \"count\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update timeline records if they already exist, otherwise create new ones for the same timeline.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Targets",
          "filename": "Targets",
          "root": {
            "meta": {
              "name": "Targets"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Targets Delete",
              "filename": "Targets Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups/{{deploymentGroupId}}/targets/{{targetId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "deploymentGroupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "targetId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a deployment target in a deployment group. This deletes the agent from associated deployment pool too.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Targets Get",
              "filename": "Targets Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups/{{deploymentGroupId}}/targets/{{targetId}}?$expand=lastCompletedRequest&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "lastCompletedRequest",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "deploymentGroupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "targetId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a deployment target by its ID in a deployment group",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Targets List",
              "filename": "Targets List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups/{{deploymentGroupId}}/targets?$expand=lastCompletedRequest&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "lastCompletedRequest",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "tags",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "partialNameMatch",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "agentStatus",
                    "value": "online",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "agentJobResult",
                    "value": "all",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "enabled",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "deploymentGroupId",
                    "value": "{{deploymentGroupId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of deployment targets in a deployment group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Targets Update",
              "filename": "Targets Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/deploymentgroups/{{deploymentGroupId}}/targets?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "deploymentGroupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"id\": \"<integer>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<integer>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update tags of a list of deployment targets in a deployment group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Requests",
          "filename": "Requests",
          "root": {
            "meta": {
              "name": "Requests"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Requests List",
              "filename": "Requests List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/agentclouds/{{agentCloudId}}/requests?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "agentCloudId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Variablegroups",
          "filename": "Variablegroups",
          "root": {
            "meta": {
              "name": "Variablegroups"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Variablegroups Add",
              "filename": "Variablegroups Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/variablegroups?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"providerData\": {},\n  \"type\": \"<string>\",\n  \"variableGroupProjectReferences\": [\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectReference\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectReference\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"variables\": {\n    \"ullamcobe\": {\n      \"isReadOnly\": \"<boolean>\",\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a variable group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variablegroups Delete",
              "filename": "Variablegroups Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/variablegroups/{{groupId}}?projectIds=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "projectIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a variable group",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variablegroups Get Variable Groups By Id",
              "filename": "Variablegroups Get Variable Groups By Id.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/variablegroups?groupIds=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "groupIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get variable groups by ids.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variablegroups Get",
              "filename": "Variablegroups Get.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/variablegroups/{{groupId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a variable group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variablegroups Share Variable Group",
              "filename": "Variablegroups Share Variable Group.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/variablegroups?variableGroupId=<integer>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "variableGroupId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectReference\": {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectReference\": {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    }\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a variable group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variablegroups Update",
              "filename": "Variablegroups Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/variablegroups/{{groupId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"providerData\": {},\n  \"type\": \"<string>\",\n  \"variableGroupProjectReferences\": [\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectReference\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectReference\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"variables\": {\n    \"ullamcobe\": {\n      \"isReadOnly\": \"<boolean>\",\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a variable group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Yamlschema",
          "filename": "Yamlschema",
          "root": {
            "meta": {
              "name": "Yamlschema"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Yamlschema Get",
              "filename": "Yamlschema Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/distributedtask/yamlschema?validateTaskNames=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "validateTaskNames",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "GET the Yaml schema used for Yaml file validation.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Taskgroups",
          "filename": "Taskgroups",
          "root": {
            "meta": {
              "name": "Taskgroups"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Taskgroups Add",
              "filename": "Taskgroups Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/taskgroups?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"author\": \"<string>\",\n  \"category\": \"<string>\",\n  \"description\": \"<string>\",\n  \"friendlyName\": \"<string>\",\n  \"iconUrl\": \"<string>\",\n  \"inputs\": [\n    {\n      \"aliases\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"defaultValue\": \"<string>\",\n      \"groupName\": \"<string>\",\n      \"helpMarkDown\": \"<string>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"options\": {\n        \"amet_a0\": \"<string>\",\n        \"culpa210\": \"<string>\"\n      },\n      \"properties\": {\n        \"irure_c\": \"<string>\",\n        \"eu6\": \"<string>\",\n        \"quisb\": \"<string>\"\n      },\n      \"required\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"validation\": {\n        \"expression\": \"<string>\",\n        \"message\": \"<string>\"\n      },\n      \"visibleRule\": \"<string>\"\n    },\n    {\n      \"aliases\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"defaultValue\": \"<string>\",\n      \"groupName\": \"<string>\",\n      \"helpMarkDown\": \"<string>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"options\": {\n        \"Ut8\": \"<string>\"\n      },\n      \"properties\": {\n        \"nulla_2\": \"<string>\",\n        \"dolor_0\": \"<string>\"\n      },\n      \"required\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"validation\": {\n        \"expression\": \"<string>\",\n        \"message\": \"<string>\"\n      },\n      \"visibleRule\": \"<string>\"\n    }\n  ],\n  \"instanceNameFormat\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDefinitionId\": \"<uuid>\",\n  \"runsOn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tasks\": [\n    {\n      \"alwaysRun\": \"<boolean>\",\n      \"condition\": \"<string>\",\n      \"continueOnError\": \"<boolean>\",\n      \"displayName\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"environment\": {\n        \"cillum_ff\": \"<string>\",\n        \"minim_46\": \"<string>\",\n        \"Ut_\": \"<string>\"\n      },\n      \"inputs\": {\n        \"suntdc\": \"<string>\",\n        \"aliqua_001\": \"<string>\",\n        \"sitc\": \"<string>\"\n      },\n      \"retryCountOnTaskFailure\": \"<integer>\",\n      \"task\": {\n        \"definitionType\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"versionSpec\": \"<string>\"\n      },\n      \"timeoutInMinutes\": \"<integer>\"\n    },\n    {\n      \"alwaysRun\": \"<boolean>\",\n      \"condition\": \"<string>\",\n      \"continueOnError\": \"<boolean>\",\n      \"displayName\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"environment\": {\n        \"dolorebd\": \"<string>\",\n        \"reprehenderit_b7\": \"<string>\",\n        \"elitb\": \"<string>\"\n      },\n      \"inputs\": {\n        \"ut9ad\": \"<string>\",\n        \"enim_38\": \"<string>\"\n      },\n      \"retryCountOnTaskFailure\": \"<integer>\",\n      \"task\": {\n        \"definitionType\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"versionSpec\": \"<string>\"\n      },\n      \"timeoutInMinutes\": \"<integer>\"\n    }\n  ],\n  \"version\": {\n    \"isTest\": \"<boolean>\",\n    \"major\": \"<integer>\",\n    \"minor\": \"<integer>\",\n    \"patch\": \"<integer>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a task group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Taskgroups Delete",
              "filename": "Taskgroups Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/taskgroups/{{taskGroupId}}?comment=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "comment",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "taskGroupId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a task group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Taskgroups List",
              "filename": "Taskgroups List.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/taskgroups/{{taskGroupId}}?expanded=<boolean>&taskIdFilter=<uuid>&deleted=<boolean>&$top=<integer>&continuationToken=<dateTime>&queryOrder=createdOnDescending&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "expanded",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "taskIdFilter",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "deleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queryOrder",
                    "value": "createdOnDescending",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "taskGroupId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "List task groups.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Taskgroups Update",
              "filename": "Taskgroups Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/taskgroups/{{taskGroupId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "taskGroupId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"author\": \"<string>\",\n  \"category\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"description\": \"<string>\",\n  \"friendlyName\": \"<string>\",\n  \"iconUrl\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"inputs\": [\n    {\n      \"aliases\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"defaultValue\": \"<string>\",\n      \"groupName\": \"<string>\",\n      \"helpMarkDown\": \"<string>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"options\": {\n        \"ipsum23\": \"<string>\",\n        \"Duis01\": \"<string>\"\n      },\n      \"properties\": {\n        \"officiab\": \"<string>\",\n        \"quis_db7\": \"<string>\"\n      },\n      \"required\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"validation\": {\n        \"expression\": \"<string>\",\n        \"message\": \"<string>\"\n      },\n      \"visibleRule\": \"<string>\"\n    },\n    {\n      \"aliases\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"defaultValue\": \"<string>\",\n      \"groupName\": \"<string>\",\n      \"helpMarkDown\": \"<string>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"options\": {\n        \"mollit4f\": \"<string>\",\n        \"Lorem194\": \"<string>\"\n      },\n      \"properties\": {\n        \"ipsum_ed\": \"<string>\",\n        \"Excepteur_0\": \"<string>\"\n      },\n      \"required\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"validation\": {\n        \"expression\": \"<string>\",\n        \"message\": \"<string>\"\n      },\n      \"visibleRule\": \"<string>\"\n    }\n  ],\n  \"instanceNameFormat\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDefinitionId\": \"<uuid>\",\n  \"revision\": \"<integer>\",\n  \"runsOn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tasks\": [\n    {\n      \"alwaysRun\": \"<boolean>\",\n      \"condition\": \"<string>\",\n      \"continueOnError\": \"<boolean>\",\n      \"displayName\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"environment\": {\n        \"aute_06\": \"<string>\",\n        \"qui189\": \"<string>\",\n        \"nisi7\": \"<string>\",\n        \"esse_05_\": \"<string>\"\n      },\n      \"inputs\": {\n        \"Loremb_\": \"<string>\",\n        \"dolor_3\": \"<string>\",\n        \"anim_13\": \"<string>\"\n      },\n      \"retryCountOnTaskFailure\": \"<integer>\",\n      \"task\": {\n        \"definitionType\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"versionSpec\": \"<string>\"\n      },\n      \"timeoutInMinutes\": \"<integer>\"\n    },\n    {\n      \"alwaysRun\": \"<boolean>\",\n      \"condition\": \"<string>\",\n      \"continueOnError\": \"<boolean>\",\n      \"displayName\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"environment\": {\n        \"none\": \"<string>\"\n      },\n      \"inputs\": {\n        \"tempor_0\": \"<string>\"\n      },\n      \"retryCountOnTaskFailure\": \"<integer>\",\n      \"task\": {\n        \"definitionType\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"versionSpec\": \"<string>\"\n      },\n      \"timeoutInMinutes\": \"<integer>\"\n    }\n  ],\n  \"version\": {\n    \"isTest\": \"<boolean>\",\n    \"major\": \"<integer>\",\n    \"minor\": \"<integer>\",\n    \"patch\": \"<integer>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a task group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Queues",
          "filename": "Queues",
          "root": {
            "docs": "Queues (called \"pools\" in the UI) connect projects to agent pools.",
            "meta": {
              "name": "Queues"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Queues Add",
              "filename": "Queues Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/queues?authorizePipelines=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "authorizePipelines",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"pool\": {\n    \"id\": \"<integer>\",\n    \"isHosted\": \"<boolean>\",\n    \"isLegacy\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"options\": \"none\",\n    \"poolType\": \"deployment\",\n    \"scope\": \"<uuid>\",\n    \"size\": \"<integer>\"\n  },\n  \"projectId\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new agent queue to connect a project to an agent pool.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Queues Delete",
              "filename": "Queues Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/queues/{{queueId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "queueId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes an agent queue from a project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Queues Get Agent Queues For Pools",
              "filename": "Queues Get Agent Queues For Pools.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/queues?poolIds=<string>&actionFilter=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "poolIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "actionFilter",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of agent queues by pool ids",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Queues Get",
              "filename": "Queues Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/distributedtask/queues/{{queueId}}?actionFilter=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "actionFilter",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "queueId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get information about an agent queue.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Favorite",
      "filename": "Favorite",
      "root": {
        "docs": "[Favorites - REST API (Azure DevOps Favorite) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/favorite/favorites?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Favorite"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Favorites",
          "filename": "Favorites",
          "root": {
            "docs": "Controller for public REST operations on Favorites.",
            "meta": {
              "name": "Favorites"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Favorites Create Favorite",
              "filename": "Favorites Create Favorite.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/favorite/favorites?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"artifactId\": \"<string>\",\n  \"artifactName\": \"<string>\",\n  \"artifactProperties\": {\n    \"officia7\": {},\n    \"cupidatatc0d\": {}\n  },\n  \"artifactScope\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"artifactType\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Favorites Delete Favorite By Id",
              "filename": "Favorites Delete Favorite By Id.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/favorite/favorites/{{favoriteId}}?artifactType=<string>&artifactScopeType=<string>&artifactScopeId=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "artifactType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "artifactScopeType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "artifactScopeId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "favoriteId",
                    "value": "{{favoriteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Favorites Get Favorite By Id",
              "filename": "Favorites Get Favorite By Id.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/favorite/favorites/{{favoriteId}}?artifactScopeType=<string>&artifactType=<string>&artifactScopeId=<string>&includeExtendedDetails=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "artifactScopeType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "artifactType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "artifactScopeId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeExtendedDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "favoriteId",
                    "value": "{{favoriteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Favorites Get Favorites",
              "filename": "Favorites Get Favorites.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/favorite/favorites?artifactType=<string>&artifactScopeType=<string>&artifactScopeId=<string>&includeExtendedDetails=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "artifactType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "artifactScopeType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "artifactScopeId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeExtendedDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Extension Management",
      "filename": "Extension Management",
      "root": {
        "docs": "Service:Extension Management",
        "meta": {
          "name": "Extension Management"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Installed Extensions",
          "filename": "Installed Extensions",
          "root": {
            "docs": "[Installed Extensions - REST API (Azure DevOps Extension Management) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/extensionmanagement/installed-extensions?view=azure-devops-rest-7.1)",
            "meta": {
              "name": "Installed Extensions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Installed Extensions Get",
              "filename": "Installed Extensions Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/extensionmanagement/installedextensionsbyname/{{publisherName}}/{{extensionName}}?assetTypes=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "assetTypes",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "publisherName",
                    "value": "{{publisherName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "extensionName",
                    "value": "{{extensionName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get an installed extension by its publisher and extension name.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Installed Extensions Install Extension By Name",
              "filename": "Installed Extensions Install Extension By Name.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/extensionmanagement/installedextensionsbyname/{{publisherName}}/{{extensionName}}/{{extensionVersion}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Install the specified extension into the account / project collection.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Installed Extensions List",
              "filename": "Installed Extensions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/extensionmanagement/installedextensions?includeDisabledExtensions=<boolean>&includeErrors=<boolean>&assetTypes=<string>&includeInstallationIssues=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeDisabledExtensions",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeErrors",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "assetTypes",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeInstallationIssues",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "List the installed extensions in the account / project collection.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Installed Extensions Uninstall Extension By Name",
              "filename": "Installed Extensions Uninstall Extension By Name.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/extensionmanagement/installedextensionsbyname/{{publisherName}}/{{extensionName}}?reason=<string>&reasonCode=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "reason",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "reasonCode",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "publisherName",
                    "value": "{{publisherName}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "extensionName",
                    "value": "{{extensionName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Uninstall the specified extension from the account / project collection.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Installed Extensions Update",
              "filename": "Installed Extensions Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/extensionmanagement/installedextensions?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"extensionId\": \"amet voluptate sunt id\",\n  \"extensionName\": \"dolor magna ea\",\n  \"flags\": \"trusted\",\n  \"installState\": {},\n  \"lastPublished\": \"1995-10-15T06:58:48.950Z\",\n  \"publisherId\": \"non est Excepteur incididunt\",\n  \"publisherName\": \"esse sit\",\n  \"registrationId\": \"urn:uuid:102e0133-c76d-f2c5-4927-960850dc12e7\",\n  \"version\": \"enim laborum fugiat\",\n  \"baseUri\": \"<string>\",\n  \"constraints\": [\n    {\n      \"group\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"inverse\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"properties\": {\n        \"item\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"relationships\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"group\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"inverse\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"properties\": {\n        \"item\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"relationships\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"contributions\": [\n    {\n      \"includes\": [\n        \"aut\",\n        \"et aliquip in proident\"\n      ],\n      \"properties\": {},\n      \"restrictedTo\": [\n        \"ea culpa tempor\",\n        \"qui et e\"\n      ],\n      \"targets\": [\n        \"veniam m\",\n        \"Lorem cupida\"\n      ],\n      \"type\": \"aute\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"visibleTo\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"includes\": [\n        \"dolore in nulla consequ\",\n        \"Ut est consectetur cillum ipsum\"\n      ],\n      \"properties\": {},\n      \"restrictedTo\": [\n        \"dolor Duis incididunt\",\n        \"deserunt id commodo\"\n      ],\n      \"targets\": [\n        \"sint in\",\n        \"cillum mollit \"\n      ],\n      \"type\": \"ut laborum reprehenderit consectetur enim\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"visibleTo\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"contributionTypes\": [\n    {\n      \"indexed\": true,\n      \"name\": \"irure sint laborum ea\",\n      \"properties\": {\n        \"iruref\": {},\n        \"ipsum_0\": {}\n      },\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"visibleTo\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"indexed\": true,\n      \"name\": \"non\",\n      \"properties\": {\n        \"amet_8bf\": {}\n      },\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"visibleTo\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"demands\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"eventCallbacks\": {\n    \"postDisable\": {\n      \"uri\": \"<string>\"\n    },\n    \"postEnable\": {\n      \"uri\": \"<string>\"\n    },\n    \"postInstall\": {\n      \"uri\": \"<string>\"\n    },\n    \"postUninstall\": {\n      \"uri\": \"<string>\"\n    },\n    \"postUpdate\": {\n      \"uri\": \"<string>\"\n    },\n    \"preInstall\": {\n      \"uri\": \"<string>\"\n    },\n    \"versionCheck\": {\n      \"uri\": \"<string>\"\n    }\n  },\n  \"fallbackBaseUri\": \"<string>\",\n  \"language\": \"<string>\",\n  \"licensing\": {\n    \"overrides\": [\n      {\n        \"behavior\": \"onlyIfLicensed\",\n        \"id\": \"<string>\"\n      },\n      {\n        \"behavior\": \"alwaysInclude\",\n        \"id\": \"<string>\"\n      }\n    ]\n  },\n  \"manifestVersion\": \"<double>\",\n  \"restrictedTo\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serviceInstanceType\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update an installed extension. Typically this API is used to enable or disable an extension.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Graph",
      "filename": "Graph",
      "root": {
        "docs": "[Graph REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/graph/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Graph"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Avatars",
          "filename": "Avatars",
          "root": {
            "meta": {
              "name": "Avatars"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Avatars Delete",
              "filename": "Avatars Delete.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/Subjects/{{subjectDescriptor}}/avatars?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Avatars Get",
              "filename": "Avatars Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/Subjects/{{subjectDescriptor}}/avatars?size=large&format=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "size",
                    "value": "large",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "format",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Avatars Set Avatar",
              "filename": "Avatars Set Avatar.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/Subjects/{{subjectDescriptor}}/avatars?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"isAutoGenerated\": \"<boolean>\",\n  \"size\": \"medium\",\n  \"timeStamp\": \"<dateTime>\",\n  \"value\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Groups",
          "filename": "Groups",
          "root": {
            "meta": {
              "name": "Groups"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Groups Create",
              "filename": "Groups Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/groups?scopeDescriptor=<string>&groupDescriptors=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "scopeDescriptor",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "groupDescriptors",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"storageKey\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new Azure DevOps group or materialize an existing AAD group.\n\nThe body of the request must be a derived type of GraphGroupCreationContext:\n  * GraphGroupVstsCreationContext - Create a new Azure DevOps group that is not backed by an external provider.\n  * GraphGroupMailAddressCreationContext - Create a new group using the mail address as a reference to an existing group from an external AD or AAD backed provider.\n  * GraphGroupOriginIdCreationContext - Create a new group using the OriginID as a reference to a group from an external AD or AAD backed provider.\n\n Optionally, you can add the newly created group as a member of an existing Azure DevOps group and/or specify a custom storage key for the group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Groups Delete",
              "filename": "Groups Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/groups/{{groupDescriptor}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupDescriptor",
                    "value": "{{groupDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes an Azure DevOps group from all of its parent groups.\n\nThe group will still be visible, but membership\n checks for the group, and all descendants which derive membership through it, will return false.”",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Groups Get",
              "filename": "Groups Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/groups/{{groupDescriptor}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupDescriptor",
                    "value": "{{groupDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a group by its descriptor.\n\nThe group will be returned even if it has been deleted from the account or has had all its memberships\ndeleted.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Groups List",
              "filename": "Groups List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/groups?scopeDescriptor=<string>&subjectTypes=<string>&continuationToken=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "scopeDescriptor",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "subjectTypes",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of all groups in the current scope (usually organization or account).\n\nThe optional parameters are used to filter down the returned results. Returned results are in no guaranteed order.\n\n Since the list of groups may be large, results are returned in pages of groups.  If there are more results\n than can be returned in a single page, the result set will contain a continuation token for retrieval of the\n next set of results.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Groups Update",
              "filename": "Groups Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/groups/{{groupDescriptor}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupDescriptor",
                    "value": "{{groupDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the properties of an Azure DevOps group.\n\nCurrently limited to only changing the description and account name.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Descriptors",
          "filename": "Descriptors",
          "root": {
            "meta": {
              "name": "Descriptors"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Descriptors Get",
              "filename": "Descriptors Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/descriptors/{{storageKey}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "storageKey",
                    "value": "{{storageKey}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Resolve a storage key to a descriptor",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Provider Info",
          "filename": "Provider Info",
          "root": {
            "meta": {
              "name": "Provider Info"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Provider Info Get",
              "filename": "Provider Info Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/Users/{{userDescriptor}}/providerinfo?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "userDescriptor",
                    "value": "{{userDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Membership States",
          "filename": "Membership States",
          "root": {
            "meta": {
              "name": "Membership States"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Membership States Get",
              "filename": "Membership States Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/membershipstates/{{subjectDescriptor}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Check whether a subject is active or inactive.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Service Principals",
          "filename": "Service Principals",
          "root": {
            "meta": {
              "name": "Service Principals"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Service Principals Create",
              "filename": "Service Principals Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/serviceprincipals?groupDescriptors=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "groupDescriptors",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"storageKey\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Materialize an existing AAD service principal into the ADO account.\n\nNOTE: Created service principals are not active in an account.\n\n Adding a service principal to an account is required before the service principal can be added to ADO groups or assigned an asset.\n\n The body of the request must be a derived type of GraphServicePrincipalCreationContext:\n  * GraphServicePrincipalOriginIdCreationContext - Create a new service principal using the OriginID as a reference to an existing service principal from AAD backed provider.\n\n If the service principal to be added corresponds to a service principal that was previously deleted, then that service principal will be restored.\n\n Optionally, you can add the newly created service principal as a member of an existing ADO group and/or specify a custom storage key for the service principal.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Service Principals Delete",
              "filename": "Service Principals Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/serviceprincipals/{{servicePrincipalDescriptor}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "servicePrincipalDescriptor",
                    "value": "{{servicePrincipalDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Disables a service principal.\n\nThe service principal will still be visible, but membership checks for the service principal will return false.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Service Principals Get",
              "filename": "Service Principals Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/serviceprincipals/{{servicePrincipalDescriptor}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "servicePrincipalDescriptor",
                    "value": "{{servicePrincipalDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a service principal by its descriptor.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Service Principals List",
              "filename": "Service Principals List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/serviceprincipals?continuationToken=<string>&scopeDescriptor=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "scopeDescriptor",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of all service principals in a given scope.\n\nSince the list of service principals may be large, results are returned in pages of service principals. If there are more results\n than can be returned in a single page, the result set will contain a continuation token for retrieval of the\n next set of results. The only reliable way to know if there is no more service principals left is the lack of a continuation token.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Subject Lookup",
          "filename": "Subject Lookup",
          "root": {
            "meta": {
              "name": "Subject Lookup"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Subject Lookup Lookup Subjects",
              "filename": "Subject Lookup Lookup Subjects.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/subjectlookup?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"lookupKeys\": [\n    {\n      \"descriptor\": \"<string>\"\n    },\n    {\n      \"descriptor\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Resolve descriptors to users, groups or scopes (Subjects) in a batch.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Memberships",
          "filename": "Memberships",
          "root": {
            "meta": {
              "name": "Memberships"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Memberships Add",
              "filename": "Memberships Add.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/memberships/{{subjectDescriptor}}/{{containerDescriptor}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "containerDescriptor",
                    "value": "{{containerDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new membership between a container and subject.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Memberships Check Membership Existence",
              "filename": "Memberships Check Membership Existence.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/memberships/{{subjectDescriptor}}/{{containerDescriptor}}?api-version={{api-version}}",
                "method": "HEAD",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "containerDescriptor",
                    "value": "{{containerDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Check to see if a membership relationship between a container and subject exists.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Memberships Get",
              "filename": "Memberships Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/memberships/{{subjectDescriptor}}/{{containerDescriptor}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "containerDescriptor",
                    "value": "{{containerDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a membership relationship between a container and subject.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Memberships List",
              "filename": "Memberships List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/Memberships/{{subjectDescriptor}}?direction=up&depth=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "direction",
                    "value": "up",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "depth",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all the memberships where this descriptor is a member in the relationship.\n\nThe default value for direction is 'up' meaning return all memberships where the subject is a member (e.g. all groups the subject is a member of).\n Alternatively, passing the direction as 'down' will return all memberships where the subject is a container (e.g. all members of the subject group).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Memberships Remove Membership",
              "filename": "Memberships Remove Membership.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/memberships/{{subjectDescriptor}}/{{containerDescriptor}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "containerDescriptor",
                    "value": "{{containerDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a membership between a container and subject.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Subject Query",
          "filename": "Subject Query",
          "root": {
            "meta": {
              "name": "Subject Query"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Subject Query Query",
              "filename": "Subject Query Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/subjectquery?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"query\": \"<string>\",\n  \"scopeDescriptor\": \"<string>\",\n  \"subjectKind\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Search for Azure Devops users, or/and groups. Results will be returned in a batch with no more than 100 graph subjects.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Users",
          "filename": "Users",
          "root": {
            "meta": {
              "name": "Users"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Users Create",
              "filename": "Users Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/users?groupDescriptors=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "groupDescriptors",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"storageKey\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Materialize an existing AAD or MSA user into the ADO account.\n\nNOTE: Created users are not active in an account unless they have been explicitly assigned a parent group at creation time or have signed in\n  and been autolicensed through AAD group memberships.\n\n Adding a user to an account is required before the user can be added to ADO groups or assigned an asset.\n\n The body of the request must be a derived type of GraphUserCreationContext:\n  * GraphUserMailAddressCreationContext - Create a new user using the mail address as a reference to an existing user from an external AD or AAD backed provider.\n  * GraphUserOriginIdCreationContext - Create a new user using the OriginID as a reference to an existing user from an external AD or AAD backed provider.\n  * GraphUserPrincipalNameCreationContext - Create a new user using the principal name as a reference to an existing user from an external AD or AAD backed provider.\n\n If the user to be added corresponds to a user that was previously deleted, then that user will be restored.\n\n Optionally, you can add the newly created user as a member of an existing ADO group and/or specify a custom storage key for the user.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Users Delete",
              "filename": "Users Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/users/{{userDescriptor}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "userDescriptor",
                    "value": "{{userDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Disables a user.\n\nThe user will still be visible, but membership checks for the user will return false.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Users Get",
              "filename": "Users Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/users/{{userDescriptor}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "userDescriptor",
                    "value": "{{userDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a user by its descriptor.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Users List",
              "filename": "Users List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{graphServer}}/{{organization}}/_apis/graph/users?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "subjectTypes",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "scopeDescriptor",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of all users in a given scope.\n\nSince the list of users may be large, results are returned in pages of users.  If there are more results\n than can be returned in a single page, the result set will contain a continuation token for retrieval of the\n next set of results.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Users Update",
              "filename": "Users Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/users/{{userDescriptor}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "userDescriptor",
                    "value": "{{userDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Map an existing user to a different user.\n\nThe body of the request must be a derived type of GraphUserUpdateContext:\n * GraphUserOriginIdUpdateContext - Map an existing user in an account, to an existing user from an external AD or AAD backed provider using the OriginId as a reference.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Storage Keys",
          "filename": "Storage Keys",
          "root": {
            "meta": {
              "name": "Storage Keys"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Storage Keys Get",
              "filename": "Storage Keys Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/storagekeys/{{subjectDescriptor}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Resolve a descriptor to a storage key.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Request Access",
          "filename": "Request Access",
          "root": {
            "meta": {
              "name": "Request Access"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Request Access Request Access",
              "filename": "Request Access Request Access.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/graph/requestaccess?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"first\": {\n    \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n  },\n  \"hasValues\": \"<boolean>\",\n  \"item\": {\n    \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n  },\n  \"last\": {\n    \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n  },\n  \"next\": {\n    \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n  },\n  \"parent\": \"<string>\",\n  \"path\": \"<string>\",\n  \"previous\": {\n    \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n  },\n  \"root\": {\n    \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n  },\n  \"type\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Git",
      "filename": "Git",
      "root": {
        "docs": "[Git REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Git"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Commits",
          "filename": "Commits",
          "root": {
            "docs": "Controller to handle all REST calls against commits",
            "meta": {
              "name": "Commits"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Commits Get Changes",
              "filename": "Commits Get Changes.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/commits/{{commitId}}/changes?top=10&skip=0",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "top",
                    "value": "10",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "skip",
                    "value": "0",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n\ntest(\"Response has the required fields - changeCounts and changes\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData).to.be.an('object');\n    expect(responseData).to.have.property('changeCounts');\n    expect(responseData).to.have.property('changes');\n});\n\n\ntest(\"Changes array should have the correct structure\", function () {\n    const responseData = res.getBody();\n\n    expect(responseData.changes).to.be.an('array');\n    responseData.changes.forEach(function(change) {\n        expect(change).to.have.property('item').that.is.an('object');\n        expect(change).to.have.property('changeType').that.is.a('string');\n    });\n});\n\n\ntest(\"ChangeType in changes array is a non-empty string\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.changes).to.be.an('array').that.is.not.empty;\n    responseData.changes.forEach(function(change) {\n        expect(change.changeType).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ChangeType should be a non-empty string\");\n    });\n});\n\n",
                "docs": "Retrieve changes for a particular commit.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Commits Get Commits Batch",
              "filename": "Commits Get Commits Batch.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/commitsbatch?$skip=<integer>&$top=<integer>&includeStatuses=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeStatuses",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"$skip\": \"<integer>\",\n  \"$top\": \"<integer>\",\n  \"author\": \"<string>\",\n  \"compareVersion\": {\n    \"version\": \"<string>\",\n    \"versionOptions\": \"firstParent\",\n    \"versionType\": \"commit\"\n  },\n  \"excludeDeletes\": \"<boolean>\",\n  \"fromCommitId\": \"<string>\",\n  \"fromDate\": \"<string>\",\n  \"historyMode\": \"firstParent\",\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeLinks\": \"<boolean>\",\n  \"includePushData\": \"<boolean>\",\n  \"includeUserImageUrl\": \"<boolean>\",\n  \"includeWorkItems\": \"<boolean>\",\n  \"itemPath\": \"<string>\",\n  \"itemVersion\": {\n    \"version\": \"<string>\",\n    \"versionOptions\": \"firstParent\",\n    \"versionType\": \"commit\"\n  },\n  \"showOldestCommitsFirst\": \"<boolean>\",\n  \"toCommitId\": \"<string>\",\n  \"toDate\": \"<string>\",\n  \"user\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve git commits for a project matching the search criteria",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Commits Get Push Commits",
              "filename": "Commits Get Push Commits.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/commits?pushId={{pushId}}&top=<integer>&skip=<integer>&includeLinks=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pushId",
                    "value": "{{pushId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a list of commits associated with a particular push.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Commits Get",
              "filename": "Commits Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/commits/{{commitId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "changeCount",
                    "value": "1",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commitId",
                    "value": "{{commitId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Author object should have name, email, date, and imageUrl properties\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.author).to.be.an('object');\r\n    expect(responseData.author.name).to.be.a('string');\r\n    expect(responseData.author.email).to.be.a('string');\r\n    expect(responseData.author.date).to.exist.and.to.be.a('string');\r\n    expect(responseData.author.imageUrl).to.be.a('string');\r\n});\r\n\r\n\r\ntest(\"Changes array is present and contains at least one element\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.changes).to.exist.and.to.be.an('array').that.is.not.empty;\r\n});\r\n\r\n",
                "docs": "Retrieve a particular commit.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Annotated Tags",
          "filename": "Annotated Tags",
          "root": {
            "docs": "Git annotated tags are tags with additional metadata including the person who created the tag and a comment.",
            "meta": {
              "name": "Annotated Tags"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Annotated Tags Create",
              "filename": "Annotated Tags Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/annotatedtags?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"objectId\": \"<string>\",\n  \"taggedBy\": {\n    \"date\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"taggedObject\": {\n    \"objectId\": \"<string>\",\n    \"objectType\": \"commit\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create an annotated tag.\n\nRepositories have both a name and an identifier. Identifiers are globally unique, but several projects\nmay contain a repository of the same name. You don't need to include the project if you specify a\nrepository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Annotated Tags Get",
              "filename": "Annotated Tags Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/annotatedtags/{{objectId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "objectId",
                    "value": "{{objectId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get an annotated tag.\n\nRepositories have both a name and an identifier. Identifiers are globally unique, but several projects\nmay contain a repository of the same name. You don't need to include the project if you specify a\nrepository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Import Requests",
          "filename": "Import Requests",
          "root": {
            "docs": "Create, query, and update requests to import data from another source control system.",
            "meta": {
              "name": "Import Requests"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Import Requests Create",
              "filename": "Import Requests Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/importRequests?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"anim_67f\": {},\n      \"nullad02\": {},\n      \"in961\": {},\n      \"cillum_3\": {},\n      \"Duis_7\": {}\n    }\n  },\n  \"detailedStatus\": {\n    \"allSteps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"currentStep\": \"<integer>\",\n    \"errorMessage\": \"<string>\"\n  },\n  \"importRequestId\": \"<integer>\",\n  \"parameters\": {\n    \"deleteServiceEndpointAfterImportIsDone\": \"<boolean>\",\n    \"gitSource\": {\n      \"overwrite\": \"<boolean>\",\n      \"url\": \"<string>\"\n    },\n    \"serviceEndpointId\": \"<uuid>\",\n    \"tfvcSource\": {\n      \"importHistory\": \"<boolean>\",\n      \"importHistoryDurationInDays\": \"<integer>\",\n      \"path\": \"<string>\"\n    }\n  },\n  \"repository\": {\n    \"_links\": {\n      \"links\": {\n        \"elit_ba\": {}\n      }\n    },\n    \"defaultBranch\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isDisabled\": \"<boolean>\",\n    \"isFork\": \"<boolean>\",\n    \"isInMaintenance\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"parentRepository\": {\n      \"collection\": {\n        \"avatarUrl\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"isFork\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"project\": {\n        \"abbreviation\": \"<string>\",\n        \"defaultTeamImageUrl\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"lastUpdateTime\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"revision\": \"<long>\",\n        \"state\": \"new\",\n        \"url\": \"<string>\",\n        \"visibility\": \"private\"\n      },\n      \"remoteUrl\": \"<string>\",\n      \"sshUrl\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"deleting\",\n      \"url\": \"<string>\",\n      \"visibility\": \"public\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"size\": \"<long>\",\n    \"sshUrl\": \"<string>\",\n    \"url\": \"<string>\",\n    \"validRemoteUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"webUrl\": \"<string>\"\n  },\n  \"status\": \"inProgress\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create an import request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Import Requests Get",
              "filename": "Import Requests Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/importRequests/{{importRequestId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "importRequestId",
                    "value": "{{importRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a particular import request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Import Requests Query",
              "filename": "Import Requests Query.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/importRequests?includeAbandoned=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeAbandoned",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve import requests for a repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Import Requests Update",
              "filename": "Import Requests Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/importRequests/{{importRequestId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "importRequestId",
                    "value": "{{importRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"anim_67f\": {},\n      \"nullad02\": {},\n      \"in961\": {},\n      \"cillum_3\": {},\n      \"Duis_7\": {}\n    }\n  },\n  \"detailedStatus\": {\n    \"allSteps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"currentStep\": \"<integer>\",\n    \"errorMessage\": \"<string>\"\n  },\n  \"importRequestId\": \"<integer>\",\n  \"parameters\": {\n    \"deleteServiceEndpointAfterImportIsDone\": \"<boolean>\",\n    \"gitSource\": {\n      \"overwrite\": \"<boolean>\",\n      \"url\": \"<string>\"\n    },\n    \"serviceEndpointId\": \"<uuid>\",\n    \"tfvcSource\": {\n      \"importHistory\": \"<boolean>\",\n      \"importHistoryDurationInDays\": \"<integer>\",\n      \"path\": \"<string>\"\n    }\n  },\n  \"repository\": {\n    \"_links\": {\n      \"links\": {\n        \"elit_ba\": {}\n      }\n    },\n    \"defaultBranch\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isDisabled\": \"<boolean>\",\n    \"isFork\": \"<boolean>\",\n    \"isInMaintenance\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"parentRepository\": {\n      \"collection\": {\n        \"avatarUrl\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"isFork\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"project\": {\n        \"abbreviation\": \"<string>\",\n        \"defaultTeamImageUrl\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"lastUpdateTime\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"revision\": \"<long>\",\n        \"state\": \"new\",\n        \"url\": \"<string>\",\n        \"visibility\": \"private\"\n      },\n      \"remoteUrl\": \"<string>\",\n      \"sshUrl\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"deleting\",\n      \"url\": \"<string>\",\n      \"visibility\": \"public\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"size\": \"<long>\",\n    \"sshUrl\": \"<string>\",\n    \"url\": \"<string>\",\n    \"validRemoteUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"webUrl\": \"<string>\"\n  },\n  \"status\": \"inProgress\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retry or abandon a failed import request.\n\nThere can only be one active import request associated with a repository. Marking a failed import request abandoned makes it inactive.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Diffs",
          "filename": "Diffs",
          "root": {
            "docs": "Diffs compare a target version with a base version and return a list of items that are only in the target version.\nIf either the target or base version isn't specified, then the default branch is used.",
            "meta": {
              "name": "Diffs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Diffs Get",
              "filename": "Diffs Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/diffs/commits?baseVersion=<string>&baseVersionOptions=previousChange&baseVersionType=commit&targetVersion=<string>&targetVersionOptions=previousChange&targetVersionType=commit&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "baseVersion",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "baseVersionOptions",
                    "value": "previousChange",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "baseVersionType",
                    "value": "commit",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "targetVersion",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "targetVersionOptions",
                    "value": "previousChange",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "targetVersionType",
                    "value": "commit",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "diffCommonCommit",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Find the closest common commit (the merge base) between base and target commits, and get the diff between either the base and target commits or common and target commits.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Items",
          "filename": "Items",
          "root": {
            "docs": "Items are the files, folders, and submodules in a repository.\nFiles are represented by blobs and folders are trees.\nIf the repository contains submodules, they will appear as commits.",
            "meta": {
              "name": "Items"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Items Get Items Batch",
              "filename": "Items Get Items Batch.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/itemsbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"includeContentMetadata\": \"<boolean>\",\n  \"includeLinks\": \"<boolean>\",\n  \"itemDescriptors\": [\n    {\n      \"path\": \"<string>\",\n      \"recursionLevel\": \"oneLevelPlusNestedEmptyFolders\",\n      \"version\": \"<string>\",\n      \"versionOptions\": \"previousChange\",\n      \"versionType\": \"tag\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"recursionLevel\": \"none\",\n      \"version\": \"<string>\",\n      \"versionOptions\": \"previousChange\",\n      \"versionType\": \"tag\"\n    }\n  ],\n  \"latestProcessedChange\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Items List",
              "filename": "Items List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/items?recursionLevel=Full&includeContentMetadata=$true&latestProcessedChange=$true&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "recursionLevel",
                    "value": "Full",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeContentMetadata",
                    "value": "$true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "latestProcessedChange",
                    "value": "$true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "scopePath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "download",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "$format",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "versionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "versionDescriptor.versionOptions",
                    "value": "previousChange",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "versionDescriptor.versionType",
                    "value": "commit",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "zipForUnix",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Blobs",
          "filename": "Blobs",
          "root": {
            "docs": "Blobs are files in the Git repository.",
            "meta": {
              "name": "Blobs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Blobs Get Blob",
              "filename": "Blobs Get Blob.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/blobs/{{sha1}}?download=<boolean>&fileName={{fileName}}&$format=<string>&resolveLfs=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "download",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$format",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "resolveLfs",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "sha1",
                    "value": "{{sha1}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a single blob.\n\nRepositories have both a name and an identifier. Identifiers are globally unique,\nbut several projects may contain a repository of the same name. You don't need to include\nthe project if you specify a repository by ID. However, if you specify a repository by name,\nyou must also specify the project (by name or ID).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Blobs Get Blobs Zip",
              "filename": "Blobs Get Blobs Zip.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/blobs?filename=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "filename",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets one or more blobs in a zip file download.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Merge Bases",
          "filename": "Merge Bases",
          "root": {
            "docs": "Ways to find merge base(s) between commits.",
            "meta": {
              "name": "Merge Bases"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Merge Bases List",
              "filename": "Merge Bases List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryNameOrId}}/commits/{{commitId}}/mergebases?otherCommitId=<string>&otherCollectionId=<uuid>&otherRepositoryId=<uuid>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "otherCommitId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "otherCollectionId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "otherRepositoryId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryNameOrId",
                    "value": "{{repositoryNameOrId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commitId",
                    "value": "{{commitId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Find the merge bases of two commits, optionally across forks. If otherRepositoryId is not specified, the merge bases will only be calculated within the context of the local repositoryNameOrId.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Forks",
          "filename": "Forks",
          "root": {
            "meta": {
              "name": "Forks"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Forks Create fork sync request",
              "filename": "Forks Create fork sync request.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryNameOrId}}/forkSyncRequests?includeLinks=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryNameOrId",
                    "value": "{{repositoryNameOrId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"source\": {\n    \"collectionId\": \"<uuid>\",\n    \"projectId\": \"<uuid>\",\n    \"repositoryId\": \"<uuid>\"\n  },\n  \"sourceToTargetRefs\": [\n    {\n      \"sourceRef\": \"<string>\",\n      \"targetRef\": \"<string>\"\n    },\n    {\n      \"sourceRef\": \"<string>\",\n      \"targetRef\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Request that another repository's refs be fetched into this one. It syncs two existing forks. To create a fork, please see the <a href=\"https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1\"> repositories endpoint</a>",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Forks Get fork sync request",
              "filename": "Forks Get fork sync request.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryNameOrId}}/forkSyncRequests/{{forkSyncOperationId}}?includeLinks=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryNameOrId",
                    "value": "{{repositoryNameOrId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "forkSyncOperationId",
                    "value": "{{forkSyncOperationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific fork sync operation's details.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Forks Get Fork Sync Requests",
              "filename": "Forks Get Fork Sync Requests.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryNameOrId}}/forkSyncRequests?includeAbandoned=<boolean>&includeLinks=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeAbandoned",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryNameOrId",
                    "value": "{{repositoryNameOrId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve all requested fork sync operations on this repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Forks List",
              "filename": "Forks List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryNameOrId}}/forks/{{collectionId}}?includeLinks=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryNameOrId",
                    "value": "{{repositoryNameOrId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "collectionId",
                    "value": "{{collectionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve all forks of a repository in the collection.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Attachments",
          "filename": "Pull Request Attachments",
          "root": {
            "docs": "This API provides a way to create and retrieve files that have been attached to a pull request",
            "meta": {
              "name": "Pull Request Attachments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Attachments Create",
              "filename": "Pull Request Attachments Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/attachments/{{fileName}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/octet-stream",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "text",
                  "text": "<string>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Attach a new file to a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Attachments Delete",
              "filename": "Pull Request Attachments Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/attachments/{{fileName}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a pull request attachment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Attachments Get",
              "filename": "Pull Request Attachments Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/attachments/{{fileName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the file content of a pull request attachment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Attachments List",
              "filename": "Pull Request Attachments List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/attachments?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of files attached to a given pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Policy Configurations",
          "filename": "Policy Configurations",
          "root": {
            "docs": "This API provides a way to list Git policy configurations.  For more information, see \n[Improve code quality with branch policies](https://go.microsoft.com/fwlink/?linkid=859025)",
            "meta": {
              "name": "Policy Configurations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Policy Configurations Get",
              "filename": "Policy Configurations Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/policy/configurations?repositoryId={{repositoryId}}&refName=<string>&policyType=<uuid>&$top=<integer>&continuationToken=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "refName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "policyType",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a list of policy configurations by a given set of scope/filtering criteria.\n\nBelow is a short description of how all of the query parameters interact with each other:\n- repositoryId set, refName set: returns all policy configurations that *apply* to a particular branch in a repository\n- repositoryId set, refName unset: returns all policy configurations that *apply* to a particular repository\n- repositoryId unset, refName unset: returns all policy configurations that are *defined* at the project level\n- repositoryId unset, refName set: returns all project-level branch policies, plus the project level configurations\nFor all of the examples above, when policyType is set, it'll restrict results to the given policy type",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Iteration Changes",
          "filename": "Pull Request Iteration Changes",
          "root": {
            "docs": "Controller to handle all REST calls against pull request iterations",
            "meta": {
              "name": "Pull Request Iteration Changes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Iteration Changes Get",
              "filename": "Pull Request Iteration Changes Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations/{{iterationId}}/changes?$top=<integer>&$skip=<integer>&$compareTo=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$compareTo",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve the changes made in a pull request between two iterations.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Merges",
          "filename": "Merges",
          "root": {
            "docs": "Merge endpoints provides a way to perform git merge operation.",
            "meta": {
              "name": "Merges"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Merges Create",
              "filename": "Merges Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryNameOrId}}/merges?includeLinks=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryNameOrId",
                    "value": "{{repositoryNameOrId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"comment\": \"<string>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Request a git merge operation. Currently we support merging only 2 commits.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Merges Get",
              "filename": "Merges Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryNameOrId}}/merges/{{mergeOperationId}}?includeLinks=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryNameOrId",
                    "value": "{{repositoryNameOrId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "mergeOperationId",
                    "value": "{{mergeOperationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific merge operation's details.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Comment Likes",
          "filename": "Pull Request Comment Likes",
          "root": {
            "docs": "This API provides methods for marking comments on pull requests as liked.\nLiking a comment is a used as a way of indicating agreement with the author.",
            "meta": {
              "name": "Pull Request Comment Likes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Comment Likes Create",
              "filename": "Pull Request Comment Likes Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}/comments/{{commentId}}/likes?api-version={{api-version}}",
                "method": "POST",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a like on a comment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Comment Likes Delete",
              "filename": "Pull Request Comment Likes Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}/comments/{{commentId}}/likes?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a like on a comment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Comment Likes List",
              "filename": "Pull Request Comment Likes List.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}/comments/{{commentId}}/likes?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get likes for a comment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Iterations",
          "filename": "Pull Request Iterations",
          "root": {
            "docs": "Provides REST API methods for Git pull request iterations.\nIterations are created as a result of creating and pushing updates to a pull request.",
            "meta": {
              "name": "Pull Request Iterations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Iterations Get",
              "filename": "Pull Request Iterations Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations/{{iterationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the specified iteration for a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Iterations List",
              "filename": "Pull Request Iterations List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations?includeCommits=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeCommits",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the list of iterations for the specified pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Iteration Statuses",
          "filename": "Pull Request Iteration Statuses",
          "root": {
            "docs": "Pull request statuses can be posted on pull request iteration to indicate that status links particular iteration. Iteration statuses behave the same way\nas pull request statuses, but can expire on new source updates when StatusPolicy is properly configured.\n\nPull request statuses provide extensibility to the pull request experience. Third party services or users with read permission to the repository\ncan create and get statuses associated with a pull request or an iteration via this REST API. An example of pull request status can be \"CI Build Passed\",\n\"Integration tests pending\", \"Linting check succeeded\".\nIn order to update a status create a new status with the same genre and name values.",
            "meta": {
              "name": "Pull Request Iteration Statuses"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Iteration Statuses Create",
              "filename": "Pull Request Iteration Statuses Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations/{{iterationId}}/statuses?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"iterationId\": 60418484,\n  \"properties\": {},\n  \"_links\": {\n    \"links\": {\n      \"irure92\": {}\n    }\n  },\n  \"context\": {\n    \"genre\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"createdBy\": {\n    \"directoryAlias\": \"fugiat co\",\n    \"id\": \"aute est occaecat\",\n    \"imageUrl\": \"reprehenderit\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"magna dolore sit anim\",\n    \"uniqueName\": \"ea\",\n    \"_links\": {\n      \"links\": {\n        \"ad_a40\": {},\n        \"dolorf51\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"creationDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"state\": \"error\",\n  \"targetUrl\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.\n\nThe only required field for the status is `Context.Name` that uniquely identifies the status.\nNote that `iterationId` in the request body is optional since `iterationId` can be specified in the URL.\nA conflict between `iterationId` in the URL and `iterationId` in the request body will result in status code 400.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Iteration Statuses Delete",
              "filename": "Pull Request Iteration Statuses Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations/{{iterationId}}/statuses/{{statusId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "statusId",
                    "value": "{{statusId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete pull request iteration status.\n\nYou can remove multiple statuses in one call by using Update operation.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Iteration Statuses Get",
              "filename": "Pull Request Iteration Statuses Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations/{{iterationId}}/statuses/{{statusId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "statusId",
                    "value": "{{statusId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Iteration Statuses List",
              "filename": "Pull Request Iteration Statuses List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations/{{iterationId}}/statuses?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all the statuses associated with a pull request iteration.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Iteration Statuses Update",
              "filename": "Pull Request Iteration Statuses Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations/{{iterationId}}/statuses?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update pull request iteration statuses collection. The only supported operation type is `remove`.\n\nThis operation allows to delete multiple statuses in one call.\nThe path of the `remove` operation should refer to the ID of the pull request status.\nFor example `path=\"/1\"` refers to the pull request status with ID 1.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Properties",
          "filename": "Pull Request Properties",
          "root": {
            "docs": "This API provides a way to manage external properties associated with a pull request. Third party services can use this API\nto store additional information on the pull request without maintaining their own storage.",
            "meta": {
              "name": "Pull Request Properties"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Properties List",
              "filename": "Pull Request Properties List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/properties?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get external properties of the pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Properties Update",
              "filename": "Pull Request Properties Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/properties?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create or update pull request external properties. The patch operation can be `add`, `replace` or `remove`. For `add` operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For `replace` operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For `remove` operation, the path cannot be empty. If the path does not exist, no action will be performed.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Labels",
          "filename": "Pull Request Labels",
          "root": {
            "docs": "Pull Request labels (tags) provide extensibility to the pull request experience. \nThird party services or users with read permission in the repository can\ncreate (add), get, and delete labels (tags) associated with a pull request via this REST API.\nThe names for the labels is shared  with work item tags. There is separate REST API used to manage the list of tags.\nLabels (tags) are used to provide quick insights into a pull request, an example\ncan be labelling a Pull request as \"WIP\", \"Feature\", or \"Bug\" to let others\nknow the state and purpose of the Pull Request.\n\nLabels are posted to the pull request and will be displayed in both the details and list views for pull requests.",
            "meta": {
              "name": "Pull Request Labels"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Labels Create",
              "filename": "Pull Request Labels Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/labels?projectId=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "projectId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a tag (if that does not exists yet) and add that as a label (tag) for a specified pull request. The only required field is the name of the new label (tag).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Labels Delete",
              "filename": "Pull Request Labels Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/labels/{{labelIdOrName}}?projectId=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "projectId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "labelIdOrName",
                    "value": "{{labelIdOrName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a label (tag) from the set of those assigned to the pull request. The tag itself will not be deleted.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Labels Get",
              "filename": "Pull Request Labels Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/labels/{{labelIdOrName}}?projectId=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "projectId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "labelIdOrName",
                    "value": "{{labelIdOrName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieves a single label (tag) that has been assigned to a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Labels List",
              "filename": "Pull Request Labels List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/labels?projectId=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "projectId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all the labels (tags) assigned to a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Query",
          "filename": "Pull Request Query",
          "root": {
            "meta": {
              "name": "Pull Request Query"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Query Get",
              "filename": "Pull Request Query Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullrequestquery?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"queries\": [\n    {\n      \"items\": [\n        \"<string>\"\n      ],\n      \"type\": \"lastMergeCommit\"\n    }\n  ],\n  \"results\": [\n    {\n      \"labore_a_5\": [\n        {\n          \"_links\": {\n            \"links\": {\n              \"quis_1a\": {},\n              \"non54\": {},\n              \"id63\": {},\n              \"incididunt89a\": {}\n            }\n          },\n          \"artifactId\": \"<string>\",\n          \"autoCompleteSetBy\": {\n            \"directoryAlias\": \"anim deserunt nisi\",\n            \"id\": \"est occaecat\",\n            \"imageUrl\": \"proident sit ut voluptate pariatur\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"anim Ut incididunt\",\n            \"uniqueName\": \"irure consequat\",\n            \"_links\": {\n              \"links\": {\n                \"qui__27\": {},\n                \"labore_789\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"closedBy\": {\n            \"directoryAlias\": \"irure sunt laborum\",\n            \"id\": \"in amet\",\n            \"imageUrl\": \"nisi\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"proident ut do\",\n            \"uniqueName\": \"veniam\",\n            \"_links\": {\n              \"links\": {\n                \"sit3f\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"closedDate\": \"<dateTime>\",\n          \"codeReviewId\": \"<integer>\",\n          \"commits\": [\n            {\n              \"_links\": {\n                \"links\": {\n                  \"elit2\": {}\n                }\n              },\n              \"author\": {\n                \"date\": \"<dateTime>\",\n                \"email\": \"<string>\",\n                \"imageUrl\": \"<string>\",\n                \"name\": \"<string>\"\n              },\n              \"changeCounts\": {\n                \"eiusmod_5_\": \"<integer>\",\n                \"dolor8\": \"<integer>\"\n              },\n              \"changes\": [\n                {\n                  \"changeId\": -81541176,\n                  \"newContentTemplate\": {},\n                  \"originalPath\": \"sunt veniam\",\n                  \"changeType\": \"encoding\",\n                  \"item\": \"<string>\",\n                  \"newContent\": {\n                    \"content\": \"<string>\",\n                    \"contentType\": \"base64Encoded\"\n                  },\n                  \"sourceServerItem\": \"<string>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"commentTruncated\": \"<boolean>\",\n              \"commitId\": \"<string>\",\n              \"committer\": {\n                \"date\": \"<dateTime>\",\n                \"email\": \"<string>\",\n                \"imageUrl\": \"<string>\",\n                \"name\": \"<string>\"\n              },\n              \"commitTooManyChanges\": \"<boolean>\",\n              \"parents\": [\n                \"<string>\"\n              ],\n              \"push\": {\n                \"_links\": {\n                  \"links\": {\n                    \"qui_5\": {}\n                  }\n                },\n                \"date\": \"<dateTime>\",\n                \"pushedBy\": {\n                  \"directoryAlias\": \"Excepteur do laborum\",\n                  \"id\": \"dolor id exercitation esse Excepteur\",\n                  \"imageUrl\": \"officia culpa irure tempor\",\n                  \"inactive\": true,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": true,\n                  \"profileUrl\": \"ea non anim\",\n                  \"uniqueName\": \"laborum ut voluptate fugiat\",\n                  \"_links\": {\n                    \"links\": {\n                      \"dolor8e\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"pushId\": \"<integer>\",\n                \"url\": \"<string>\"\n              },\n              \"remoteUrl\": \"<string>\",\n              \"statuses\": [\n                {\n                  \"_links\": {\n                    \"links\": {\n                      \"pariatur910\": {}\n                    }\n                  },\n                  \"context\": {\n                    \"genre\": \"<string>\",\n                    \"name\": \"<string>\"\n                  },\n                  \"createdBy\": {\n                    \"directoryAlias\": \"ex veniam Duis\",\n                    \"id\": \"adipisicing velit \",\n                    \"imageUrl\": \"eiusmod ea elit\",\n                    \"inactive\": true,\n                    \"isAadIdentity\": true,\n                    \"isContainer\": true,\n                    \"isDeletedInOrigin\": false,\n                    \"profileUrl\": \"eu Lorem\",\n                    \"uniqueName\": \"cupidatat ut eu\",\n                    \"_links\": {\n                      \"links\": {\n                        \"aute3__\": {},\n                        \"enim_64d\": {}\n                      }\n                    },\n                    \"descriptor\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"url\": \"<string>\"\n                  },\n                  \"creationDate\": \"<dateTime>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"state\": \"notSet\",\n                  \"targetUrl\": \"<string>\",\n                  \"updatedDate\": \"<dateTime>\"\n                }\n              ],\n              \"url\": \"<string>\",\n              \"workItems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"url\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"completionOptions\": {\n            \"autoCompleteIgnoreConfigIds\": [\n              \"<integer>\"\n            ],\n            \"bypassPolicy\": \"<boolean>\",\n            \"bypassReason\": \"<string>\",\n            \"deleteSourceBranch\": \"<boolean>\",\n            \"mergeCommitMessage\": \"<string>\",\n            \"mergeStrategy\": \"squash\",\n            \"squashMerge\": \"<boolean>\",\n            \"transitionWorkItems\": \"<boolean>\",\n            \"triggeredByAutoComplete\": \"<boolean>\"\n          },\n          \"completionQueueTime\": \"<dateTime>\",\n          \"createdBy\": {\n            \"directoryAlias\": \"dolore proident magna\",\n            \"id\": \"magna voluptate\",\n            \"imageUrl\": \"dolore fugiat\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"consequat reprehenderit\",\n            \"uniqueName\": \"est\",\n            \"_links\": {\n              \"links\": {\n                \"Ut_73\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"creationDate\": \"<dateTime>\",\n          \"description\": \"<string>\",\n          \"forkSource\": {\n            \"repository\": {},\n            \"_links\": {\n              \"links\": {\n                \"reprehenderit17\": {},\n                \"cillum_8\": {}\n              }\n            },\n            \"creator\": {\n              \"directoryAlias\": \"Lorem\",\n              \"id\": \"eu Duis in dolor\",\n              \"imageUrl\": \"sunt\",\n              \"inactive\": false,\n              \"isAadIdentity\": false,\n              \"isContainer\": true,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"ex eu\",\n              \"uniqueName\": \"cupidatat ame\",\n              \"_links\": {\n                \"links\": {\n                  \"nostrud_d9\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"isLocked\": \"<boolean>\",\n            \"isLockedBy\": {\n              \"directoryAlias\": \"ex sint\",\n              \"id\": \"magna\",\n              \"imageUrl\": \"adipisicing\",\n              \"inactive\": false,\n              \"isAadIdentity\": true,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"pariatur veniam\",\n              \"uniqueName\": \"irure in officia consequat\",\n              \"_links\": {\n                \"links\": {\n                  \"ullamco_4f\": {},\n                  \"proident_39\": {},\n                  \"Excepteur75\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"objectId\": \"<string>\",\n            \"peeledObjectId\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"officia_7f_\": {},\n                    \"dolor_1ab\": {},\n                    \"ut_c\": {},\n                    \"veniam_48f\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"in eiusmod veniam minim\",\n                  \"id\": \"adipisicing incididunt reprehenderit\",\n                  \"imageUrl\": \"non aut\",\n                  \"inactive\": true,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": false,\n                  \"isDeletedInOrigin\": true,\n                  \"profileUrl\": \"dolor voluptate irure sit exercitation\",\n                  \"uniqueName\": \"dolor\",\n                  \"_links\": {\n                    \"links\": {\n                      \"exercitation_cf\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"error\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\"\n          },\n          \"hasMultipleMergeBases\": \"<boolean>\",\n          \"isDraft\": \"<boolean>\",\n          \"labels\": [\n            {\n              \"active\": \"<boolean>\",\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"lastMergeCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"elit_7\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"irure_91\": \"<integer>\",\n              \"Duis3\": \"<integer>\",\n              \"dolor_1\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": 33924456,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"irure deserunt enim\",\n                \"changeType\": \"lock\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"base64Encoded\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"pariatur_356\": {},\n                  \"consequat_afc\": {},\n                  \"ullamco_2\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"\",\n                \"id\": \"aliqua esse pariatur consectetur quis\",\n                \"imageUrl\": \"dolor in nos\",\n                \"inactive\": true,\n                \"isAadIdentity\": true,\n                \"isContainer\": false,\n                \"isDeletedInOrigin\": true,\n                \"profileUrl\": \"ullamco\",\n                \"uniqueName\": \"do consequat qui reprehenderit\",\n                \"_links\": {\n                  \"links\": {\n                    \"autec\": {},\n                    \"id_5b\": {},\n                    \"minimb0\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"ullamco890\": {},\n                    \"dolorc\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"mollit laboris\",\n                  \"id\": \"in\",\n                  \"imageUrl\": \"aliqua magna in est\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": true,\n                  \"isContainer\": false,\n                  \"isDeletedInOrigin\": false,\n                  \"profileUrl\": \"incididunt do sit\",\n                  \"uniqueName\": \"non voluptate laboris anim\",\n                  \"_links\": {\n                    \"links\": {\n                      \"aute4a\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"succeeded\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"lastMergeSourceCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"consequat_6c\": {},\n                \"elit_8_\": {},\n                \"dolore_8fb\": {},\n                \"incididunt92\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"tempor_7\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": -71392785,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"magna tempor exercitation\",\n                \"changeType\": \"edit\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"base64Encoded\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"fugiatf47\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"cillum sit non\",\n                \"id\": \"Excepteur proident\",\n                \"imageUrl\": \"pariatur\",\n                \"inactive\": false,\n                \"isAadIdentity\": false,\n                \"isContainer\": true,\n                \"isDeletedInOrigin\": true,\n                \"profileUrl\": \"fugiat dolor\",\n                \"uniqueName\": \"deserunt in\",\n                \"_links\": {\n                  \"links\": {\n                    \"eiusmod_0\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"ex_0\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"ipsum anim\",\n                  \"id\": \"Ut exercitation\",\n                  \"imageUrl\": \"dolor nisi voluptate Duis\",\n                  \"inactive\": true,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": false,\n                  \"profileUrl\": \"incididunt exercitation cillum veniam\",\n                  \"uniqueName\": \"reprehenderit deserunt cupidatat\",\n                  \"_links\": {\n                    \"links\": {\n                      \"cupidatat29\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"error\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"lastMergeTargetCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"Loremc\": {},\n                \"ea_0c\": {},\n                \"sunt_2\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"nostrud_36\": \"<integer>\",\n              \"ametde\": \"<integer>\",\n              \"Lorem69\": \"<integer>\",\n              \"minim_e3b\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": -4024875,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"ea Lorem exercitation quis\",\n                \"changeType\": \"rollback\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"base64Encoded\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"exercitation14b\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"eu Duis deserunt et\",\n                \"id\": \"offic\",\n                \"imageUrl\": \"ea Lorem ipsum elit\",\n                \"inactive\": false,\n                \"isAadIdentity\": false,\n                \"isContainer\": true,\n                \"isDeletedInOrigin\": true,\n                \"profileUrl\": \"Ut sunt in occaecat\",\n                \"uniqueName\": \"in nulla consectetur sit\",\n                \"_links\": {\n                  \"links\": {\n                    \"officia_9\": {},\n                    \"utf7\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"exercitation_f\": {},\n                    \"et_678\": {},\n                    \"eiusmodf69\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"q\",\n                  \"id\": \"ut\",\n                  \"imageUrl\": \"dolor sint\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": true,\n                  \"profileUrl\": \"id qui quis\",\n                  \"uniqueName\": \"irure dolor laboris adipisicing\",\n                  \"_links\": {\n                    \"links\": {\n                      \"quis_85\": {},\n                      \"pariaturf\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"failed\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"mergeFailureMessage\": \"<string>\",\n          \"mergeFailureType\": \"caseSensitive\",\n          \"mergeId\": \"<uuid>\",\n          \"mergeOptions\": {\n            \"conflictAuthorshipCommits\": \"<boolean>\",\n            \"detectRenameFalsePositives\": \"<boolean>\",\n            \"disableRenames\": \"<boolean>\"\n          },\n          \"mergeStatus\": \"succeeded\",\n          \"pullRequestId\": \"<integer>\",\n          \"remoteUrl\": \"<string>\",\n          \"repository\": {\n            \"_links\": {\n              \"links\": {\n                \"consequat_7\": {},\n                \"id_f96\": {}\n              }\n            },\n            \"defaultBranch\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"isDisabled\": \"<boolean>\",\n            \"isFork\": \"<boolean>\",\n            \"isInMaintenance\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"parentRepository\": {\n              \"collection\": {\n                \"avatarUrl\": \"<string>\",\n                \"id\": \"<uuid>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"id\": \"<uuid>\",\n              \"isFork\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"project\": {\n                \"abbreviation\": \"<string>\",\n                \"defaultTeamImageUrl\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<uuid>\",\n                \"lastUpdateTime\": \"<dateTime>\",\n                \"name\": \"<string>\",\n                \"revision\": \"<long>\",\n                \"state\": \"wellFormed\",\n                \"url\": \"<string>\",\n                \"visibility\": \"public\"\n              },\n              \"remoteUrl\": \"<string>\",\n              \"sshUrl\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"project\": {\n              \"abbreviation\": \"<string>\",\n              \"defaultTeamImageUrl\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<uuid>\",\n              \"lastUpdateTime\": \"<dateTime>\",\n              \"name\": \"<string>\",\n              \"revision\": \"<long>\",\n              \"state\": \"unchanged\",\n              \"url\": \"<string>\",\n              \"visibility\": \"private\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"size\": \"<long>\",\n            \"sshUrl\": \"<string>\",\n            \"url\": \"<string>\",\n            \"validRemoteUrls\": [\n              \"<string>\"\n            ],\n            \"webUrl\": \"<string>\"\n          },\n          \"reviewers\": [\n            {\n              \"hasDeclined\": true,\n              \"isFlagged\": false,\n              \"isRequired\": true,\n              \"reviewerUrl\": \"dolor ea aliqua\",\n              \"vote\": -78539050,\n              \"directoryAlias\": \"ut qui et fugiat\",\n              \"id\": \"proident\",\n              \"imageUrl\": \"nostrud el\",\n              \"inactive\": true,\n              \"isAadIdentity\": false,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"sunt consequat sed est Duis\",\n              \"uniqueName\": \"consectetur aliquip nulla\",\n              \"_links\": {\n                \"links\": {\n                  \"deserunt47\": {},\n                  \"aliquip_5\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"sourceRefName\": \"<string>\",\n          \"status\": \"all\",\n          \"supportsIterations\": \"<boolean>\",\n          \"targetRefName\": \"<string>\",\n          \"title\": \"<string>\",\n          \"url\": \"<string>\",\n          \"workItemRefs\": [\n            {\n              \"id\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"anim3\": [\n        {\n          \"_links\": {\n            \"links\": {\n              \"aliqua3\": {},\n              \"in_ab1\": {},\n              \"labore_61\": {}\n            }\n          },\n          \"artifactId\": \"<string>\",\n          \"autoCompleteSetBy\": {\n            \"directoryAlias\": \"ex cillum dolor sed non\",\n            \"id\": \"ea laboris aute\",\n            \"imageUrl\": \"nostrud in sunt\",\n            \"inactive\": true,\n            \"isAadIdentity\": true,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"qui esse do consequat adipisicing\",\n            \"uniqueName\": \"dolor Excepteur\",\n            \"_links\": {\n              \"links\": {\n                \"irure_2\": {},\n                \"pariatura\": {},\n                \"Excepteur_9e\": {},\n                \"fugiat574\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"closedBy\": {\n            \"directoryAlias\": \"exercitation labore\",\n            \"id\": \"tempor incididunt\",\n            \"imageUrl\": \"ad dolore\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"anim Ut sed\",\n            \"uniqueName\": \"fugiat dolore ullamco\",\n            \"_links\": {\n              \"links\": {\n                \"ut_79\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"closedDate\": \"<dateTime>\",\n          \"codeReviewId\": \"<integer>\",\n          \"commits\": [\n            {\n              \"_links\": {\n                \"links\": {\n                  \"Excepteur45\": {},\n                  \"amet_0e\": {}\n                }\n              },\n              \"author\": {\n                \"date\": \"<dateTime>\",\n                \"email\": \"<string>\",\n                \"imageUrl\": \"<string>\",\n                \"name\": \"<string>\"\n              },\n              \"changeCounts\": {\n                \"dolore44\": \"<integer>\",\n                \"minim_e\": \"<integer>\"\n              },\n              \"changes\": [\n                {\n                  \"changeId\": 99892513,\n                  \"newContentTemplate\": {},\n                  \"originalPath\": \"ad cupidatat sit\",\n                  \"changeType\": \"property\",\n                  \"item\": \"<string>\",\n                  \"newContent\": {\n                    \"content\": \"<string>\",\n                    \"contentType\": \"rawText\"\n                  },\n                  \"sourceServerItem\": \"<string>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"commentTruncated\": \"<boolean>\",\n              \"commitId\": \"<string>\",\n              \"committer\": {\n                \"date\": \"<dateTime>\",\n                \"email\": \"<string>\",\n                \"imageUrl\": \"<string>\",\n                \"name\": \"<string>\"\n              },\n              \"commitTooManyChanges\": \"<boolean>\",\n              \"parents\": [\n                \"<string>\"\n              ],\n              \"push\": {\n                \"_links\": {\n                  \"links\": {\n                    \"nona8\": {},\n                    \"pariatur9\": {}\n                  }\n                },\n                \"date\": \"<dateTime>\",\n                \"pushedBy\": {\n                  \"directoryAlias\": \"reprehenderit elit id eu\",\n                  \"id\": \"cillum labore\",\n                  \"imageUrl\": \"ex consectetur\",\n                  \"inactive\": true,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": false,\n                  \"profileUrl\": \"fugiat aute\",\n                  \"uniqueName\": \"Excepteur minim ad exercita\",\n                  \"_links\": {\n                    \"links\": {\n                      \"deserunt_a\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"pushId\": \"<integer>\",\n                \"url\": \"<string>\"\n              },\n              \"remoteUrl\": \"<string>\",\n              \"statuses\": [\n                {\n                  \"_links\": {\n                    \"links\": {\n                      \"doloreb05\": {}\n                    }\n                  },\n                  \"context\": {\n                    \"genre\": \"<string>\",\n                    \"name\": \"<string>\"\n                  },\n                  \"createdBy\": {\n                    \"directoryAlias\": \"aute cillum irure\",\n                    \"id\": \"do esse\",\n                    \"imageUrl\": \"ex\",\n                    \"inactive\": false,\n                    \"isAadIdentity\": true,\n                    \"isContainer\": false,\n                    \"isDeletedInOrigin\": false,\n                    \"profileUrl\": \"magna voluptate elit mollit\",\n                    \"uniqueName\": \"ea velit\",\n                    \"_links\": {\n                      \"links\": {\n                        \"est2c\": {},\n                        \"fugiat_129\": {}\n                      }\n                    },\n                    \"descriptor\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"url\": \"<string>\"\n                  },\n                  \"creationDate\": \"<dateTime>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"state\": \"notApplicable\",\n                  \"targetUrl\": \"<string>\",\n                  \"updatedDate\": \"<dateTime>\"\n                }\n              ],\n              \"url\": \"<string>\",\n              \"workItems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"url\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"completionOptions\": {\n            \"autoCompleteIgnoreConfigIds\": [\n              \"<integer>\"\n            ],\n            \"bypassPolicy\": \"<boolean>\",\n            \"bypassReason\": \"<string>\",\n            \"deleteSourceBranch\": \"<boolean>\",\n            \"mergeCommitMessage\": \"<string>\",\n            \"mergeStrategy\": \"rebase\",\n            \"squashMerge\": \"<boolean>\",\n            \"transitionWorkItems\": \"<boolean>\",\n            \"triggeredByAutoComplete\": \"<boolean>\"\n          },\n          \"completionQueueTime\": \"<dateTime>\",\n          \"createdBy\": {\n            \"directoryAlias\": \"laboris tempor\",\n            \"id\": \"elit ut officia\",\n            \"imageUrl\": \"dolor temp\",\n            \"inactive\": true,\n            \"isAadIdentity\": true,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"dolor\",\n            \"uniqueName\": \"aliquip do Excepteur ut amet\",\n            \"_links\": {\n              \"links\": {\n                \"laboris2\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"creationDate\": \"<dateTime>\",\n          \"description\": \"<string>\",\n          \"forkSource\": {\n            \"repository\": {},\n            \"_links\": {\n              \"links\": {\n                \"in4bd\": {},\n                \"deserunt_6d\": {},\n                \"dolor_909\": {}\n              }\n            },\n            \"creator\": {\n              \"directoryAlias\": \"Excepteur exercitation veniam\",\n              \"id\": \"veniam eu consectetur et ipsum\",\n              \"imageUrl\": \"in irure id\",\n              \"inactive\": true,\n              \"isAadIdentity\": true,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"dolor\",\n              \"uniqueName\": \"ea\",\n              \"_links\": {\n                \"links\": {\n                  \"consequat3\": {},\n                  \"nisi_29\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"isLocked\": \"<boolean>\",\n            \"isLockedBy\": {\n              \"directoryAlias\": \"est dolore amet sint\",\n              \"id\": \"i\",\n              \"imageUrl\": \"sit sunt\",\n              \"inactive\": false,\n              \"isAadIdentity\": true,\n              \"isContainer\": true,\n              \"isDeletedInOrigin\": false,\n              \"profileUrl\": \"irure voluptate Ut\",\n              \"uniqueName\": \"et\",\n              \"_links\": {\n                \"links\": {\n                  \"laborum73\": {},\n                  \"labore_c5\": {},\n                  \"sunt9e\": {},\n                  \"laboris13\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"objectId\": \"<string>\",\n            \"peeledObjectId\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"adfcd\": {},\n                    \"aute_af\": {},\n                    \"elit_859\": {},\n                    \"doloredd\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"nisi cillum magna voluptate cupidatat\",\n                  \"id\": \"consectetur velit do\",\n                  \"imageUrl\": \"proident id adipisicing sunt\",\n                  \"inactive\": true,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": true,\n                  \"profileUrl\": \"sint aliquip voluptate sunt\",\n                  \"uniqueName\": \"velit\",\n                  \"_links\": {\n                    \"links\": {\n                      \"irure0c7\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"notSet\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\"\n          },\n          \"hasMultipleMergeBases\": \"<boolean>\",\n          \"isDraft\": \"<boolean>\",\n          \"labels\": [\n            {\n              \"active\": \"<boolean>\",\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"lastMergeCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"nisi_e2\": {},\n                \"velit_52\": {},\n                \"dolor_71a\": {},\n                \"labore6_0\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"cillum3a4\": \"<integer>\",\n              \"consectetur_08f\": \"<integer>\",\n              \"incididunt1\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": -65018438,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"ipsum in ullamco\",\n                \"changeType\": \"none\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"rawText\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"incididuntf\": {},\n                  \"cillum02_\": {},\n                  \"culpa9\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"in laborum ea \",\n                \"id\": \"pariatur cil\",\n                \"imageUrl\": \"dolor sint incididunt\",\n                \"inactive\": false,\n                \"isAadIdentity\": false,\n                \"isContainer\": true,\n                \"isDeletedInOrigin\": false,\n                \"profileUrl\": \"pariatur est\",\n                \"uniqueName\": \"nisi\",\n                \"_links\": {\n                  \"links\": {\n                    \"eu_1c8\": {},\n                    \"culpa__6\": {},\n                    \"enimd2c\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"consectetur9d9\": {},\n                    \"sunt_61b\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"tempor esse ad\",\n                  \"id\": \"culpa consectetur deserunt et velit\",\n                  \"imageUrl\": \"consequat voluptate dolor Duis ea\",\n                  \"inactive\": true,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": false,\n                  \"profileUrl\": \"Lorem pariatur incididunt dolor\",\n                  \"uniqueName\": \"dolore eu irure nulla consectetur\",\n                  \"_links\": {\n                    \"links\": {\n                      \"ex6a9\": {},\n                      \"consecteturc2\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"succeeded\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"lastMergeSourceCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"reprehenderit_a\": {},\n                \"adipisicing_e\": {},\n                \"non86\": {},\n                \"et_3\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"proident_1\": \"<integer>\",\n              \"consequat28\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": 88869995,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"sed in aliquip pariatur\",\n                \"changeType\": \"delete\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"rawText\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"sit_cfb\": {},\n                  \"enim3c\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"amet\",\n                \"id\": \"sit reprehenderit culpa Duis\",\n                \"imageUrl\": \"eiusmod\",\n                \"inactive\": true,\n                \"isAadIdentity\": false,\n                \"isContainer\": false,\n                \"isDeletedInOrigin\": false,\n                \"profileUrl\": \"sunt et velit laboris sit\",\n                \"uniqueName\": \"proident id sunt laboris\",\n                \"_links\": {\n                  \"links\": {\n                    \"nostrud__\": {},\n                    \"aliquip_3c\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"sed38\": {},\n                    \"ipsum_7\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"ad dolor commodo amet proident\",\n                  \"id\": \"est do officia\",\n                  \"imageUrl\": \"ullamco magna\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": true,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": false,\n                  \"profileUrl\": \"officia sint dolore adipisicing\",\n                  \"uniqueName\": \"pariatur Duis laboris\",\n                  \"_links\": {\n                    \"links\": {\n                      \"quis_9\": {},\n                      \"in_d83\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"notApplicable\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"lastMergeTargetCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"dolore_5\": {},\n                \"minim_c\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"tempore8\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": -3556642,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"aute\",\n                \"changeType\": \"merge\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"base64Encoded\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"qui_aad\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"aute dolor mollit ea et\",\n                \"id\": \"reprehenderit Excepteur\",\n                \"imageUrl\": \"nostrud consequat Duis dolor\",\n                \"inactive\": true,\n                \"isAadIdentity\": false,\n                \"isContainer\": false,\n                \"isDeletedInOrigin\": true,\n                \"profileUrl\": \"ad in reprehenderit\",\n                \"uniqueName\": \"elit\",\n                \"_links\": {\n                  \"links\": {\n                    \"ut_a\": {},\n                    \"mollit_c__\": {},\n                    \"qui_e43\": {},\n                    \"suntb\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"eu_0\": {},\n                    \"voluptate_2f\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"aliquip dolor\",\n                  \"id\": \"amet quis et\",\n                  \"imageUrl\": \"sint reprehenderit ipsum Ut\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": true,\n                  \"profileUrl\": \"in\",\n                  \"uniqueName\": \"in sunt officia velit\",\n                  \"_links\": {\n                    \"links\": {\n                      \"nostrud_a0\": {},\n                      \"in69\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"error\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"mergeFailureMessage\": \"<string>\",\n          \"mergeFailureType\": \"unknown\",\n          \"mergeId\": \"<uuid>\",\n          \"mergeOptions\": {\n            \"conflictAuthorshipCommits\": \"<boolean>\",\n            \"detectRenameFalsePositives\": \"<boolean>\",\n            \"disableRenames\": \"<boolean>\"\n          },\n          \"mergeStatus\": \"succeeded\",\n          \"pullRequestId\": \"<integer>\",\n          \"remoteUrl\": \"<string>\",\n          \"repository\": {\n            \"_links\": {\n              \"links\": {\n                \"culpa_6\": {}\n              }\n            },\n            \"defaultBranch\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"isDisabled\": \"<boolean>\",\n            \"isFork\": \"<boolean>\",\n            \"isInMaintenance\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"parentRepository\": {\n              \"collection\": {\n                \"avatarUrl\": \"<string>\",\n                \"id\": \"<uuid>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"id\": \"<uuid>\",\n              \"isFork\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"project\": {\n                \"abbreviation\": \"<string>\",\n                \"defaultTeamImageUrl\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<uuid>\",\n                \"lastUpdateTime\": \"<dateTime>\",\n                \"name\": \"<string>\",\n                \"revision\": \"<long>\",\n                \"state\": \"deleted\",\n                \"url\": \"<string>\",\n                \"visibility\": \"private\"\n              },\n              \"remoteUrl\": \"<string>\",\n              \"sshUrl\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"project\": {\n              \"abbreviation\": \"<string>\",\n              \"defaultTeamImageUrl\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<uuid>\",\n              \"lastUpdateTime\": \"<dateTime>\",\n              \"name\": \"<string>\",\n              \"revision\": \"<long>\",\n              \"state\": \"all\",\n              \"url\": \"<string>\",\n              \"visibility\": \"public\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"size\": \"<long>\",\n            \"sshUrl\": \"<string>\",\n            \"url\": \"<string>\",\n            \"validRemoteUrls\": [\n              \"<string>\"\n            ],\n            \"webUrl\": \"<string>\"\n          },\n          \"reviewers\": [\n            {\n              \"hasDeclined\": true,\n              \"isFlagged\": false,\n              \"isRequired\": false,\n              \"reviewerUrl\": \"exercitation\",\n              \"vote\": -79299962,\n              \"directoryAlias\": \"id enim\",\n              \"id\": \"ipsum est proident\",\n              \"imageUrl\": \"deserunt eu minim sunt\",\n              \"inactive\": true,\n              \"isAadIdentity\": true,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": false,\n              \"profileUrl\": \"ipsum\",\n              \"uniqueName\": \"aute Ut ut\",\n              \"_links\": {\n                \"links\": {\n                  \"aliqua5\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"sourceRefName\": \"<string>\",\n          \"status\": \"all\",\n          \"supportsIterations\": \"<boolean>\",\n          \"targetRefName\": \"<string>\",\n          \"title\": \"<string>\",\n          \"url\": \"<string>\",\n          \"workItemRefs\": [\n            {\n              \"id\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"officia_da\": [\n        {\n          \"_links\": {\n            \"links\": {\n              \"do_49a\": {},\n              \"incididunt_e\": {}\n            }\n          },\n          \"artifactId\": \"<string>\",\n          \"autoCompleteSetBy\": {\n            \"directoryAlias\": \"anim irure fugiat laborum\",\n            \"id\": \"id elit\",\n            \"imageUrl\": \"in\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"cupidatat tempor\",\n            \"uniqueName\": \"minim ut sunt\",\n            \"_links\": {\n              \"links\": {\n                \"proident_d\": {},\n                \"incididunt1\": {},\n                \"dolor81\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"closedBy\": {\n            \"directoryAlias\": \"in incididunt a\",\n            \"id\": \"aliqua dolore quis amet enim\",\n            \"imageUrl\": \"culpa deserunt est\",\n            \"inactive\": false,\n            \"isAadIdentity\": true,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"id eiusmod do ad\",\n            \"uniqueName\": \"sint\",\n            \"_links\": {\n              \"links\": {\n                \"irure965\": {},\n                \"laborum5\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"closedDate\": \"<dateTime>\",\n          \"codeReviewId\": \"<integer>\",\n          \"commits\": [\n            {\n              \"_links\": {\n                \"links\": {\n                  \"qui8a9\": {},\n                  \"etaf2\": {}\n                }\n              },\n              \"author\": {\n                \"date\": \"<dateTime>\",\n                \"email\": \"<string>\",\n                \"imageUrl\": \"<string>\",\n                \"name\": \"<string>\"\n              },\n              \"changeCounts\": {\n                \"ea_54\": \"<integer>\",\n                \"sint8cc\": \"<integer>\"\n              },\n              \"changes\": [\n                {\n                  \"changeId\": 35843983,\n                  \"newContentTemplate\": {},\n                  \"originalPath\": \"amet pariatur\",\n                  \"changeType\": \"branch\",\n                  \"item\": \"<string>\",\n                  \"newContent\": {\n                    \"content\": \"<string>\",\n                    \"contentType\": \"base64Encoded\"\n                  },\n                  \"sourceServerItem\": \"<string>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"commentTruncated\": \"<boolean>\",\n              \"commitId\": \"<string>\",\n              \"committer\": {\n                \"date\": \"<dateTime>\",\n                \"email\": \"<string>\",\n                \"imageUrl\": \"<string>\",\n                \"name\": \"<string>\"\n              },\n              \"commitTooManyChanges\": \"<boolean>\",\n              \"parents\": [\n                \"<string>\"\n              ],\n              \"push\": {\n                \"_links\": {\n                  \"links\": {\n                    \"dolor_8\": {},\n                    \"sunt_5\": {}\n                  }\n                },\n                \"date\": \"<dateTime>\",\n                \"pushedBy\": {\n                  \"directoryAlias\": \"officia quis ad reprehenderit\",\n                  \"id\": \"minim Duis\",\n                  \"imageUrl\": \"molli\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": true,\n                  \"isContainer\": false,\n                  \"isDeletedInOrigin\": false,\n                  \"profileUrl\": \"eiusmod pariatur Lorem\",\n                  \"uniqueName\": \"quis nostrud par\",\n                  \"_links\": {\n                    \"links\": {\n                      \"nisi_acd\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"pushId\": \"<integer>\",\n                \"url\": \"<string>\"\n              },\n              \"remoteUrl\": \"<string>\",\n              \"statuses\": [\n                {\n                  \"_links\": {\n                    \"links\": {\n                      \"dolor2a\": {}\n                    }\n                  },\n                  \"context\": {\n                    \"genre\": \"<string>\",\n                    \"name\": \"<string>\"\n                  },\n                  \"createdBy\": {\n                    \"directoryAlias\": \"irure est aliquip labore ut\",\n                    \"id\": \"lab\",\n                    \"imageUrl\": \"Lorem voluptate quis\",\n                    \"inactive\": true,\n                    \"isAadIdentity\": true,\n                    \"isContainer\": true,\n                    \"isDeletedInOrigin\": false,\n                    \"profileUrl\": \"sunt\",\n                    \"uniqueName\": \"ipsum exercitation\",\n                    \"_links\": {\n                      \"links\": {\n                        \"dolore_831\": {},\n                        \"incididunt06\": {},\n                        \"sunt_c\": {}\n                      }\n                    },\n                    \"descriptor\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"url\": \"<string>\"\n                  },\n                  \"creationDate\": \"<dateTime>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"state\": \"error\",\n                  \"targetUrl\": \"<string>\",\n                  \"updatedDate\": \"<dateTime>\"\n                }\n              ],\n              \"url\": \"<string>\",\n              \"workItems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"url\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"completionOptions\": {\n            \"autoCompleteIgnoreConfigIds\": [\n              \"<integer>\"\n            ],\n            \"bypassPolicy\": \"<boolean>\",\n            \"bypassReason\": \"<string>\",\n            \"deleteSourceBranch\": \"<boolean>\",\n            \"mergeCommitMessage\": \"<string>\",\n            \"mergeStrategy\": \"rebaseMerge\",\n            \"squashMerge\": \"<boolean>\",\n            \"transitionWorkItems\": \"<boolean>\",\n            \"triggeredByAutoComplete\": \"<boolean>\"\n          },\n          \"completionQueueTime\": \"<dateTime>\",\n          \"createdBy\": {\n            \"directoryAlias\": \"mollit eiu\",\n            \"id\": \"ea Duis\",\n            \"imageUrl\": \"labore\",\n            \"inactive\": false,\n            \"isAadIdentity\": true,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"inc\",\n            \"uniqueName\": \"do quis Duis non dolore\",\n            \"_links\": {\n              \"links\": {\n                \"sed0\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"creationDate\": \"<dateTime>\",\n          \"description\": \"<string>\",\n          \"forkSource\": {\n            \"repository\": {},\n            \"_links\": {\n              \"links\": {\n                \"quis_91_\": {},\n                \"in_673\": {},\n                \"incididunt_873\": {}\n              }\n            },\n            \"creator\": {\n              \"directoryAlias\": \"ut ea veniam\",\n              \"id\": \"nulla anim culpa officia\",\n              \"imageUrl\": \"non nulla\",\n              \"inactive\": true,\n              \"isAadIdentity\": false,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": false,\n              \"profileUrl\": \"anim laborum\",\n              \"uniqueName\": \"enim esse consectetur\",\n              \"_links\": {\n                \"links\": {\n                  \"nisi0b\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"isLocked\": \"<boolean>\",\n            \"isLockedBy\": {\n              \"directoryAlias\": \"aliqua cillum veniam \",\n              \"id\": \"ea anim\",\n              \"imageUrl\": \"cillum deser\",\n              \"inactive\": true,\n              \"isAadIdentity\": false,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"tempor\",\n              \"uniqueName\": \"dolor est reprehenderit mollit\",\n              \"_links\": {\n                \"links\": {\n                  \"cillum71\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"objectId\": \"<string>\",\n            \"peeledObjectId\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"pariatur_8a\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"nulla consequat ad\",\n                  \"id\": \"adipisicing\",\n                  \"imageUrl\": \"ea enim\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": false,\n                  \"isDeletedInOrigin\": true,\n                  \"profileUrl\": \"mollit ea\",\n                  \"uniqueName\": \"culpa\",\n                  \"_links\": {\n                    \"links\": {\n                      \"ex_\": {},\n                      \"ex_a9\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"failed\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\"\n          },\n          \"hasMultipleMergeBases\": \"<boolean>\",\n          \"isDraft\": \"<boolean>\",\n          \"labels\": [\n            {\n              \"active\": \"<boolean>\",\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"lastMergeCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"ullamco22b\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"ut9_\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": 75785502,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"cupidatat ut in qui\",\n                \"changeType\": \"delete\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"base64Encoded\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"in_4d5\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"\",\n                \"id\": \"magna anim dolor sed\",\n                \"imageUrl\": \"ad officia\",\n                \"inactive\": false,\n                \"isAadIdentity\": false,\n                \"isContainer\": false,\n                \"isDeletedInOrigin\": true,\n                \"profileUrl\": \"esse \",\n                \"uniqueName\": \"culpa Ut sint exercitation sunt\",\n                \"_links\": {\n                  \"links\": {\n                    \"reprehenderit_0a\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"eu5\": {},\n                    \"nisi_00c\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"commodo veniam eu in\",\n                  \"id\": \"adipisicing ea dolor\",\n                  \"imageUrl\": \"mollit culpa velit labore laboris\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": true,\n                  \"isDeletedInOrigin\": true,\n                  \"profileUrl\": \"laboris Excepteur\",\n                  \"uniqueName\": \"non qui ullamco in Duis\",\n                  \"_links\": {\n                    \"links\": {\n                      \"Excepteur_88\": {},\n                      \"Loremd_f\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"error\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"lastMergeSourceCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"irure44\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"veniam_4d\": \"<integer>\",\n              \"nostrud_0\": \"<integer>\",\n              \"occaecate5\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": 2826103,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"voluptate ex velit\",\n                \"changeType\": \"targetRename\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"base64Encoded\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"exercitation_70\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"cillum ea id consectetur\",\n                \"id\": \"cupidatat minim\",\n                \"imageUrl\": \"voluptate elit velit proident\",\n                \"inactive\": false,\n                \"isAadIdentity\": true,\n                \"isContainer\": true,\n                \"isDeletedInOrigin\": true,\n                \"profileUrl\": \"ipsum nulla in\",\n                \"uniqueName\": \"Ut et Lorem\",\n                \"_links\": {\n                  \"links\": {\n                    \"consequat_9a1\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"sed_7ee\": {},\n                    \"reprehenderit_52b\": {},\n                    \"pariatur_00\": {},\n                    \"labore_ae\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"laboris com\",\n                  \"id\": \"do cupidatat pariatur aliqua\",\n                  \"imageUrl\": \"qui veni\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": false,\n                  \"isContainer\": false,\n                  \"isDeletedInOrigin\": false,\n                  \"profileUrl\": \"dolor fugiat ut\",\n                  \"uniqueName\": \"ut dolor\",\n                  \"_links\": {\n                    \"links\": {\n                      \"in7d\": {},\n                      \"aliqua93e\": {},\n                      \"officia9\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"notApplicable\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"lastMergeTargetCommit\": {\n            \"_links\": {\n              \"links\": {\n                \"eiusmod_83\": {}\n              }\n            },\n            \"author\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"changeCounts\": {\n              \"est_80\": \"<integer>\",\n              \"ex_9\": \"<integer>\"\n            },\n            \"changes\": [\n              {\n                \"changeId\": 91405907,\n                \"newContentTemplate\": {},\n                \"originalPath\": \"in cupidatat proident\",\n                \"changeType\": \"sourceRename\",\n                \"item\": \"<string>\",\n                \"newContent\": {\n                  \"content\": \"<string>\",\n                  \"contentType\": \"rawText\"\n                },\n                \"sourceServerItem\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ],\n            \"comment\": \"<string>\",\n            \"commentTruncated\": \"<boolean>\",\n            \"commitId\": \"<string>\",\n            \"committer\": {\n              \"date\": \"<dateTime>\",\n              \"email\": \"<string>\",\n              \"imageUrl\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"commitTooManyChanges\": \"<boolean>\",\n            \"parents\": [\n              \"<string>\"\n            ],\n            \"push\": {\n              \"_links\": {\n                \"links\": {\n                  \"est_1be\": {}\n                }\n              },\n              \"date\": \"<dateTime>\",\n              \"pushedBy\": {\n                \"directoryAlias\": \"minim cillum id\",\n                \"id\": \"laborum amet deserunt in sint\",\n                \"imageUrl\": \"sint exercitation\",\n                \"inactive\": false,\n                \"isAadIdentity\": true,\n                \"isContainer\": true,\n                \"isDeletedInOrigin\": true,\n                \"profileUrl\": \"\",\n                \"uniqueName\": \"ipsum irure do\",\n                \"_links\": {\n                  \"links\": {\n                    \"aute977\": {},\n                    \"officiabdc\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"pushId\": \"<integer>\",\n              \"url\": \"<string>\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"statuses\": [\n              {\n                \"_links\": {\n                  \"links\": {\n                    \"in_132\": {},\n                    \"dolor_3\": {}\n                  }\n                },\n                \"context\": {\n                  \"genre\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"createdBy\": {\n                  \"directoryAlias\": \"do consectetur ut\",\n                  \"id\": \"in\",\n                  \"imageUrl\": \"non\",\n                  \"inactive\": false,\n                  \"isAadIdentity\": true,\n                  \"isContainer\": false,\n                  \"isDeletedInOrigin\": false,\n                  \"profileUrl\": \"esse nulla id\",\n                  \"uniqueName\": \"do adipisicing sunt\",\n                  \"_links\": {\n                    \"links\": {\n                      \"Ut4\": {},\n                      \"nostrud53\": {},\n                      \"cupidatat_f\": {}\n                    }\n                  },\n                  \"descriptor\": \"<string>\",\n                  \"displayName\": \"<string>\",\n                  \"url\": \"<string>\"\n                },\n                \"creationDate\": \"<dateTime>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"state\": \"failed\",\n                \"targetUrl\": \"<string>\",\n                \"updatedDate\": \"<dateTime>\"\n              }\n            ],\n            \"url\": \"<string>\",\n            \"workItems\": [\n              {\n                \"id\": \"<string>\",\n                \"url\": \"<string>\"\n              }\n            ]\n          },\n          \"mergeFailureMessage\": \"<string>\",\n          \"mergeFailureType\": \"unknown\",\n          \"mergeId\": \"<uuid>\",\n          \"mergeOptions\": {\n            \"conflictAuthorshipCommits\": \"<boolean>\",\n            \"detectRenameFalsePositives\": \"<boolean>\",\n            \"disableRenames\": \"<boolean>\"\n          },\n          \"mergeStatus\": \"notSet\",\n          \"pullRequestId\": \"<integer>\",\n          \"remoteUrl\": \"<string>\",\n          \"repository\": {\n            \"_links\": {\n              \"links\": {\n                \"veniame\": {},\n                \"esse_6c1\": {}\n              }\n            },\n            \"defaultBranch\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"isDisabled\": \"<boolean>\",\n            \"isFork\": \"<boolean>\",\n            \"isInMaintenance\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"parentRepository\": {\n              \"collection\": {\n                \"avatarUrl\": \"<string>\",\n                \"id\": \"<uuid>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"id\": \"<uuid>\",\n              \"isFork\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"project\": {\n                \"abbreviation\": \"<string>\",\n                \"defaultTeamImageUrl\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<uuid>\",\n                \"lastUpdateTime\": \"<dateTime>\",\n                \"name\": \"<string>\",\n                \"revision\": \"<long>\",\n                \"state\": \"createPending\",\n                \"url\": \"<string>\",\n                \"visibility\": \"private\"\n              },\n              \"remoteUrl\": \"<string>\",\n              \"sshUrl\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"project\": {\n              \"abbreviation\": \"<string>\",\n              \"defaultTeamImageUrl\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<uuid>\",\n              \"lastUpdateTime\": \"<dateTime>\",\n              \"name\": \"<string>\",\n              \"revision\": \"<long>\",\n              \"state\": \"unchanged\",\n              \"url\": \"<string>\",\n              \"visibility\": \"public\"\n            },\n            \"remoteUrl\": \"<string>\",\n            \"size\": \"<long>\",\n            \"sshUrl\": \"<string>\",\n            \"url\": \"<string>\",\n            \"validRemoteUrls\": [\n              \"<string>\"\n            ],\n            \"webUrl\": \"<string>\"\n          },\n          \"reviewers\": [\n            {\n              \"hasDeclined\": false,\n              \"isFlagged\": true,\n              \"isRequired\": false,\n              \"reviewerUrl\": \"et incididunt dolore dolore\",\n              \"vote\": -81326775,\n              \"directoryAlias\": \"mollit Lorem dolor\",\n              \"id\": \"laboris id\",\n              \"imageUrl\": \"nisi occaecat culpa aliquip\",\n              \"inactive\": true,\n              \"isAadIdentity\": true,\n              \"isContainer\": true,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"Excepteur proident enim mollit ea\",\n              \"uniqueName\": \"et amet\",\n              \"_links\": {\n                \"links\": {\n                  \"aliquip_ebc\": {},\n                  \"est_bc\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"sourceRefName\": \"<string>\",\n          \"status\": \"abandoned\",\n          \"supportsIterations\": \"<boolean>\",\n          \"targetRefName\": \"<string>\",\n          \"title\": \"<string>\",\n          \"url\": \"<string>\",\n          \"workItemRefs\": [\n            {\n              \"id\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "This API is used to find what pull requests are related to a given commit.  It can be used to either find the pull request that created a particular merge commit or it can be used to find all pull requests that have ever merged a particular commit.  The input is a list of queries which each contain a list of commits. For each commit that you search against, you will get back a dictionary of commit -> pull requests.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Reviewers",
          "filename": "Pull Request Reviewers",
          "root": {
            "meta": {
              "name": "Pull Request Reviewers"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Reviewers Create Pull Request Reviewer",
              "filename": "Pull Request Reviewers Create Pull Request Reviewer.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/reviewers/{{reviewerId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "reviewerId",
                    "value": "{{reviewerId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"hasDeclined\": true,\n  \"isFlagged\": false,\n  \"isRequired\": true,\n  \"reviewerUrl\": \"esse consectetur reprehenderit\",\n  \"vote\": 15753492,\n  \"directoryAlias\": \"proident esse non\",\n  \"id\": \"nulla ut exercitation\",\n  \"imageUrl\": \"laborum ea ad labore\",\n  \"inactive\": false,\n  \"isAadIdentity\": false,\n  \"isContainer\": true,\n  \"isDeletedInOrigin\": false,\n  \"profileUrl\": \"sed ex reprehenderit ut\",\n  \"uniqueName\": \"dolore ea\",\n  \"_links\": {\n    \"links\": {\n      \"ipsum1b0\": {},\n      \"officiaecb\": {}\n    }\n  },\n  \"descriptor\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a reviewer to a pull request or cast a vote.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Reviewers Create Pull Request Reviewers",
              "filename": "Pull Request Reviewers Create Pull Request Reviewers.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/reviewers?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"directoryAlias\": \"do sint officia esse Ut\",\n    \"id\": \"irure incididunt Excepteur aute elit\",\n    \"imageUrl\": \"deserunt velit sunt\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"eu ad Ut\",\n    \"uniqueName\": \"reprehenderit ipsum culpa in\",\n    \"_links\": {\n      \"links\": {\n        \"Duis_f\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  {\n    \"directoryAlias\": \"minim eu consectetur\",\n    \"id\": \"est reprehenderit magna\",\n    \"imageUrl\": \"ea occaecat\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"dolor fugiat\",\n    \"uniqueName\": \"do eu Excepteur aute ad\",\n    \"_links\": {\n      \"links\": {\n        \"dolore94\": {},\n        \"irure_a4\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add reviewers to a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Reviewers Create Unmaterialized Pull Request Reviewer",
              "filename": "Pull Request Reviewers Create Unmaterialized Pull Request Reviewer.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/reviewers?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"hasDeclined\": true,\n  \"isFlagged\": false,\n  \"isRequired\": true,\n  \"reviewerUrl\": \"esse consectetur reprehenderit\",\n  \"vote\": 15753492,\n  \"directoryAlias\": \"proident esse non\",\n  \"id\": \"nulla ut exercitation\",\n  \"imageUrl\": \"laborum ea ad labore\",\n  \"inactive\": false,\n  \"isAadIdentity\": false,\n  \"isContainer\": true,\n  \"isDeletedInOrigin\": false,\n  \"profileUrl\": \"sed ex reprehenderit ut\",\n  \"uniqueName\": \"dolore ea\",\n  \"_links\": {\n    \"links\": {\n      \"ipsum1b0\": {},\n      \"officiaecb\": {}\n    }\n  },\n  \"descriptor\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add an unmaterialized identity to the reviewers of a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Reviewers Delete",
              "filename": "Pull Request Reviewers Delete.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/reviewers/{{reviewerId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "reviewerId",
                    "value": "{{reviewerId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Remove a reviewer from a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Reviewers Get",
              "filename": "Pull Request Reviewers Get.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/reviewers/{{reviewerId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "reviewerId",
                    "value": "{{reviewerId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve information about a particular reviewer on a pull request",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Reviewers List",
              "filename": "Pull Request Reviewers List.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/reviewers?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve the reviewers for a pull request",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Reviewers Update Pull Request Reviewer",
              "filename": "Pull Request Reviewers Update Pull Request Reviewer.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/reviewers/{{reviewerId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "reviewerId",
                    "value": "{{reviewerId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"hasDeclined\": true,\n  \"isFlagged\": false,\n  \"isRequired\": true,\n  \"reviewerUrl\": \"esse consectetur reprehenderit\",\n  \"vote\": 15753492,\n  \"directoryAlias\": \"proident esse non\",\n  \"id\": \"nulla ut exercitation\",\n  \"imageUrl\": \"laborum ea ad labore\",\n  \"inactive\": false,\n  \"isAadIdentity\": false,\n  \"isContainer\": true,\n  \"isDeletedInOrigin\": false,\n  \"profileUrl\": \"sed ex reprehenderit ut\",\n  \"uniqueName\": \"dolore ea\",\n  \"_links\": {\n    \"links\": {\n      \"ipsum1b0\": {},\n      \"officiaecb\": {}\n    }\n  },\n  \"descriptor\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Edit a reviewer entry. These fields are patchable: isFlagged, hasDeclined",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Reviewers Update Pull Request Reviewers",
              "filename": "Pull Request Reviewers Update Pull Request Reviewers.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/reviewers?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"hasDeclined\": true,\n    \"isFlagged\": false,\n    \"isRequired\": true,\n    \"reviewerUrl\": \"do sunt dolore\",\n    \"vote\": 55194343,\n    \"directoryAlias\": \"adipisicing ea enim eu commodo\",\n    \"id\": \"in\",\n    \"imageUrl\": \"consequat id anim\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"sed dolore irure\",\n    \"uniqueName\": \"aute est in occaecat\",\n    \"_links\": {\n      \"links\": {\n        \"veniam_b\": {},\n        \"este\": {},\n        \"culpa_06\": {},\n        \"ut0d\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  {\n    \"hasDeclined\": true,\n    \"isFlagged\": false,\n    \"isRequired\": false,\n    \"reviewerUrl\": \"qui aliquip\",\n    \"vote\": 60035025,\n    \"directoryAlias\": \"cupidatat eu non tempor\",\n    \"id\": \"dolor et nisi tempor\",\n    \"imageUrl\": \"nisi deserunt et magna\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ut non elit anim irure\",\n    \"uniqueName\": \"pariatur nulla aliqua\",\n    \"_links\": {\n      \"links\": {\n        \"nisid7\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Reset the votes of multiple reviewers on a pull request.  NOTE: This endpoint only supports updating votes, but does not support updating required reviewers (use policy) or display names.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Thread Comments",
          "filename": "Pull Request Thread Comments",
          "root": {
            "docs": "This API provides a way to retrieve or modify comments associated with threads in a pull request.\nEach thread in a pull request can contain one or more comments.",
            "meta": {
              "name": "Pull Request Thread Comments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Thread Comments Create",
              "filename": "Pull Request Thread Comments Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}/comments?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"quis6\": {},\n      \"quis0b\": {}\n    }\n  },\n  \"author\": {\n    \"directoryAlias\": \"do laboris enim\",\n    \"id\": \"dolor\",\n    \"imageUrl\": \"fugiat\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"cupidatat Duis\",\n    \"uniqueName\": \"voluptate ad\",\n    \"_links\": {\n      \"links\": {\n        \"aute_2b\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"commentType\": \"system\",\n  \"content\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"isDeleted\": \"<boolean>\",\n  \"lastContentUpdatedDate\": \"<dateTime>\",\n  \"lastUpdatedDate\": \"<dateTime>\",\n  \"parentCommentId\": \"<integer>\",\n  \"publishedDate\": \"<dateTime>\",\n  \"usersLiked\": [\n    {\n      \"directoryAlias\": \"dolore ad\",\n      \"id\": \"Duis adipisicing irure\",\n      \"imageUrl\": \"amet voluptate\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"dolor laborum\",\n      \"uniqueName\": \"nisi aliquip amet\",\n      \"_links\": {\n        \"links\": {\n          \"voluptate_5\": {},\n          \"Excepteur7\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"directoryAlias\": \"id esse mollit nisi D\",\n      \"id\": \"Ut consequat\",\n      \"imageUrl\": \"amet labore culpa aliquip adipisicing\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"enim ex ea\",\n      \"uniqueName\": \"nulla occaecat sint nisi\",\n      \"_links\": {\n        \"links\": {\n          \"dolor_10c\": {},\n          \"elit1d\": {},\n          \"magna585\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a comment on a specific thread in a pull request (up to 500 comments can be created per thread).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Thread Comments Delete",
              "filename": "Pull Request Thread Comments Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}/comments/{{commentId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a comment associated with a specific thread in a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Thread Comments Get",
              "filename": "Pull Request Thread Comments Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}/comments/{{commentId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a comment associated with a specific thread in a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Thread Comments List",
              "filename": "Pull Request Thread Comments List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}/comments?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve all comments associated with a specific thread in a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Thread Comments Update",
              "filename": "Pull Request Thread Comments Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}/comments/{{commentId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"quis6\": {},\n      \"quis0b\": {}\n    }\n  },\n  \"author\": {\n    \"directoryAlias\": \"do laboris enim\",\n    \"id\": \"dolor\",\n    \"imageUrl\": \"fugiat\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"cupidatat Duis\",\n    \"uniqueName\": \"voluptate ad\",\n    \"_links\": {\n      \"links\": {\n        \"aute_2b\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"commentType\": \"system\",\n  \"content\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"isDeleted\": \"<boolean>\",\n  \"lastContentUpdatedDate\": \"<dateTime>\",\n  \"lastUpdatedDate\": \"<dateTime>\",\n  \"parentCommentId\": \"<integer>\",\n  \"publishedDate\": \"<dateTime>\",\n  \"usersLiked\": [\n    {\n      \"directoryAlias\": \"dolore ad\",\n      \"id\": \"Duis adipisicing irure\",\n      \"imageUrl\": \"amet voluptate\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"dolor laborum\",\n      \"uniqueName\": \"nisi aliquip amet\",\n      \"_links\": {\n        \"links\": {\n          \"voluptate_5\": {},\n          \"Excepteur7\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"directoryAlias\": \"id esse mollit nisi D\",\n      \"id\": \"Ut consequat\",\n      \"imageUrl\": \"amet labore culpa aliquip adipisicing\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"enim ex ea\",\n      \"uniqueName\": \"nulla occaecat sint nisi\",\n      \"_links\": {\n        \"links\": {\n          \"dolor_10c\": {},\n          \"elit1d\": {},\n          \"magna585\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a comment associated with a specific thread in a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Statuses",
          "filename": "Pull Request Statuses",
          "root": {
            "docs": "Pull request statuses provide extensibility to the pull request experience. Third party services or users with read permission to the repository\ncan create and get statuses associated with a pull request or an iteration via this REST API. An example of pull request status can be \"CI Build Passed\",\n\"Integration tests pending\", \"Linting check succeeded\".\nIn order to update a status create a new status with the same genre and name values.",
            "meta": {
              "name": "Pull Request Statuses"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Statuses Create",
              "filename": "Pull Request Statuses Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/statuses?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"iterationId\": 60418484,\n  \"properties\": {},\n  \"_links\": {\n    \"links\": {\n      \"irure92\": {}\n    }\n  },\n  \"context\": {\n    \"genre\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"createdBy\": {\n    \"directoryAlias\": \"fugiat co\",\n    \"id\": \"aute est occaecat\",\n    \"imageUrl\": \"reprehenderit\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"magna dolore sit anim\",\n    \"uniqueName\": \"ea\",\n    \"_links\": {\n      \"links\": {\n        \"ad_a40\": {},\n        \"dolorf51\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"creationDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"state\": \"error\",\n  \"targetUrl\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a pull request status.\n\nThe only required field for the status is `Context.Name` that uniquely identifies the status.\nNote that you can specify iterationId in the request body to post the status on the iteration.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Statuses Delete",
              "filename": "Pull Request Statuses Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/statuses/{{statusId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "statusId",
                    "value": "{{statusId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete pull request status.\n\nYou can remove multiple statuses in one call by using Update operation.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Statuses Get",
              "filename": "Pull Request Statuses Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/statuses/{{statusId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "statusId",
                    "value": "{{statusId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the specific pull request status by ID. The status ID is unique within the pull request across all iterations.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Statuses List",
              "filename": "Pull Request Statuses List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/statuses?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all the statuses associated with a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Statuses Update",
              "filename": "Pull Request Statuses Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/statuses?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update pull request statuses collection. The only supported operation type is `remove`.\n\nThis operation allows to delete multiple statuses in one call.\nThe path of the `remove` operation should refer to the ID of the pull request status.\nFor example `path=\"/1\"` refers to the pull request status with ID 1.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Share",
          "filename": "Pull Request Share",
          "root": {
            "meta": {
              "name": "Pull Request Share"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Share Share Pull Request",
              "filename": "Pull Request Share Share Pull Request.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/share?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"message\": \"<string>\",\n  \"receivers\": [\n    {\n      \"directoryAlias\": \"in mollit\",\n      \"id\": \"in amet\",\n      \"imageUrl\": \"ut cillum\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"proident enim dolor sed\",\n      \"uniqueName\": \"ut Lorem\",\n      \"_links\": {\n        \"links\": {\n          \"dolore_28\": {},\n          \"utf\": {},\n          \"consectetur_67\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"directoryAlias\": \"eiusmod eu nisi anim consequat\",\n      \"id\": \"voluptate cupidatat dolore sit\",\n      \"imageUrl\": \"est\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"sit aliqua\",\n      \"uniqueName\": \"sunt Duis veniam\",\n      \"_links\": {\n        \"links\": {\n          \"nisic5\": {},\n          \"amet_40\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Sends an e-mail notification about a specific pull request to a set of recipients",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Threads",
          "filename": "Pull Request Threads",
          "root": {
            "docs": "This API provides a way to retrieve or modify threads in a pull request.\nEach thread in a pull request can contain one or more comments.",
            "meta": {
              "name": "Pull Request Threads"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Threads Create",
              "filename": "Pull Request Threads Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"pullRequestThreadContext\": {},\n  \"_links\": {\n    \"links\": {\n      \"irurea\": {},\n      \"fugiat___\": {},\n      \"deserunt_68c\": {}\n    }\n  },\n  \"comments\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"magna4\": {},\n          \"dolore_51c\": {}\n        }\n      },\n      \"author\": {\n        \"directoryAlias\": \"adipi\",\n        \"id\": \"do\",\n        \"imageUrl\": \"tempor do cillum veniam\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"sed veniam\",\n        \"uniqueName\": \"pariatur non voluptate mollit\",\n        \"_links\": {\n          \"links\": {\n            \"ullamco_43\": {},\n            \"quis2\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"commentType\": \"system\",\n      \"content\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"isDeleted\": \"<boolean>\",\n      \"lastContentUpdatedDate\": \"<dateTime>\",\n      \"lastUpdatedDate\": \"<dateTime>\",\n      \"parentCommentId\": \"<integer>\",\n      \"publishedDate\": \"<dateTime>\",\n      \"usersLiked\": [\n        {\n          \"directoryAlias\": \"sint eiusmod culpa veniam\",\n          \"id\": \"esse ut\",\n          \"imageUrl\": \"anim reprehe\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"pariatur magna\",\n          \"uniqueName\": \"officia amet Lorem\",\n          \"_links\": {\n            \"links\": {\n              \"tempor_7b\": {},\n              \"Ut2\": {},\n              \"dolore_90\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"directoryAlias\": \"ut adipisicing irure\",\n          \"id\": \"dolore\",\n          \"imageUrl\": \"reprehenderit id\",\n          \"inactive\": false,\n          \"isAadIdentity\": false,\n          \"isContainer\": false,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"Duis mollit adipisicing\",\n          \"uniqueName\": \"nisi irure occaecat esse officia\",\n          \"_links\": {\n            \"links\": {\n              \"pariatur_9_\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"_links\": {\n        \"links\": {\n          \"pariaturf4\": {},\n          \"officiae\": {},\n          \"voluptate9_1\": {}\n        }\n      },\n      \"author\": {\n        \"directoryAlias\": \"in laboris \",\n        \"id\": \"dolore non est\",\n        \"imageUrl\": \"cupidatat ut\",\n        \"inactive\": false,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"ut deserunt dolor laborum\",\n        \"uniqueName\": \"irure ea aute\",\n        \"_links\": {\n          \"links\": {\n            \"aliquip_8b\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"commentType\": \"codeChange\",\n      \"content\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"isDeleted\": \"<boolean>\",\n      \"lastContentUpdatedDate\": \"<dateTime>\",\n      \"lastUpdatedDate\": \"<dateTime>\",\n      \"parentCommentId\": \"<integer>\",\n      \"publishedDate\": \"<dateTime>\",\n      \"usersLiked\": [\n        {\n          \"directoryAlias\": \"in\",\n          \"id\": \"fugiat qui reprehenderit \",\n          \"imageUrl\": \"laboris consequat\",\n          \"inactive\": true,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"in eu sed\",\n          \"uniqueName\": \"amet sed\",\n          \"_links\": {\n            \"links\": {\n              \"aliqua_d71\": {},\n              \"do6a\": {},\n              \"non2f3\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"directoryAlias\": \"dolor aliqua cupidatat o\",\n          \"id\": \"est dolor mollit sint qui\",\n          \"imageUrl\": \"aliquip fugiat \",\n          \"inactive\": false,\n          \"isAadIdentity\": false,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"mollit anim labore irure\",\n          \"uniqueName\": \"ut sit\",\n          \"_links\": {\n            \"links\": {\n              \"enim991\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"id\": \"<integer>\",\n  \"identities\": {\n    \"ullamco916\": {\n      \"directoryAlias\": \"consequat aliquip\",\n      \"id\": \"eu nulla exercitation\",\n      \"imageUrl\": \"magna velit est sit non\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"eu nulla irure qui\",\n      \"uniqueName\": \"exercitation officia irure eu\",\n      \"_links\": {\n        \"links\": {\n          \"officia_a0\": {},\n          \"veniam_5\": {},\n          \"officiaf2\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"enim_9c\": {\n      \"directoryAlias\": \"mollit culpa aute consequat\",\n      \"id\": \"exercitation\",\n      \"imageUrl\": \"dolore in repre\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"sint\",\n      \"uniqueName\": \"aliquip veniam\",\n      \"_links\": {\n        \"links\": {\n          \"officiadfc\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  },\n  \"isDeleted\": \"<boolean>\",\n  \"lastUpdatedDate\": \"<dateTime>\",\n  \"properties\": {\n    \"count\": \"<integer>\",\n    \"item\": {},\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"publishedDate\": \"<dateTime>\",\n  \"status\": \"wontFix\",\n  \"threadContext\": {\n    \"filePath\": \"<string>\",\n    \"leftFileEnd\": {\n      \"line\": \"<integer>\",\n      \"offset\": \"<integer>\"\n    },\n    \"leftFileStart\": {\n      \"line\": \"<integer>\",\n      \"offset\": \"<integer>\"\n    },\n    \"rightFileEnd\": {\n      \"line\": \"<integer>\",\n      \"offset\": \"<integer>\"\n    },\n    \"rightFileStart\": {\n      \"line\": \"<integer>\",\n      \"offset\": \"<integer>\"\n    }\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a thread in a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Threads Get",
              "filename": "Pull Request Threads Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}?$iteration=<integer>&$baseIteration=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$iteration",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$baseIteration",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a thread in a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Threads List",
              "filename": "Pull Request Threads List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads?$iteration=<integer>&$baseIteration=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$iteration",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$baseIteration",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve all threads in a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Threads Update",
              "filename": "Pull Request Threads Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/threads/{{threadId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "threadId",
                    "value": "{{threadId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"pullRequestThreadContext\": {},\n  \"_links\": {\n    \"links\": {\n      \"irurea\": {},\n      \"fugiat___\": {},\n      \"deserunt_68c\": {}\n    }\n  },\n  \"comments\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"magna4\": {},\n          \"dolore_51c\": {}\n        }\n      },\n      \"author\": {\n        \"directoryAlias\": \"adipi\",\n        \"id\": \"do\",\n        \"imageUrl\": \"tempor do cillum veniam\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"sed veniam\",\n        \"uniqueName\": \"pariatur non voluptate mollit\",\n        \"_links\": {\n          \"links\": {\n            \"ullamco_43\": {},\n            \"quis2\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"commentType\": \"system\",\n      \"content\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"isDeleted\": \"<boolean>\",\n      \"lastContentUpdatedDate\": \"<dateTime>\",\n      \"lastUpdatedDate\": \"<dateTime>\",\n      \"parentCommentId\": \"<integer>\",\n      \"publishedDate\": \"<dateTime>\",\n      \"usersLiked\": [\n        {\n          \"directoryAlias\": \"sint eiusmod culpa veniam\",\n          \"id\": \"esse ut\",\n          \"imageUrl\": \"anim reprehe\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"pariatur magna\",\n          \"uniqueName\": \"officia amet Lorem\",\n          \"_links\": {\n            \"links\": {\n              \"tempor_7b\": {},\n              \"Ut2\": {},\n              \"dolore_90\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"directoryAlias\": \"ut adipisicing irure\",\n          \"id\": \"dolore\",\n          \"imageUrl\": \"reprehenderit id\",\n          \"inactive\": false,\n          \"isAadIdentity\": false,\n          \"isContainer\": false,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"Duis mollit adipisicing\",\n          \"uniqueName\": \"nisi irure occaecat esse officia\",\n          \"_links\": {\n            \"links\": {\n              \"pariatur_9_\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"_links\": {\n        \"links\": {\n          \"pariaturf4\": {},\n          \"officiae\": {},\n          \"voluptate9_1\": {}\n        }\n      },\n      \"author\": {\n        \"directoryAlias\": \"in laboris \",\n        \"id\": \"dolore non est\",\n        \"imageUrl\": \"cupidatat ut\",\n        \"inactive\": false,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"ut deserunt dolor laborum\",\n        \"uniqueName\": \"irure ea aute\",\n        \"_links\": {\n          \"links\": {\n            \"aliquip_8b\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"commentType\": \"codeChange\",\n      \"content\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"isDeleted\": \"<boolean>\",\n      \"lastContentUpdatedDate\": \"<dateTime>\",\n      \"lastUpdatedDate\": \"<dateTime>\",\n      \"parentCommentId\": \"<integer>\",\n      \"publishedDate\": \"<dateTime>\",\n      \"usersLiked\": [\n        {\n          \"directoryAlias\": \"in\",\n          \"id\": \"fugiat qui reprehenderit \",\n          \"imageUrl\": \"laboris consequat\",\n          \"inactive\": true,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"in eu sed\",\n          \"uniqueName\": \"amet sed\",\n          \"_links\": {\n            \"links\": {\n              \"aliqua_d71\": {},\n              \"do6a\": {},\n              \"non2f3\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"directoryAlias\": \"dolor aliqua cupidatat o\",\n          \"id\": \"est dolor mollit sint qui\",\n          \"imageUrl\": \"aliquip fugiat \",\n          \"inactive\": false,\n          \"isAadIdentity\": false,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"mollit anim labore irure\",\n          \"uniqueName\": \"ut sit\",\n          \"_links\": {\n            \"links\": {\n              \"enim991\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"id\": \"<integer>\",\n  \"identities\": {\n    \"ullamco916\": {\n      \"directoryAlias\": \"consequat aliquip\",\n      \"id\": \"eu nulla exercitation\",\n      \"imageUrl\": \"magna velit est sit non\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"eu nulla irure qui\",\n      \"uniqueName\": \"exercitation officia irure eu\",\n      \"_links\": {\n        \"links\": {\n          \"officia_a0\": {},\n          \"veniam_5\": {},\n          \"officiaf2\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"enim_9c\": {\n      \"directoryAlias\": \"mollit culpa aute consequat\",\n      \"id\": \"exercitation\",\n      \"imageUrl\": \"dolore in repre\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"sint\",\n      \"uniqueName\": \"aliquip veniam\",\n      \"_links\": {\n        \"links\": {\n          \"officiadfc\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  },\n  \"isDeleted\": \"<boolean>\",\n  \"lastUpdatedDate\": \"<dateTime>\",\n  \"properties\": {\n    \"count\": \"<integer>\",\n    \"item\": {},\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"publishedDate\": \"<dateTime>\",\n  \"status\": \"wontFix\",\n  \"threadContext\": {\n    \"filePath\": \"<string>\",\n    \"leftFileEnd\": {\n      \"line\": \"<integer>\",\n      \"offset\": \"<integer>\"\n    },\n    \"leftFileStart\": {\n      \"line\": \"<integer>\",\n      \"offset\": \"<integer>\"\n    },\n    \"rightFileEnd\": {\n      \"line\": \"<integer>\",\n      \"offset\": \"<integer>\"\n    },\n    \"rightFileStart\": {\n      \"line\": \"<integer>\",\n      \"offset\": \"<integer>\"\n    }\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a thread in a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pushes",
          "filename": "Pushes",
          "root": {
            "docs": "Create and Query Git pushes.",
            "meta": {
              "name": "Pushes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pushes Create",
              "filename": "Pushes Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pushes?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"repository\": {},\n  \"_links\": {\n    \"links\": {\n      \"consectetur72d\": {},\n      \"pariaturd6c\": {}\n    }\n  },\n  \"date\": \"<dateTime>\",\n  \"pushedBy\": {\n    \"directoryAlias\": \"ad voluptate labore irure ut\",\n    \"id\": \"nisi deserunt labore \",\n    \"imageUrl\": \"ipsum cupidatat ex ullamco\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ut commodo ut sed\",\n    \"uniqueName\": \"fugiat in laboris\",\n    \"_links\": {\n      \"links\": {\n        \"ex2\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"pushId\": \"<integer>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Push changes to the repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pushes Get",
              "filename": "Pushes Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pushes/{{pushId}}?includeCommits=<integer>&includeRefUpdates=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeCommits",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeRefUpdates",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pushId",
                    "value": "{{pushId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieves a particular push.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pushes List",
              "filename": "Pushes List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pushes?$skip=<integer>&$top=<integer>&searchCriteria.fromDate=<dateTime>&searchCriteria.includeLinks=<boolean>&searchCriteria.includeRefUpdates=<boolean>&searchCriteria.pusherId=<uuid>&searchCriteria.refName=<string>&searchCriteria.toDate=<dateTime>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.fromDate",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.includeRefUpdates",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.pusherId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.refName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.toDate",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieves pushes associated with the specified repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Requests",
          "filename": "Pull Requests",
          "root": {
            "docs": "This API provides a way to create, retrieve, and modify pull requests.",
            "meta": {
              "name": "Pull Requests"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Requests Create",
              "filename": "Pull Requests Create.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullrequests?supportsIterations=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "supportsIterations",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"est5f\": {},\n      \"nisid\": {},\n      \"proident1_\": {}\n    }\n  },\n  \"artifactId\": \"<string>\",\n  \"autoCompleteSetBy\": {\n    \"directoryAlias\": \"in aute aliquip eu\",\n    \"id\": \"occaecat proident sed veniam sunt\",\n    \"imageUrl\": \"cillum cu\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"proident ad labore\",\n    \"uniqueName\": \"occaecat commodo\",\n    \"_links\": {\n      \"links\": {\n        \"cupidatat47_\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"closedBy\": {\n    \"directoryAlias\": \"veniam nisi Duis\",\n    \"id\": \"cupidatat officia eiusmod dolore enim\",\n    \"imageUrl\": \"deserunt in aliqua et magna\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"voluptate id mollit laboris eiusmod\",\n    \"uniqueName\": \"sunt ea commodo ut\",\n    \"_links\": {\n      \"links\": {\n        \"labore_43\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"closedDate\": \"<dateTime>\",\n  \"codeReviewId\": \"<integer>\",\n  \"commits\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"cillum6_\": {},\n          \"elit_1c\": {},\n          \"minim0\": {}\n        }\n      },\n      \"author\": {\n        \"date\": \"<dateTime>\",\n        \"email\": \"<string>\",\n        \"imageUrl\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"changeCounts\": {\n        \"reprehenderit3c3\": \"<integer>\",\n        \"irure_737\": \"<integer>\"\n      },\n      \"changes\": [\n        {\n          \"changeId\": 80222160,\n          \"newContentTemplate\": {},\n          \"originalPath\": \"in ea\",\n          \"changeType\": \"branch\",\n          \"item\": \"<string>\",\n          \"newContent\": {\n            \"content\": \"<string>\",\n            \"contentType\": \"rawText\"\n          },\n          \"sourceServerItem\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"comment\": \"<string>\",\n      \"commentTruncated\": \"<boolean>\",\n      \"commitId\": \"<string>\",\n      \"committer\": {\n        \"date\": \"<dateTime>\",\n        \"email\": \"<string>\",\n        \"imageUrl\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"commitTooManyChanges\": \"<boolean>\",\n      \"parents\": [\n        \"<string>\"\n      ],\n      \"push\": {\n        \"_links\": {\n          \"links\": {\n            \"ut71\": {}\n          }\n        },\n        \"date\": \"<dateTime>\",\n        \"pushedBy\": {\n          \"directoryAlias\": \"consectetur esse ullamco laboris est\",\n          \"id\": \"nulla mollit Excepteur nisi deserunt\",\n          \"imageUrl\": \"est cupidatat labore\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"aliquip magna anim\",\n          \"uniqueName\": \"nostrud consequat occaecat u\",\n          \"_links\": {\n            \"links\": {\n              \"sunt2e2\": {},\n              \"consectetur__\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"pushId\": \"<integer>\",\n        \"url\": \"<string>\"\n      },\n      \"remoteUrl\": \"<string>\",\n      \"statuses\": [\n        {\n          \"_links\": {\n            \"links\": {\n              \"cillumb2a\": {},\n              \"sint1fd\": {},\n              \"minim76\": {},\n              \"Duis_061\": {}\n            }\n          },\n          \"context\": {\n            \"genre\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"createdBy\": {\n            \"directoryAlias\": \"magna in ea\",\n            \"id\": \"sin\",\n            \"imageUrl\": \"enim amet\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"in nisi minim voluptate\",\n            \"uniqueName\": \"exercitation dolor ut\",\n            \"_links\": {\n              \"links\": {\n                \"esse8\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"creationDate\": \"<dateTime>\",\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"state\": \"error\",\n          \"targetUrl\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\"\n        }\n      ],\n      \"url\": \"<string>\",\n      \"workItems\": [\n        {\n          \"id\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"completionOptions\": {\n    \"autoCompleteIgnoreConfigIds\": [\n      \"<integer>\"\n    ],\n    \"bypassPolicy\": \"<boolean>\",\n    \"bypassReason\": \"<string>\",\n    \"deleteSourceBranch\": \"<boolean>\",\n    \"mergeCommitMessage\": \"<string>\",\n    \"mergeStrategy\": \"rebaseMerge\",\n    \"squashMerge\": \"<boolean>\",\n    \"transitionWorkItems\": \"<boolean>\",\n    \"triggeredByAutoComplete\": \"<boolean>\"\n  },\n  \"completionQueueTime\": \"<dateTime>\",\n  \"createdBy\": {\n    \"directoryAlias\": \"nostrud exercitation commodo dolor\",\n    \"id\": \"ali\",\n    \"imageUrl\": \"\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"aliqua dolor officia\",\n    \"uniqueName\": \"fugiat ad\",\n    \"_links\": {\n      \"links\": {\n        \"dolored2a\": {},\n        \"eu_b39\": {},\n        \"exercitation02\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"creationDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"forkSource\": {\n    \"repository\": {},\n    \"_links\": {\n      \"links\": {\n        \"ad9bc\": {},\n        \"officia1\": {},\n        \"in26\": {},\n        \"culpa_b5\": {},\n        \"Duis_5\": {}\n      }\n    },\n    \"creator\": {\n      \"directoryAlias\": \"minim eu\",\n      \"id\": \"dolore in dolore est elit\",\n      \"imageUrl\": \"ex do mollit\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"laborum incididunt sunt aute\",\n      \"uniqueName\": \"laboris irure anim nulla\",\n      \"_links\": {\n        \"links\": {\n          \"dolor0c7\": {},\n          \"irure__b\": {},\n          \"quif37\": {},\n          \"ex739\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"isLocked\": \"<boolean>\",\n    \"isLockedBy\": {\n      \"directoryAlias\": \"eu\",\n      \"id\": \"incididunt cupidatat aliqua\",\n      \"imageUrl\": \"enim eiusmod quis\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"esse irure\",\n      \"uniqueName\": \"culpa officia\",\n      \"_links\": {\n        \"links\": {\n          \"cupidatat_e\": {},\n          \"in26\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"objectId\": \"<string>\",\n    \"peeledObjectId\": \"<string>\",\n    \"statuses\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"pariatur_5\": {},\n            \"qui9\": {},\n            \"aliquac_\": {}\n          }\n        },\n        \"context\": {\n          \"genre\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"createdBy\": {\n          \"directoryAlias\": \"occaecat\",\n          \"id\": \"aute nisi s\",\n          \"imageUrl\": \"ullamco aliqua cupidatat\",\n          \"inactive\": true,\n          \"isAadIdentity\": false,\n          \"isContainer\": false,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"anim in sed nostrud\",\n          \"uniqueName\": \"non laboris\",\n          \"_links\": {\n            \"links\": {\n              \"fugiata\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"creationDate\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"state\": \"notApplicable\",\n        \"targetUrl\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\"\n      }\n    ],\n    \"url\": \"<string>\"\n  },\n  \"hasMultipleMergeBases\": \"<boolean>\",\n  \"isDraft\": \"<boolean>\",\n  \"labels\": [\n    {\n      \"active\": \"<boolean>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"lastMergeCommit\": {\n    \"_links\": {\n      \"links\": {\n        \"ullamco_553\": {},\n        \"Ut_1\": {}\n      }\n    },\n    \"author\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"changeCounts\": {\n      \"aute_b\": \"<integer>\",\n      \"ea_5\": \"<integer>\"\n    },\n    \"changes\": [\n      {\n        \"changeId\": -9067893,\n        \"newContentTemplate\": {},\n        \"originalPath\": \"nostrud est Lorem\",\n        \"changeType\": \"encoding\",\n        \"item\": \"<string>\",\n        \"newContent\": {\n          \"content\": \"<string>\",\n          \"contentType\": \"base64Encoded\"\n        },\n        \"sourceServerItem\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"comment\": \"<string>\",\n    \"commentTruncated\": \"<boolean>\",\n    \"commitId\": \"<string>\",\n    \"committer\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"commitTooManyChanges\": \"<boolean>\",\n    \"parents\": [\n      \"<string>\"\n    ],\n    \"push\": {\n      \"_links\": {\n        \"links\": {\n          \"pariatur_d\": {},\n          \"non_28\": {}\n        }\n      },\n      \"date\": \"<dateTime>\",\n      \"pushedBy\": {\n        \"directoryAlias\": \"nulla velit\",\n        \"id\": \"est Ut\",\n        \"imageUrl\": \"nisi\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"culpa commodo enim ut et\",\n        \"uniqueName\": \"sed ullamco exercitation sunt\",\n        \"_links\": {\n          \"links\": {\n            \"mollit_b\": {},\n            \"nostrud_4\": {},\n            \"proident45\": {},\n            \"nulla_c\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"pushId\": \"<integer>\",\n      \"url\": \"<string>\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"statuses\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"nulla6\": {}\n          }\n        },\n        \"context\": {\n          \"genre\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"createdBy\": {\n          \"directoryAlias\": \"cupidatat dolore\",\n          \"id\": \"aute nulla sed\",\n          \"imageUrl\": \"nulla reprehenderit dolore et elit\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": false,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"qui labore velit\",\n          \"uniqueName\": \"Ut ullamco\",\n          \"_links\": {\n            \"links\": {\n              \"velit8f\": {},\n              \"amet__f5\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"creationDate\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"state\": \"notApplicable\",\n        \"targetUrl\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\"\n      }\n    ],\n    \"url\": \"<string>\",\n    \"workItems\": [\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"lastMergeSourceCommit\": {\n    \"_links\": {\n      \"links\": {\n        \"sunt_\": {},\n        \"veniam7d\": {}\n      }\n    },\n    \"author\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"changeCounts\": {\n      \"in_85\": \"<integer>\",\n      \"deserunt_88\": \"<integer>\"\n    },\n    \"changes\": [\n      {\n        \"changeId\": -21168828,\n        \"newContentTemplate\": {},\n        \"originalPath\": \"ad exercitation aliqua\",\n        \"changeType\": \"none\",\n        \"item\": \"<string>\",\n        \"newContent\": {\n          \"content\": \"<string>\",\n          \"contentType\": \"base64Encoded\"\n        },\n        \"sourceServerItem\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"comment\": \"<string>\",\n    \"commentTruncated\": \"<boolean>\",\n    \"commitId\": \"<string>\",\n    \"committer\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"commitTooManyChanges\": \"<boolean>\",\n    \"parents\": [\n      \"<string>\"\n    ],\n    \"push\": {\n      \"_links\": {\n        \"links\": {\n          \"sunt_ecd\": {}\n        }\n      },\n      \"date\": \"<dateTime>\",\n      \"pushedBy\": {\n        \"directoryAlias\": \"dolore\",\n        \"id\": \"laborum in \",\n        \"imageUrl\": \"pariatur consequat cillum enim\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"dolor commodo\",\n        \"uniqueName\": \"ut id e\",\n        \"_links\": {\n          \"links\": {\n            \"sunt_96\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"pushId\": \"<integer>\",\n      \"url\": \"<string>\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"statuses\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"nulla2b\": {}\n          }\n        },\n        \"context\": {\n          \"genre\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"createdBy\": {\n          \"directoryAlias\": \"fugiat Ut\",\n          \"id\": \"qui ipsum ullamco Excepteur eu\",\n          \"imageUrl\": \"ea nostrud fugiat\",\n          \"inactive\": true,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"ex sint cupidatat pr\",\n          \"uniqueName\": \"nostrud in\",\n          \"_links\": {\n            \"links\": {\n              \"commodo_6\": {},\n              \"in1\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"creationDate\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"state\": \"pending\",\n        \"targetUrl\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\"\n      }\n    ],\n    \"url\": \"<string>\",\n    \"workItems\": [\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"lastMergeTargetCommit\": {\n    \"_links\": {\n      \"links\": {\n        \"nostrud_2\": {},\n        \"consecteturcd\": {},\n        \"fugiatc4\": {}\n      }\n    },\n    \"author\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"changeCounts\": {\n      \"incididunt_d\": \"<integer>\"\n    },\n    \"changes\": [\n      {\n        \"changeId\": 25876294,\n        \"newContentTemplate\": {},\n        \"originalPath\": \"ipsum dolore ut nisi\",\n        \"changeType\": \"rename\",\n        \"item\": \"<string>\",\n        \"newContent\": {\n          \"content\": \"<string>\",\n          \"contentType\": \"rawText\"\n        },\n        \"sourceServerItem\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"comment\": \"<string>\",\n    \"commentTruncated\": \"<boolean>\",\n    \"commitId\": \"<string>\",\n    \"committer\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"commitTooManyChanges\": \"<boolean>\",\n    \"parents\": [\n      \"<string>\"\n    ],\n    \"push\": {\n      \"_links\": {\n        \"links\": {\n          \"dolore4c\": {},\n          \"nostrud_8\": {}\n        }\n      },\n      \"date\": \"<dateTime>\",\n      \"pushedBy\": {\n        \"directoryAlias\": \"est ullamco minim pariatur\",\n        \"id\": \"sunt ea\",\n        \"imageUrl\": \"anim magna do\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"aute veniam culp\",\n        \"uniqueName\": \"veniam dolore nulla\",\n        \"_links\": {\n          \"links\": {\n            \"cupidatat_f\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"pushId\": \"<integer>\",\n      \"url\": \"<string>\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"statuses\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"labore_5\": {},\n            \"velit2\": {}\n          }\n        },\n        \"context\": {\n          \"genre\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"createdBy\": {\n          \"directoryAlias\": \"eiusmod consectetur est\",\n          \"id\": \"velit sint eiusmod quis in\",\n          \"imageUrl\": \"nostrud pariatur in labore\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"officia labore veniam est\",\n          \"uniqueName\": \"dolor irure Duis commodo ipsum\",\n          \"_links\": {\n            \"links\": {\n              \"dolor_53\": {},\n              \"temporaac\": {},\n              \"culpa_202\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"creationDate\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"state\": \"pending\",\n        \"targetUrl\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\"\n      }\n    ],\n    \"url\": \"<string>\",\n    \"workItems\": [\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"mergeFailureMessage\": \"<string>\",\n  \"mergeFailureType\": \"unknown\",\n  \"mergeId\": \"<uuid>\",\n  \"mergeOptions\": {\n    \"conflictAuthorshipCommits\": \"<boolean>\",\n    \"detectRenameFalsePositives\": \"<boolean>\",\n    \"disableRenames\": \"<boolean>\"\n  },\n  \"mergeStatus\": \"queued\",\n  \"pullRequestId\": \"<integer>\",\n  \"remoteUrl\": \"<string>\",\n  \"repository\": {\n    \"_links\": {\n      \"links\": {\n        \"inc_9\": {},\n        \"aliquip17\": {}\n      }\n    },\n    \"defaultBranch\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isDisabled\": \"<boolean>\",\n    \"isFork\": \"<boolean>\",\n    \"isInMaintenance\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"parentRepository\": {\n      \"collection\": {\n        \"avatarUrl\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"isFork\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"project\": {\n        \"abbreviation\": \"<string>\",\n        \"defaultTeamImageUrl\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"lastUpdateTime\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"revision\": \"<long>\",\n        \"state\": \"deleted\",\n        \"url\": \"<string>\",\n        \"visibility\": \"public\"\n      },\n      \"remoteUrl\": \"<string>\",\n      \"sshUrl\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"all\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"size\": \"<long>\",\n    \"sshUrl\": \"<string>\",\n    \"url\": \"<string>\",\n    \"validRemoteUrls\": [\n      \"<string>\"\n    ],\n    \"webUrl\": \"<string>\"\n  },\n  \"reviewers\": [\n    {\n      \"hasDeclined\": true,\n      \"isFlagged\": true,\n      \"isRequired\": true,\n      \"reviewerUrl\": \"anim eu ut ad\",\n      \"vote\": -64397702,\n      \"directoryAlias\": \"sit\",\n      \"id\": \"deserunt eu dolore dolore\",\n      \"imageUrl\": \"amet non occaecat laborum\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"esse\",\n      \"uniqueName\": \"labore anim\",\n      \"_links\": {\n        \"links\": {\n          \"non_4\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"sourceRefName\": \"<string>\",\n  \"status\": \"abandoned\",\n  \"supportsIterations\": \"<boolean>\",\n  \"targetRefName\": \"<string>\",\n  \"title\": \"<string>\",\n  \"url\": \"<string>\",\n  \"workItemRefs\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Requests Get Pull Request By Id",
              "filename": "Pull Requests Get Pull Request By Id.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/pullrequests/{{pullRequestId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Requests Get Pull Request",
              "filename": "Pull Requests Get Pull Request.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullrequests/{{pullRequestId}}?maxCommentLength=<integer>&$skip=<integer>&$top=<integer>&includeCommits=<boolean>&includeWorkItemRefs=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "maxCommentLength",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeCommits",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeWorkItemRefs",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Requests Get Pull Requests By Project",
              "filename": "Pull Requests Get Pull Requests By Project.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/pullrequests?searchCriteria.creatorId=<uuid>&searchCriteria.includeLinks=<boolean>&searchCriteria.maxTime=<dateTime>&searchCriteria.minTime=<dateTime>&searchCriteria.queryTimeRangeType=created&searchCriteria.repositoryId=<uuid>&searchCriteria.reviewerId=<uuid>&searchCriteria.sourceRefName=<string>&searchCriteria.sourceRepositoryId=<uuid>&searchCriteria.status=active,completed&searchCriteria.targetRefName=<string>&maxCommentLength=<integer>&$skip=<integer>&$top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "searchCriteria.creatorId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.maxTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.minTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.queryTimeRangeType",
                    "value": "created",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.repositoryId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.reviewerId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.sourceRefName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.sourceRepositoryId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.status",
                    "value": "active,completed",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.targetRefName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "maxCommentLength",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve all pull requests matching a specified criteria.\n\nPlease note that description field will be truncated up to 400 symbols in the result.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Requests Get Pull Requests",
              "filename": "Pull Requests Get Pull Requests.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullrequests?searchCriteria.repositoryId=443b1e92-d6ce-404e-a513-b1c1d3a205d7&searchCriteria.status=active,completed&$top=1000&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "searchCriteria.repositoryId",
                    "value": "443b1e92-d6ce-404e-a513-b1c1d3a205d7",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.status",
                    "value": "active,completed",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "1000",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.creatorId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "searchCriteria.includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "searchCriteria.maxTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "searchCriteria.minTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "searchCriteria.queryTimeRangeType",
                    "value": "created",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "searchCriteria.reviewerId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "searchCriteria.sourceRefName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "searchCriteria.sourceRepositoryId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "searchCriteria.targetRefName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "maxCommentLength",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve all pull requests matching a specified criteria.\n\nPlease note that description field will be truncated up to 400 symbols in the result.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Requests Update",
              "filename": "Pull Requests Update.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullrequests/{{pullRequestId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"est5f\": {},\n      \"nisid\": {},\n      \"proident1_\": {}\n    }\n  },\n  \"artifactId\": \"<string>\",\n  \"autoCompleteSetBy\": {\n    \"directoryAlias\": \"in aute aliquip eu\",\n    \"id\": \"occaecat proident sed veniam sunt\",\n    \"imageUrl\": \"cillum cu\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"proident ad labore\",\n    \"uniqueName\": \"occaecat commodo\",\n    \"_links\": {\n      \"links\": {\n        \"cupidatat47_\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"closedBy\": {\n    \"directoryAlias\": \"veniam nisi Duis\",\n    \"id\": \"cupidatat officia eiusmod dolore enim\",\n    \"imageUrl\": \"deserunt in aliqua et magna\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"voluptate id mollit laboris eiusmod\",\n    \"uniqueName\": \"sunt ea commodo ut\",\n    \"_links\": {\n      \"links\": {\n        \"labore_43\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"closedDate\": \"<dateTime>\",\n  \"codeReviewId\": \"<integer>\",\n  \"commits\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"cillum6_\": {},\n          \"elit_1c\": {},\n          \"minim0\": {}\n        }\n      },\n      \"author\": {\n        \"date\": \"<dateTime>\",\n        \"email\": \"<string>\",\n        \"imageUrl\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"changeCounts\": {\n        \"reprehenderit3c3\": \"<integer>\",\n        \"irure_737\": \"<integer>\"\n      },\n      \"changes\": [\n        {\n          \"changeId\": 80222160,\n          \"newContentTemplate\": {},\n          \"originalPath\": \"in ea\",\n          \"changeType\": \"branch\",\n          \"item\": \"<string>\",\n          \"newContent\": {\n            \"content\": \"<string>\",\n            \"contentType\": \"rawText\"\n          },\n          \"sourceServerItem\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"comment\": \"<string>\",\n      \"commentTruncated\": \"<boolean>\",\n      \"commitId\": \"<string>\",\n      \"committer\": {\n        \"date\": \"<dateTime>\",\n        \"email\": \"<string>\",\n        \"imageUrl\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"commitTooManyChanges\": \"<boolean>\",\n      \"parents\": [\n        \"<string>\"\n      ],\n      \"push\": {\n        \"_links\": {\n          \"links\": {\n            \"ut71\": {}\n          }\n        },\n        \"date\": \"<dateTime>\",\n        \"pushedBy\": {\n          \"directoryAlias\": \"consectetur esse ullamco laboris est\",\n          \"id\": \"nulla mollit Excepteur nisi deserunt\",\n          \"imageUrl\": \"est cupidatat labore\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"aliquip magna anim\",\n          \"uniqueName\": \"nostrud consequat occaecat u\",\n          \"_links\": {\n            \"links\": {\n              \"sunt2e2\": {},\n              \"consectetur__\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"pushId\": \"<integer>\",\n        \"url\": \"<string>\"\n      },\n      \"remoteUrl\": \"<string>\",\n      \"statuses\": [\n        {\n          \"_links\": {\n            \"links\": {\n              \"cillumb2a\": {},\n              \"sint1fd\": {},\n              \"minim76\": {},\n              \"Duis_061\": {}\n            }\n          },\n          \"context\": {\n            \"genre\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"createdBy\": {\n            \"directoryAlias\": \"magna in ea\",\n            \"id\": \"sin\",\n            \"imageUrl\": \"enim amet\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"in nisi minim voluptate\",\n            \"uniqueName\": \"exercitation dolor ut\",\n            \"_links\": {\n              \"links\": {\n                \"esse8\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"creationDate\": \"<dateTime>\",\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"state\": \"error\",\n          \"targetUrl\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\"\n        }\n      ],\n      \"url\": \"<string>\",\n      \"workItems\": [\n        {\n          \"id\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"completionOptions\": {\n    \"autoCompleteIgnoreConfigIds\": [\n      \"<integer>\"\n    ],\n    \"bypassPolicy\": \"<boolean>\",\n    \"bypassReason\": \"<string>\",\n    \"deleteSourceBranch\": \"<boolean>\",\n    \"mergeCommitMessage\": \"<string>\",\n    \"mergeStrategy\": \"rebaseMerge\",\n    \"squashMerge\": \"<boolean>\",\n    \"transitionWorkItems\": \"<boolean>\",\n    \"triggeredByAutoComplete\": \"<boolean>\"\n  },\n  \"completionQueueTime\": \"<dateTime>\",\n  \"createdBy\": {\n    \"directoryAlias\": \"nostrud exercitation commodo dolor\",\n    \"id\": \"ali\",\n    \"imageUrl\": \"\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"aliqua dolor officia\",\n    \"uniqueName\": \"fugiat ad\",\n    \"_links\": {\n      \"links\": {\n        \"dolored2a\": {},\n        \"eu_b39\": {},\n        \"exercitation02\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"creationDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"forkSource\": {\n    \"repository\": {},\n    \"_links\": {\n      \"links\": {\n        \"ad9bc\": {},\n        \"officia1\": {},\n        \"in26\": {},\n        \"culpa_b5\": {},\n        \"Duis_5\": {}\n      }\n    },\n    \"creator\": {\n      \"directoryAlias\": \"minim eu\",\n      \"id\": \"dolore in dolore est elit\",\n      \"imageUrl\": \"ex do mollit\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"laborum incididunt sunt aute\",\n      \"uniqueName\": \"laboris irure anim nulla\",\n      \"_links\": {\n        \"links\": {\n          \"dolor0c7\": {},\n          \"irure__b\": {},\n          \"quif37\": {},\n          \"ex739\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"isLocked\": \"<boolean>\",\n    \"isLockedBy\": {\n      \"directoryAlias\": \"eu\",\n      \"id\": \"incididunt cupidatat aliqua\",\n      \"imageUrl\": \"enim eiusmod quis\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"esse irure\",\n      \"uniqueName\": \"culpa officia\",\n      \"_links\": {\n        \"links\": {\n          \"cupidatat_e\": {},\n          \"in26\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"objectId\": \"<string>\",\n    \"peeledObjectId\": \"<string>\",\n    \"statuses\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"pariatur_5\": {},\n            \"qui9\": {},\n            \"aliquac_\": {}\n          }\n        },\n        \"context\": {\n          \"genre\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"createdBy\": {\n          \"directoryAlias\": \"occaecat\",\n          \"id\": \"aute nisi s\",\n          \"imageUrl\": \"ullamco aliqua cupidatat\",\n          \"inactive\": true,\n          \"isAadIdentity\": false,\n          \"isContainer\": false,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"anim in sed nostrud\",\n          \"uniqueName\": \"non laboris\",\n          \"_links\": {\n            \"links\": {\n              \"fugiata\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"creationDate\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"state\": \"notApplicable\",\n        \"targetUrl\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\"\n      }\n    ],\n    \"url\": \"<string>\"\n  },\n  \"hasMultipleMergeBases\": \"<boolean>\",\n  \"isDraft\": \"<boolean>\",\n  \"labels\": [\n    {\n      \"active\": \"<boolean>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"lastMergeCommit\": {\n    \"_links\": {\n      \"links\": {\n        \"ullamco_553\": {},\n        \"Ut_1\": {}\n      }\n    },\n    \"author\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"changeCounts\": {\n      \"aute_b\": \"<integer>\",\n      \"ea_5\": \"<integer>\"\n    },\n    \"changes\": [\n      {\n        \"changeId\": -9067893,\n        \"newContentTemplate\": {},\n        \"originalPath\": \"nostrud est Lorem\",\n        \"changeType\": \"encoding\",\n        \"item\": \"<string>\",\n        \"newContent\": {\n          \"content\": \"<string>\",\n          \"contentType\": \"base64Encoded\"\n        },\n        \"sourceServerItem\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"comment\": \"<string>\",\n    \"commentTruncated\": \"<boolean>\",\n    \"commitId\": \"<string>\",\n    \"committer\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"commitTooManyChanges\": \"<boolean>\",\n    \"parents\": [\n      \"<string>\"\n    ],\n    \"push\": {\n      \"_links\": {\n        \"links\": {\n          \"pariatur_d\": {},\n          \"non_28\": {}\n        }\n      },\n      \"date\": \"<dateTime>\",\n      \"pushedBy\": {\n        \"directoryAlias\": \"nulla velit\",\n        \"id\": \"est Ut\",\n        \"imageUrl\": \"nisi\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"culpa commodo enim ut et\",\n        \"uniqueName\": \"sed ullamco exercitation sunt\",\n        \"_links\": {\n          \"links\": {\n            \"mollit_b\": {},\n            \"nostrud_4\": {},\n            \"proident45\": {},\n            \"nulla_c\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"pushId\": \"<integer>\",\n      \"url\": \"<string>\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"statuses\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"nulla6\": {}\n          }\n        },\n        \"context\": {\n          \"genre\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"createdBy\": {\n          \"directoryAlias\": \"cupidatat dolore\",\n          \"id\": \"aute nulla sed\",\n          \"imageUrl\": \"nulla reprehenderit dolore et elit\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": false,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"qui labore velit\",\n          \"uniqueName\": \"Ut ullamco\",\n          \"_links\": {\n            \"links\": {\n              \"velit8f\": {},\n              \"amet__f5\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"creationDate\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"state\": \"notApplicable\",\n        \"targetUrl\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\"\n      }\n    ],\n    \"url\": \"<string>\",\n    \"workItems\": [\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"lastMergeSourceCommit\": {\n    \"_links\": {\n      \"links\": {\n        \"sunt_\": {},\n        \"veniam7d\": {}\n      }\n    },\n    \"author\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"changeCounts\": {\n      \"in_85\": \"<integer>\",\n      \"deserunt_88\": \"<integer>\"\n    },\n    \"changes\": [\n      {\n        \"changeId\": -21168828,\n        \"newContentTemplate\": {},\n        \"originalPath\": \"ad exercitation aliqua\",\n        \"changeType\": \"none\",\n        \"item\": \"<string>\",\n        \"newContent\": {\n          \"content\": \"<string>\",\n          \"contentType\": \"base64Encoded\"\n        },\n        \"sourceServerItem\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"comment\": \"<string>\",\n    \"commentTruncated\": \"<boolean>\",\n    \"commitId\": \"<string>\",\n    \"committer\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"commitTooManyChanges\": \"<boolean>\",\n    \"parents\": [\n      \"<string>\"\n    ],\n    \"push\": {\n      \"_links\": {\n        \"links\": {\n          \"sunt_ecd\": {}\n        }\n      },\n      \"date\": \"<dateTime>\",\n      \"pushedBy\": {\n        \"directoryAlias\": \"dolore\",\n        \"id\": \"laborum in \",\n        \"imageUrl\": \"pariatur consequat cillum enim\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"dolor commodo\",\n        \"uniqueName\": \"ut id e\",\n        \"_links\": {\n          \"links\": {\n            \"sunt_96\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"pushId\": \"<integer>\",\n      \"url\": \"<string>\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"statuses\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"nulla2b\": {}\n          }\n        },\n        \"context\": {\n          \"genre\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"createdBy\": {\n          \"directoryAlias\": \"fugiat Ut\",\n          \"id\": \"qui ipsum ullamco Excepteur eu\",\n          \"imageUrl\": \"ea nostrud fugiat\",\n          \"inactive\": true,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"ex sint cupidatat pr\",\n          \"uniqueName\": \"nostrud in\",\n          \"_links\": {\n            \"links\": {\n              \"commodo_6\": {},\n              \"in1\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"creationDate\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"state\": \"pending\",\n        \"targetUrl\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\"\n      }\n    ],\n    \"url\": \"<string>\",\n    \"workItems\": [\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"lastMergeTargetCommit\": {\n    \"_links\": {\n      \"links\": {\n        \"nostrud_2\": {},\n        \"consecteturcd\": {},\n        \"fugiatc4\": {}\n      }\n    },\n    \"author\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"changeCounts\": {\n      \"incididunt_d\": \"<integer>\"\n    },\n    \"changes\": [\n      {\n        \"changeId\": 25876294,\n        \"newContentTemplate\": {},\n        \"originalPath\": \"ipsum dolore ut nisi\",\n        \"changeType\": \"rename\",\n        \"item\": \"<string>\",\n        \"newContent\": {\n          \"content\": \"<string>\",\n          \"contentType\": \"rawText\"\n        },\n        \"sourceServerItem\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"comment\": \"<string>\",\n    \"commentTruncated\": \"<boolean>\",\n    \"commitId\": \"<string>\",\n    \"committer\": {\n      \"date\": \"<dateTime>\",\n      \"email\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"commitTooManyChanges\": \"<boolean>\",\n    \"parents\": [\n      \"<string>\"\n    ],\n    \"push\": {\n      \"_links\": {\n        \"links\": {\n          \"dolore4c\": {},\n          \"nostrud_8\": {}\n        }\n      },\n      \"date\": \"<dateTime>\",\n      \"pushedBy\": {\n        \"directoryAlias\": \"est ullamco minim pariatur\",\n        \"id\": \"sunt ea\",\n        \"imageUrl\": \"anim magna do\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"aute veniam culp\",\n        \"uniqueName\": \"veniam dolore nulla\",\n        \"_links\": {\n          \"links\": {\n            \"cupidatat_f\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"pushId\": \"<integer>\",\n      \"url\": \"<string>\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"statuses\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"labore_5\": {},\n            \"velit2\": {}\n          }\n        },\n        \"context\": {\n          \"genre\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"createdBy\": {\n          \"directoryAlias\": \"eiusmod consectetur est\",\n          \"id\": \"velit sint eiusmod quis in\",\n          \"imageUrl\": \"nostrud pariatur in labore\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"officia labore veniam est\",\n          \"uniqueName\": \"dolor irure Duis commodo ipsum\",\n          \"_links\": {\n            \"links\": {\n              \"dolor_53\": {},\n              \"temporaac\": {},\n              \"culpa_202\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"creationDate\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"state\": \"pending\",\n        \"targetUrl\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\"\n      }\n    ],\n    \"url\": \"<string>\",\n    \"workItems\": [\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"mergeFailureMessage\": \"<string>\",\n  \"mergeFailureType\": \"unknown\",\n  \"mergeId\": \"<uuid>\",\n  \"mergeOptions\": {\n    \"conflictAuthorshipCommits\": \"<boolean>\",\n    \"detectRenameFalsePositives\": \"<boolean>\",\n    \"disableRenames\": \"<boolean>\"\n  },\n  \"mergeStatus\": \"queued\",\n  \"pullRequestId\": \"<integer>\",\n  \"remoteUrl\": \"<string>\",\n  \"repository\": {\n    \"_links\": {\n      \"links\": {\n        \"inc_9\": {},\n        \"aliquip17\": {}\n      }\n    },\n    \"defaultBranch\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isDisabled\": \"<boolean>\",\n    \"isFork\": \"<boolean>\",\n    \"isInMaintenance\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"parentRepository\": {\n      \"collection\": {\n        \"avatarUrl\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"isFork\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"project\": {\n        \"abbreviation\": \"<string>\",\n        \"defaultTeamImageUrl\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"lastUpdateTime\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"revision\": \"<long>\",\n        \"state\": \"deleted\",\n        \"url\": \"<string>\",\n        \"visibility\": \"public\"\n      },\n      \"remoteUrl\": \"<string>\",\n      \"sshUrl\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"all\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"size\": \"<long>\",\n    \"sshUrl\": \"<string>\",\n    \"url\": \"<string>\",\n    \"validRemoteUrls\": [\n      \"<string>\"\n    ],\n    \"webUrl\": \"<string>\"\n  },\n  \"reviewers\": [\n    {\n      \"hasDeclined\": true,\n      \"isFlagged\": true,\n      \"isRequired\": true,\n      \"reviewerUrl\": \"anim eu ut ad\",\n      \"vote\": -64397702,\n      \"directoryAlias\": \"sit\",\n      \"id\": \"deserunt eu dolore dolore\",\n      \"imageUrl\": \"amet non occaecat laborum\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"esse\",\n      \"uniqueName\": \"labore anim\",\n      \"_links\": {\n        \"links\": {\n          \"non_4\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"sourceRefName\": \"<string>\",\n  \"status\": \"abandoned\",\n  \"supportsIterations\": \"<boolean>\",\n  \"targetRefName\": \"<string>\",\n  \"title\": \"<string>\",\n  \"url\": \"<string>\",\n  \"workItemRefs\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a pull request\n\nThese are the properties that can be updated with the API:\n - Status\n - Title\n - Description (up to 4000 characters)\n - CompletionOptions\n - MergeOptions\n - AutoCompleteSetBy.Id\n - TargetRefName (when the PR retargeting feature is enabled)\n Attempting to update other properties outside of this list will either cause the server to throw an `InvalidArgumentValueException`,\n or to silently ignore the update.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Refs Favorites",
          "filename": "Refs Favorites",
          "root": {
            "docs": "Controller to handle REST requests for Git Ref Favorites",
            "meta": {
              "name": "Refs Favorites"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Refs Favorites Create",
              "filename": "Refs Favorites Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/favorites/refs?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"id2\": {},\n      \"fugiat_7d\": {}\n    }\n  },\n  \"id\": \"<integer>\",\n  \"identityId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"repositoryId\": \"<uuid>\",\n  \"type\": \"invalid\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a ref favorite",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Refs Favorites Delete",
              "filename": "Refs Favorites Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/favorites/refs/{{favoriteId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "favoriteId",
                    "value": "{{favoriteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes the refs favorite specified",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Refs Favorites Get",
              "filename": "Refs Favorites Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/favorites/refs/{{favoriteId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "favoriteId",
                    "value": "{{favoriteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the refs favorite for a favorite Id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Refs Favorites List",
              "filename": "Refs Favorites List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/favorites/refs?repositoryId={{repositoryId}}&identityId={{identityId}}&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "identityId",
                    "value": "{{identityId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the refs favorites for a repo and an identity.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Work Items",
          "filename": "Pull Request Work Items",
          "root": {
            "docs": "This API provides a way to manipulate the work items associated with a pull request.",
            "meta": {
              "name": "Pull Request Work Items"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Work Items List",
              "filename": "Pull Request Work Items List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/workitems?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a list of work items associated with a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Reverts",
          "filename": "Reverts",
          "root": {
            "docs": "This API provides a way to revert into a new branch either a specific commit or commits that are associated to a\npull request.",
            "meta": {
              "name": "Reverts"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Reverts Create",
              "filename": "Reverts Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/reverts?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"generatedRefName\": \"<string>\",\n  \"ontoRefName\": \"<string>\",\n  \"repository\": {\n    \"_links\": {\n      \"links\": {\n        \"est3f\": {}\n      }\n    },\n    \"defaultBranch\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isDisabled\": \"<boolean>\",\n    \"isFork\": \"<boolean>\",\n    \"isInMaintenance\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"parentRepository\": {\n      \"collection\": {\n        \"avatarUrl\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"isFork\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"project\": {\n        \"abbreviation\": \"<string>\",\n        \"defaultTeamImageUrl\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"lastUpdateTime\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"revision\": \"<long>\",\n        \"state\": \"deleting\",\n        \"url\": \"<string>\",\n        \"visibility\": \"private\"\n      },\n      \"remoteUrl\": \"<string>\",\n      \"sshUrl\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"all\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"size\": \"<long>\",\n    \"sshUrl\": \"<string>\",\n    \"url\": \"<string>\",\n    \"validRemoteUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"webUrl\": \"<string>\"\n  },\n  \"source\": {\n    \"commitList\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"in_59\": {},\n            \"mollit_4\": {}\n          }\n        },\n        \"author\": {\n          \"date\": \"<dateTime>\",\n          \"email\": \"<string>\",\n          \"imageUrl\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"changeCounts\": {\n          \"velit_50e\": \"<integer>\",\n          \"elit8\": \"<integer>\",\n          \"nondd5\": \"<integer>\"\n        },\n        \"changes\": [\n          {\n            \"changeId\": -81277615,\n            \"newContentTemplate\": {},\n            \"originalPath\": \"velit sit fugiat\",\n            \"changeType\": \"add\",\n            \"item\": \"<string>\",\n            \"newContent\": {\n              \"content\": \"<string>\",\n              \"contentType\": \"base64Encoded\"\n            },\n            \"sourceServerItem\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"changeId\": 39553535,\n            \"newContentTemplate\": {},\n            \"originalPath\": \"nisi sint minim do\",\n            \"changeType\": \"targetRename\",\n            \"item\": \"<string>\",\n            \"newContent\": {\n              \"content\": \"<string>\",\n              \"contentType\": \"rawText\"\n            },\n            \"sourceServerItem\": \"<string>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"commentTruncated\": \"<boolean>\",\n        \"commitId\": \"<string>\",\n        \"committer\": {\n          \"date\": \"<dateTime>\",\n          \"email\": \"<string>\",\n          \"imageUrl\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"commitTooManyChanges\": \"<boolean>\",\n        \"parents\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"push\": {\n          \"_links\": {\n            \"links\": {\n              \"id_a79\": {},\n              \"laborisfb8\": {}\n            }\n          },\n          \"date\": \"<dateTime>\",\n          \"pushedBy\": {\n            \"directoryAlias\": \"exercitation cillum sed\",\n            \"id\": \"nostrud\",\n            \"imageUrl\": \"dolor consequat sed\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"pariatur ullamco cillum\",\n            \"uniqueName\": \"dolor culpa\",\n            \"_links\": {\n              \"links\": {\n                \"nostrud_86\": {},\n                \"mollit_6_\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"pushId\": \"<integer>\",\n          \"url\": \"<string>\"\n        },\n        \"remoteUrl\": \"<string>\",\n        \"statuses\": [\n          {\n            \"_links\": {\n              \"links\": {\n                \"minimd\": {}\n              }\n            },\n            \"context\": {\n              \"genre\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"createdBy\": {\n              \"directoryAlias\": \"elit\",\n              \"id\": \"nulla proident sed\",\n              \"imageUrl\": \"dolor\",\n              \"inactive\": true,\n              \"isAadIdentity\": true,\n              \"isContainer\": true,\n              \"isDeletedInOrigin\": false,\n              \"profileUrl\": \"in ut ad\",\n              \"uniqueName\": \"veniam Lorem\",\n              \"_links\": {\n                \"links\": {\n                  \"ad0\": {},\n                  \"eiusmod853\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"creationDate\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"state\": \"pending\",\n            \"targetUrl\": \"<string>\",\n            \"updatedDate\": \"<dateTime>\"\n          },\n          {\n            \"_links\": {\n              \"links\": {\n                \"tempor1\": {}\n              }\n            },\n            \"context\": {\n              \"genre\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"createdBy\": {\n              \"directoryAlias\": \"adipisicing sed consectetur irure\",\n              \"id\": \"eiusmod ipsum anim sit\",\n              \"imageUrl\": \"Ut ex officia laborum\",\n              \"inactive\": false,\n              \"isAadIdentity\": false,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": false,\n              \"profileUrl\": \"irure\",\n              \"uniqueName\": \"cillum dolor anim do\",\n              \"_links\": {\n                \"links\": {\n                  \"exercitationcc9\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"creationDate\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"state\": \"notApplicable\",\n            \"targetUrl\": \"<string>\",\n            \"updatedDate\": \"<dateTime>\"\n          }\n        ],\n        \"url\": \"<string>\",\n        \"workItems\": [\n          {\n            \"id\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"url\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"_links\": {\n          \"links\": {\n            \"anim8bb\": {},\n            \"incididunt_09\": {}\n          }\n        },\n        \"author\": {\n          \"date\": \"<dateTime>\",\n          \"email\": \"<string>\",\n          \"imageUrl\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"changeCounts\": {\n          \"ipsum_0c\": \"<integer>\",\n          \"magna_b\": \"<integer>\",\n          \"voluptate7\": \"<integer>\"\n        },\n        \"changes\": [\n          {\n            \"changeId\": -66101571,\n            \"newContentTemplate\": {},\n            \"originalPath\": \"reprehenderit nulla ipsum\",\n            \"changeType\": \"lock\",\n            \"item\": \"<string>\",\n            \"newContent\": {\n              \"content\": \"<string>\",\n              \"contentType\": \"base64Encoded\"\n            },\n            \"sourceServerItem\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"changeId\": -19832785,\n            \"newContentTemplate\": {},\n            \"originalPath\": \"minim nulla\",\n            \"changeType\": \"encoding\",\n            \"item\": \"<string>\",\n            \"newContent\": {\n              \"content\": \"<string>\",\n              \"contentType\": \"rawText\"\n            },\n            \"sourceServerItem\": \"<string>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"commentTruncated\": \"<boolean>\",\n        \"commitId\": \"<string>\",\n        \"committer\": {\n          \"date\": \"<dateTime>\",\n          \"email\": \"<string>\",\n          \"imageUrl\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"commitTooManyChanges\": \"<boolean>\",\n        \"parents\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"push\": {\n          \"_links\": {\n            \"links\": {\n              \"Excepteur_6\": {},\n              \"ametb\": {}\n            }\n          },\n          \"date\": \"<dateTime>\",\n          \"pushedBy\": {\n            \"directoryAlias\": \"fugiat sed\",\n            \"id\": \"reprehenderit id ad consequat\",\n            \"imageUrl\": \"officia incididunt occaecat cupidatat\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"eu sint labore id\",\n            \"uniqueName\": \"in aute exercitation\",\n            \"_links\": {\n              \"links\": {\n                \"utcc\": {},\n                \"officia_1\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"pushId\": \"<integer>\",\n          \"url\": \"<string>\"\n        },\n        \"remoteUrl\": \"<string>\",\n        \"statuses\": [\n          {\n            \"_links\": {\n              \"links\": {\n                \"ex_3\": {},\n                \"ex_33d\": {}\n              }\n            },\n            \"context\": {\n              \"genre\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"createdBy\": {\n              \"directoryAlias\": \"aliqua esse dolor minim\",\n              \"id\": \"cupid\",\n              \"imageUrl\": \"Lorem commodo\",\n              \"inactive\": true,\n              \"isAadIdentity\": false,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"laboris sint in\",\n              \"uniqueName\": \"nulla ipsum\",\n              \"_links\": {\n                \"links\": {\n                  \"dolor_56\": {},\n                  \"eu9a_\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"creationDate\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"state\": \"notSet\",\n            \"targetUrl\": \"<string>\",\n            \"updatedDate\": \"<dateTime>\"\n          },\n          {\n            \"_links\": {\n              \"links\": {\n                \"dolore_b9\": {},\n                \"aliquip2\": {}\n              }\n            },\n            \"context\": {\n              \"genre\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"createdBy\": {\n              \"directoryAlias\": \"sunt nisi cupidatat\",\n              \"id\": \"reprehenderit\",\n              \"imageUrl\": \"dolor et \",\n              \"inactive\": true,\n              \"isAadIdentity\": true,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"quis est sed adipisicing\",\n              \"uniqueName\": \"consequat enim minim Excepteur\",\n              \"_links\": {\n                \"links\": {\n                  \"nisibf\": {},\n                  \"culpa462\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"creationDate\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"state\": \"failed\",\n            \"targetUrl\": \"<string>\",\n            \"updatedDate\": \"<dateTime>\"\n          }\n        ],\n        \"url\": \"<string>\",\n        \"workItems\": [\n          {\n            \"id\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"url\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"pullRequestId\": \"<integer>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Starts the operation to create a new branch which reverts changes introduced by either a specific commit or commits that are associated to a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Reverts Get Revert For Ref Name",
              "filename": "Reverts Get Revert For Ref Name.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/reverts?refName=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "refName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve information about a revert operation for a specific branch.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Reverts Get Revert",
              "filename": "Reverts Get Revert.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/reverts/{{revertId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "revertId",
                    "value": "{{revertId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve information about a revert operation by revert Id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Repositories",
          "filename": "Repositories",
          "root": {
            "docs": "Controller to handle all REST calls against Git Repositories",
            "meta": {
              "name": "Repositories"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Repositories Create",
              "filename": "Repositories Create.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories?sourceRef=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "sourceRef",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"name\": \"<string>\",\n  \"parentRepository\": {\n    \"collection\": {\n      \"avatarUrl\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"id\": \"<uuid>\",\n    \"isFork\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"wellFormed\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"sshUrl\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"project\": {\n    \"abbreviation\": \"<string>\",\n    \"defaultTeamImageUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"lastUpdateTime\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"revision\": \"<long>\",\n    \"state\": \"all\",\n    \"url\": \"<string>\",\n    \"visibility\": \"public\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a git repository in a team project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Repositories Delete Repository From Recycle Bin",
              "filename": "Repositories Delete Repository From Recycle Bin.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/recycleBin/repositories/{{repositoryId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Destroy (hard delete) a soft-deleted Git repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Repositories Delete",
              "filename": "Repositories Delete.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a git repository",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Repositories Get Deleted Repositories",
              "filename": "Repositories Get Deleted Repositories.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/deletedrepositories?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve deleted git repositories.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Repositories Get Recycle Bin Repositories",
              "filename": "Repositories Get Recycle Bin Repositories.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/recycleBin/repositories?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve soft-deleted git repositories from the recycle bin.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Repositories Get Repository",
              "filename": "Repositories Get Repository.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a git repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Repositories List",
              "filename": "Repositories List.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories?includeLinks=false&includeAllUrls=false&includeHidden=true&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeLinks",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeAllUrls",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeHidden",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Value array should not be empty\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.value).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Value array should not be empty\");\r\n});\r\n\r\n\r\ntest(\"Count field is present and has a value of 0\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.have.property('count', 0);\r\n});\r\n\r\n\r\ntest(\"IsDisabled and IsInMaintenance are boolean values\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.value).to.be.an('array');\r\n    responseData.value.forEach(function(repository) {\r\n        expect(repository.isDisabled).to.be.a('boolean');\r\n        expect(repository.isInMaintenance).to.be.a('boolean');\r\n    });\r\n});\r\n\r\n",
                "docs": "Retrieve git repositories.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Repositories Restore Repository From Recycle Bin",
              "filename": "Repositories Restore Repository From Recycle Bin.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/recycleBin/repositories/{{repositoryId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deleted\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Recover a soft-deleted Git repository. Recently deleted repositories go into a soft-delete state for a period of time before they are hard deleted and become unrecoverable.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Repositories Update",
              "filename": "Repositories Update.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"dolore_\": {},\n      \"ex_b4\": {}\n    }\n  },\n  \"defaultBranch\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"isDisabled\": \"<boolean>\",\n  \"isFork\": \"<boolean>\",\n  \"isInMaintenance\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"parentRepository\": {\n    \"collection\": {\n      \"avatarUrl\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"id\": \"<uuid>\",\n    \"isFork\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"unchanged\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"sshUrl\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"project\": {\n    \"abbreviation\": \"<string>\",\n    \"defaultTeamImageUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"lastUpdateTime\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"revision\": \"<long>\",\n    \"state\": \"all\",\n    \"url\": \"<string>\",\n    \"visibility\": \"private\"\n  },\n  \"remoteUrl\": \"<string>\",\n  \"size\": \"<long>\",\n  \"sshUrl\": \"<string>\",\n  \"url\": \"<string>\",\n  \"validRemoteUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"webUrl\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates the Git repository with either a new repo name or a new default branch.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Stats",
          "filename": "Stats",
          "root": {
            "docs": "Branch statistics indicate how far behind and ahead a branch is from the default branch. \nBranch A is \"ahead\" of branch B if branch A contains commits not in branch B's history.",
            "meta": {
              "name": "Stats"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Stats List",
              "filename": "Stats List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/stats/branches?baseVersionDescriptor.versionType=commit&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "baseVersionDescriptor.versionType",
                    "value": "commit",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "baseVersionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "baseVersionDescriptor.versionOptions",
                    "value": "previousChange",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve statistics about all branches within a repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Refs",
          "filename": "Refs",
          "root": {
            "docs": "Controller to handle REST requests for git refs",
            "meta": {
              "name": "Refs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Refs List",
              "filename": "Refs List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/refs?filter=<string>&includeLinks=<boolean>&includeStatuses=<boolean>&includeMyBranches=<boolean>&latestStatusesOnly=<boolean>&peelTags=<boolean>&filterContains=<string>&$top=<integer>&continuationToken=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "filter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeStatuses",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeMyBranches",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "latestStatusesOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "peelTags",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "filterContains",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queries the provided repository for its refs and returns them.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Refs Update Ref",
              "filename": "Refs Update Ref.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/refs?filter=<string>&projectId=<string>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "filter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "projectId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"isLocked\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"newObjectId\": \"<string>\",\n  \"oldObjectId\": \"<string>\",\n  \"repositoryId\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Lock or Unlock a branch.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Refs Update Refs",
              "filename": "Refs Update Refs.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/refs?projectId=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "projectId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"isLocked\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"newObjectId\": \"<string>\",\n    \"oldObjectId\": \"<string>\",\n    \"repositoryId\": \"<uuid>\"\n  },\n  {\n    \"isLocked\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"newObjectId\": \"<string>\",\n    \"oldObjectId\": \"<string>\",\n    \"repositoryId\": \"<uuid>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creating, updating, or deleting refs(branches).\n\nUpdating a ref means making it point at a different commit than it used to. You must specify both the old and new commit to avoid race conditions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pull Request Commits",
          "filename": "Pull Request Commits",
          "root": {
            "docs": "Provides REST API methods for Git commits associated with a pull request.",
            "meta": {
              "name": "Pull Request Commits"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pull Request Commits Get Pull Request Commits",
              "filename": "Pull Request Commits Get Pull Request Commits.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/commits?$top=100&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "100",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the commits for the specified pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pull Request Commits Get Pull Request Iteration Commits",
              "filename": "Pull Request Commits Get Pull Request Iteration Commits.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/pullRequests/{{pullRequestId}}/iterations/{{iterationId}}/commits?top=<integer>&skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pullRequestId",
                    "value": "{{pullRequestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the commits for the specified iteration of a pull request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Suggestions",
          "filename": "Suggestions",
          "root": {
            "docs": "API for retrieving git pull request suggestions.",
            "meta": {
              "name": "Suggestions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Suggestions List",
              "filename": "Suggestions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/suggestions?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a pull request suggestion for a particular repository or team project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Statuses",
          "filename": "Statuses",
          "root": {
            "docs": "This API provides a way to manipulate statuses associated with the Git commit.\nCommit status allows you to mark commits with status information from other systems.\nFor instance, it's used in VSTS to surface the state of the build associated with the status in the web UI.",
            "meta": {
              "name": "Statuses"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Statuses Create",
              "filename": "Statuses Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/commits/{{commitId}}/statuses?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commitId",
                    "value": "{{commitId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"culpa4b\": {},\n      \"deseruntd5\": {}\n    }\n  },\n  \"context\": {\n    \"genre\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"createdBy\": {\n    \"directoryAlias\": \"dolor ea consequat\",\n    \"id\": \"consequat aliqua fugiat\",\n    \"imageUrl\": \"ipsum ad officia in\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"sint in nulla laborum exercitation\",\n    \"uniqueName\": \"sit non\",\n    \"_links\": {\n      \"links\": {\n        \"proident_6b5\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"creationDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"state\": \"succeeded\",\n  \"targetUrl\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create Git commit status.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Statuses List",
              "filename": "Statuses List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/commits/{{commitId}}/statuses?top=<integer>&skip=<integer>&latestOnly=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "latestOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commitId",
                    "value": "{{commitId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get statuses associated with the Git commit.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Trees",
          "filename": "Trees",
          "root": {
            "meta": {
              "name": "Trees"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Trees Get",
              "filename": "Trees Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/trees/{{sha1}}?projectId=<string>&recursive=<boolean>&fileName={{fileName}}&$format=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "projectId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "recursive",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$format",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "sha1",
                    "value": "{{sha1}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.\n\nRepositories have both a name and an identifier. Identifiers are globally unique, but several projects may contain a repository of the same name. You don't need to include the project if you specify a repository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Cherry Picks",
          "filename": "Cherry Picks",
          "root": {
            "docs": "This API provides a way to cherry pick into a new branch either a specific commit or commits that are associated to a\npull request.",
            "meta": {
              "name": "Cherry Picks"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Cherry Picks Create",
              "filename": "Cherry Picks Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/cherryPicks?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"generatedRefName\": \"<string>\",\n  \"ontoRefName\": \"<string>\",\n  \"repository\": {\n    \"_links\": {\n      \"links\": {\n        \"est3f\": {}\n      }\n    },\n    \"defaultBranch\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isDisabled\": \"<boolean>\",\n    \"isFork\": \"<boolean>\",\n    \"isInMaintenance\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"parentRepository\": {\n      \"collection\": {\n        \"avatarUrl\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"isFork\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"project\": {\n        \"abbreviation\": \"<string>\",\n        \"defaultTeamImageUrl\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"lastUpdateTime\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"revision\": \"<long>\",\n        \"state\": \"deleting\",\n        \"url\": \"<string>\",\n        \"visibility\": \"private\"\n      },\n      \"remoteUrl\": \"<string>\",\n      \"sshUrl\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"project\": {\n      \"abbreviation\": \"<string>\",\n      \"defaultTeamImageUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastUpdateTime\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"revision\": \"<long>\",\n      \"state\": \"all\",\n      \"url\": \"<string>\",\n      \"visibility\": \"private\"\n    },\n    \"remoteUrl\": \"<string>\",\n    \"size\": \"<long>\",\n    \"sshUrl\": \"<string>\",\n    \"url\": \"<string>\",\n    \"validRemoteUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"webUrl\": \"<string>\"\n  },\n  \"source\": {\n    \"commitList\": [\n      {\n        \"_links\": {\n          \"links\": {\n            \"in_59\": {},\n            \"mollit_4\": {}\n          }\n        },\n        \"author\": {\n          \"date\": \"<dateTime>\",\n          \"email\": \"<string>\",\n          \"imageUrl\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"changeCounts\": {\n          \"velit_50e\": \"<integer>\",\n          \"elit8\": \"<integer>\",\n          \"nondd5\": \"<integer>\"\n        },\n        \"changes\": [\n          {\n            \"changeId\": -81277615,\n            \"newContentTemplate\": {},\n            \"originalPath\": \"velit sit fugiat\",\n            \"changeType\": \"add\",\n            \"item\": \"<string>\",\n            \"newContent\": {\n              \"content\": \"<string>\",\n              \"contentType\": \"base64Encoded\"\n            },\n            \"sourceServerItem\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"changeId\": 39553535,\n            \"newContentTemplate\": {},\n            \"originalPath\": \"nisi sint minim do\",\n            \"changeType\": \"targetRename\",\n            \"item\": \"<string>\",\n            \"newContent\": {\n              \"content\": \"<string>\",\n              \"contentType\": \"rawText\"\n            },\n            \"sourceServerItem\": \"<string>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"commentTruncated\": \"<boolean>\",\n        \"commitId\": \"<string>\",\n        \"committer\": {\n          \"date\": \"<dateTime>\",\n          \"email\": \"<string>\",\n          \"imageUrl\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"commitTooManyChanges\": \"<boolean>\",\n        \"parents\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"push\": {\n          \"_links\": {\n            \"links\": {\n              \"id_a79\": {},\n              \"laborisfb8\": {}\n            }\n          },\n          \"date\": \"<dateTime>\",\n          \"pushedBy\": {\n            \"directoryAlias\": \"exercitation cillum sed\",\n            \"id\": \"nostrud\",\n            \"imageUrl\": \"dolor consequat sed\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"pariatur ullamco cillum\",\n            \"uniqueName\": \"dolor culpa\",\n            \"_links\": {\n              \"links\": {\n                \"nostrud_86\": {},\n                \"mollit_6_\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"pushId\": \"<integer>\",\n          \"url\": \"<string>\"\n        },\n        \"remoteUrl\": \"<string>\",\n        \"statuses\": [\n          {\n            \"_links\": {\n              \"links\": {\n                \"minimd\": {}\n              }\n            },\n            \"context\": {\n              \"genre\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"createdBy\": {\n              \"directoryAlias\": \"elit\",\n              \"id\": \"nulla proident sed\",\n              \"imageUrl\": \"dolor\",\n              \"inactive\": true,\n              \"isAadIdentity\": true,\n              \"isContainer\": true,\n              \"isDeletedInOrigin\": false,\n              \"profileUrl\": \"in ut ad\",\n              \"uniqueName\": \"veniam Lorem\",\n              \"_links\": {\n                \"links\": {\n                  \"ad0\": {},\n                  \"eiusmod853\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"creationDate\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"state\": \"pending\",\n            \"targetUrl\": \"<string>\",\n            \"updatedDate\": \"<dateTime>\"\n          },\n          {\n            \"_links\": {\n              \"links\": {\n                \"tempor1\": {}\n              }\n            },\n            \"context\": {\n              \"genre\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"createdBy\": {\n              \"directoryAlias\": \"adipisicing sed consectetur irure\",\n              \"id\": \"eiusmod ipsum anim sit\",\n              \"imageUrl\": \"Ut ex officia laborum\",\n              \"inactive\": false,\n              \"isAadIdentity\": false,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": false,\n              \"profileUrl\": \"irure\",\n              \"uniqueName\": \"cillum dolor anim do\",\n              \"_links\": {\n                \"links\": {\n                  \"exercitationcc9\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"creationDate\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"state\": \"notApplicable\",\n            \"targetUrl\": \"<string>\",\n            \"updatedDate\": \"<dateTime>\"\n          }\n        ],\n        \"url\": \"<string>\",\n        \"workItems\": [\n          {\n            \"id\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"url\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"_links\": {\n          \"links\": {\n            \"anim8bb\": {},\n            \"incididunt_09\": {}\n          }\n        },\n        \"author\": {\n          \"date\": \"<dateTime>\",\n          \"email\": \"<string>\",\n          \"imageUrl\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"changeCounts\": {\n          \"ipsum_0c\": \"<integer>\",\n          \"magna_b\": \"<integer>\",\n          \"voluptate7\": \"<integer>\"\n        },\n        \"changes\": [\n          {\n            \"changeId\": -66101571,\n            \"newContentTemplate\": {},\n            \"originalPath\": \"reprehenderit nulla ipsum\",\n            \"changeType\": \"lock\",\n            \"item\": \"<string>\",\n            \"newContent\": {\n              \"content\": \"<string>\",\n              \"contentType\": \"base64Encoded\"\n            },\n            \"sourceServerItem\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"changeId\": -19832785,\n            \"newContentTemplate\": {},\n            \"originalPath\": \"minim nulla\",\n            \"changeType\": \"encoding\",\n            \"item\": \"<string>\",\n            \"newContent\": {\n              \"content\": \"<string>\",\n              \"contentType\": \"rawText\"\n            },\n            \"sourceServerItem\": \"<string>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"commentTruncated\": \"<boolean>\",\n        \"commitId\": \"<string>\",\n        \"committer\": {\n          \"date\": \"<dateTime>\",\n          \"email\": \"<string>\",\n          \"imageUrl\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"commitTooManyChanges\": \"<boolean>\",\n        \"parents\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"push\": {\n          \"_links\": {\n            \"links\": {\n              \"Excepteur_6\": {},\n              \"ametb\": {}\n            }\n          },\n          \"date\": \"<dateTime>\",\n          \"pushedBy\": {\n            \"directoryAlias\": \"fugiat sed\",\n            \"id\": \"reprehenderit id ad consequat\",\n            \"imageUrl\": \"officia incididunt occaecat cupidatat\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"eu sint labore id\",\n            \"uniqueName\": \"in aute exercitation\",\n            \"_links\": {\n              \"links\": {\n                \"utcc\": {},\n                \"officia_1\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"pushId\": \"<integer>\",\n          \"url\": \"<string>\"\n        },\n        \"remoteUrl\": \"<string>\",\n        \"statuses\": [\n          {\n            \"_links\": {\n              \"links\": {\n                \"ex_3\": {},\n                \"ex_33d\": {}\n              }\n            },\n            \"context\": {\n              \"genre\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"createdBy\": {\n              \"directoryAlias\": \"aliqua esse dolor minim\",\n              \"id\": \"cupid\",\n              \"imageUrl\": \"Lorem commodo\",\n              \"inactive\": true,\n              \"isAadIdentity\": false,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"laboris sint in\",\n              \"uniqueName\": \"nulla ipsum\",\n              \"_links\": {\n                \"links\": {\n                  \"dolor_56\": {},\n                  \"eu9a_\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"creationDate\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"state\": \"notSet\",\n            \"targetUrl\": \"<string>\",\n            \"updatedDate\": \"<dateTime>\"\n          },\n          {\n            \"_links\": {\n              \"links\": {\n                \"dolore_b9\": {},\n                \"aliquip2\": {}\n              }\n            },\n            \"context\": {\n              \"genre\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"createdBy\": {\n              \"directoryAlias\": \"sunt nisi cupidatat\",\n              \"id\": \"reprehenderit\",\n              \"imageUrl\": \"dolor et \",\n              \"inactive\": true,\n              \"isAadIdentity\": true,\n              \"isContainer\": false,\n              \"isDeletedInOrigin\": true,\n              \"profileUrl\": \"quis est sed adipisicing\",\n              \"uniqueName\": \"consequat enim minim Excepteur\",\n              \"_links\": {\n                \"links\": {\n                  \"nisibf\": {},\n                  \"culpa462\": {}\n                }\n              },\n              \"descriptor\": \"<string>\",\n              \"displayName\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            \"creationDate\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"state\": \"failed\",\n            \"targetUrl\": \"<string>\",\n            \"updatedDate\": \"<dateTime>\"\n          }\n        ],\n        \"url\": \"<string>\",\n        \"workItems\": [\n          {\n            \"id\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"url\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"pullRequestId\": \"<integer>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Cherry pick a specific commit or commits that are associated to a pull request into a new branch.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Cherry Picks Get Cherry Pick For Ref Name",
              "filename": "Cherry Picks Get Cherry Pick For Ref Name.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/cherryPicks?refName=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "refName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve information about a cherry pick operation for a specific branch. This operation is expensive due to the underlying object structure, so this API only looks at the 1000 most recent cherry pick operations.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Cherry Picks Get Cherry Pick",
              "filename": "Cherry Picks Get Cherry Pick.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/git/repositories/{{repositoryId}}/cherryPicks/{{cherryPickId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repositoryId",
                    "value": "{{repositoryId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "cherryPickId",
                    "value": "{{cherryPickId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve information about a cherry pick operation by cherry pick Id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Identity",
      "filename": "Identity",
      "root": {
        "docs": "[Identities REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/ims/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Identity"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Identities",
          "filename": "Identities",
          "root": {
            "meta": {
              "name": "Identities"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Identities Read Identities",
              "filename": "Identities Read Identities.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/identities?descriptors=<string>&identityIds=<string>&subjectDescriptors=<string>&searchFilter=<string>&filterValue=<string>&queryMembership=expanded&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "descriptors",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "identityIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptors",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "filterValue",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queryMembership",
                    "value": "expanded",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Resolve legacy identity information for use with older APIs such as the Security APIs",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Member Entitlement Mgmt",
      "filename": "Member Entitlement Mgmt",
      "root": {
        "docs": "[Member Entitlement Management REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/memberentitlementmanagement/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Member Entitlement Mgmt"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Group Entitlements",
          "filename": "Group Entitlements",
          "root": {
            "docs": "APIs to manage Group Licensing Rules.",
            "meta": {
              "name": "Group Entitlements"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Group Entitlements Add",
              "filename": "Group Entitlements Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/groupentitlements?ruleOption=testApplyGroupRule&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "ruleOption",
                    "value": "testApplyGroupRule",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"group\": {\n    \"description\": \"sunt dolor mollit minim\",\n    \"domain\": \"et\",\n    \"mailAddress\": \"amet\",\n    \"principalName\": \"Ut labore nostrud ad\",\n    \"legacyDescriptor\": \"aliquip ipsum veniam in\",\n    \"origin\": \"pariatur ullamco tempor Duis\",\n    \"originId\": \"amet quis ipsum\",\n    \"subjectKind\": \"tempor ut\",\n    \"_links\": {\n      \"links\": {\n        \"proident1d6\": {},\n        \"adipisicing_f\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"lastExecuted\": \"<dateTime>\",\n  \"licenseRule\": {\n    \"accountLicenseType\": \"professional\",\n    \"assignmentSource\": \"none\",\n    \"licenseDisplayName\": \"<string>\",\n    \"licensingSource\": \"none\",\n    \"msdnLicenseType\": \"platforms\",\n    \"status\": \"none\",\n    \"statusMessage\": \"<string>\"\n  },\n  \"members\": [\n    {\n      \"user\": {},\n      \"accessLevel\": {\n        \"accountLicenseType\": \"earlyAdopter\",\n        \"assignmentSource\": \"groupRule\",\n        \"licenseDisplayName\": \"<string>\",\n        \"licensingSource\": \"auto\",\n        \"msdnLicenseType\": \"enterprise\",\n        \"status\": \"disabled\",\n        \"statusMessage\": \"<string>\"\n      },\n      \"dateCreated\": \"<dateTime>\",\n      \"groupAssignments\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/GroupEntitlement detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/GroupEntitlement detected>\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"lastAccessedDate\": \"<dateTime>\",\n      \"projectEntitlements\": [\n        {\n          \"assignmentSource\": \"groupRule\",\n          \"group\": {\n            \"displayName\": \"<string>\",\n            \"groupType\": \"projectReader\"\n          },\n          \"projectPermissionInherited\": \"notSet\",\n          \"projectRef\": {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          \"teamRefs\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"assignmentSource\": \"groupRule\",\n          \"group\": {\n            \"displayName\": \"<string>\",\n            \"groupType\": \"projectReader\"\n          },\n          \"projectPermissionInherited\": \"inherited\",\n          \"projectRef\": {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          \"teamRefs\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"user\": {},\n      \"accessLevel\": {\n        \"accountLicenseType\": \"stakeholder\",\n        \"assignmentSource\": \"unknown\",\n        \"licenseDisplayName\": \"<string>\",\n        \"licensingSource\": \"trial\",\n        \"msdnLicenseType\": \"premium\",\n        \"status\": \"pendingDisabled\",\n        \"statusMessage\": \"<string>\"\n      },\n      \"dateCreated\": \"<dateTime>\",\n      \"groupAssignments\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/GroupEntitlement detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/GroupEntitlement detected>\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"lastAccessedDate\": \"<dateTime>\",\n      \"projectEntitlements\": [\n        {\n          \"assignmentSource\": \"groupRule\",\n          \"group\": {\n            \"displayName\": \"<string>\",\n            \"groupType\": \"projectReader\"\n          },\n          \"projectPermissionInherited\": \"notSet\",\n          \"projectRef\": {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          \"teamRefs\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"assignmentSource\": \"unknown\",\n          \"group\": {\n            \"displayName\": \"<string>\",\n            \"groupType\": \"custom\"\n          },\n          \"projectPermissionInherited\": \"notInherited\",\n          \"projectRef\": {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          \"teamRefs\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"projectEntitlements\": [\n    {\n      \"assignmentSource\": \"groupRule\",\n      \"group\": {\n        \"displayName\": \"<string>\",\n        \"groupType\": \"projectStakeholder\"\n      },\n      \"projectPermissionInherited\": \"notInherited\",\n      \"projectRef\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      \"teamRefs\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"assignmentSource\": \"unknown\",\n      \"group\": {\n        \"displayName\": \"<string>\",\n        \"groupType\": \"projectContributor\"\n      },\n      \"projectPermissionInherited\": \"notInherited\",\n      \"projectRef\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      \"teamRefs\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"status\": \"applied\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a group entitlement with license rule, extension rule.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Group Entitlements Delete",
              "filename": "Group Entitlements Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/groupentitlements/{{groupId}}?ruleOption=testApplyGroupRule&removeGroupMembership=<boolean>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "ruleOption",
                    "value": "testApplyGroupRule",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "removeGroupMembership",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a group entitlement.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Group Entitlements Get",
              "filename": "Group Entitlements Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/groupentitlements/{{groupId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a group entitlement.\n\nIf the group entitlement does not exist, returns null.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Group Entitlements List",
              "filename": "Group Entitlements List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/groupentitlements?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the group entitlements for an account.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Group Entitlements Update",
              "filename": "Group Entitlements Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/groupentitlements/{{groupId}}?ruleOption=testApplyGroupRule&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "ruleOption",
                    "value": "testApplyGroupRule",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update entitlements (License Rule, Extensions Rule, Project memberships etc.) for a group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Member Entitlements",
          "filename": "Member Entitlements",
          "root": {
            "meta": {
              "name": "Member Entitlements"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Member Entitlements Search Member Entitlements",
              "filename": "Member Entitlements Search Member Entitlements.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/memberentitlements?continuationToken=<string>&select=all&$filter=<string>&$orderBy=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "select",
                    "value": "all",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$filter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$orderBy",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Service Principal Entitlements",
          "filename": "Service Principal Entitlements",
          "root": {
            "docs": "APIs to manage Service principal Entitlements.",
            "meta": {
              "name": "Service Principal Entitlements"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Service Principal Entitlements Add",
              "filename": "Service Principal Entitlements Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceprincipalentitlements?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"servicePrincipal\": {},\n  \"accessLevel\": {\n    \"accountLicenseType\": \"earlyAdopter\",\n    \"assignmentSource\": \"groupRule\",\n    \"licenseDisplayName\": \"<string>\",\n    \"licensingSource\": \"msdn\",\n    \"msdnLicenseType\": \"none\",\n    \"status\": \"active\",\n    \"statusMessage\": \"<string>\"\n  },\n  \"dateCreated\": \"<dateTime>\",\n  \"groupAssignments\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/GroupEntitlement detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/GroupEntitlement detected>\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"lastAccessedDate\": \"<dateTime>\",\n  \"projectEntitlements\": [\n    {\n      \"assignmentSource\": \"none\",\n      \"group\": {\n        \"displayName\": \"<string>\",\n        \"groupType\": \"custom\"\n      },\n      \"projectPermissionInherited\": \"inherited\",\n      \"projectRef\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      \"teamRefs\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"assignmentSource\": \"groupRule\",\n      \"group\": {\n        \"displayName\": \"<string>\",\n        \"groupType\": \"projectStakeholder\"\n      },\n      \"projectPermissionInherited\": \"inherited\",\n      \"projectRef\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      \"teamRefs\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a service principal, assign license and extensions and make them a member of a project group in an account.\n\nNOTE: If you are working with AAD app registration, you can find service principal of your app\nin enterprise applications, and make sure to use service principal's object id as originId parameter\nin the request body",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Service Principal Entitlements Delete",
              "filename": "Service Principal Entitlements Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceprincipalentitlements/{{servicePrincipalId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "servicePrincipalId",
                    "value": "{{servicePrincipalId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a service principal from the account.\n\nThe delete operation includes unassigning Extensions and Licenses and removing the service principal from all project memberships.\nThe service principal would continue to have access to the account if it is member of an AAD group, that is added directly to the account.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Service Principal Entitlements Get",
              "filename": "Service Principal Entitlements Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceprincipalentitlements/{{servicePrincipalId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "servicePrincipalId",
                    "value": "{{servicePrincipalId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get Service principal Entitlement for a service principal.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Service Principal Entitlements Update Service Principal Entitlement",
              "filename": "Service Principal Entitlements Update Service Principal Entitlement.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceprincipalentitlements/{{servicePrincipalId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "servicePrincipalId",
                    "value": "{{servicePrincipalId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Edit the entitlements (License, Extensions, Projects, Teams etc) for a service principal.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Service Principal Entitlements Update Service Principal Entitlements",
              "filename": "Service Principal Entitlements Update Service Principal Entitlements.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceprincipalentitlements?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Edit the entitlements (License, Extensions, Projects, Teams etc) for one or more service principals.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "User Entitlement Summary",
          "filename": "User Entitlement Summary",
          "root": {
            "docs": "APIs to get User Entitlements Summary.",
            "meta": {
              "name": "User Entitlement Summary"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "User Entitlement Summary Get",
              "filename": "User Entitlement Summary Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/userentitlementsummary?select=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "select",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get summary of Licenses, Extension, Projects, Groups and their assignments in the collection.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "User Entitlements",
          "filename": "User Entitlements",
          "root": {
            "docs": "APIs to manage User Entitlements.",
            "meta": {
              "name": "User Entitlements"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "User Entitlements Add",
              "filename": "User Entitlements Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/userentitlements?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"user\": {},\n  \"accessLevel\": {\n    \"accountLicenseType\": \"none\",\n    \"assignmentSource\": \"none\",\n    \"licenseDisplayName\": \"<string>\",\n    \"licensingSource\": \"auto\",\n    \"msdnLicenseType\": \"professional\",\n    \"status\": \"pendingDisabled\",\n    \"statusMessage\": \"<string>\"\n  },\n  \"dateCreated\": \"<dateTime>\",\n  \"groupAssignments\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/GroupEntitlement detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/GroupEntitlement detected>\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"lastAccessedDate\": \"<dateTime>\",\n  \"projectEntitlements\": [\n    {\n      \"assignmentSource\": \"groupRule\",\n      \"group\": {\n        \"displayName\": \"<string>\",\n        \"groupType\": \"projectReader\"\n      },\n      \"projectPermissionInherited\": \"notSet\",\n      \"projectRef\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      \"teamRefs\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"assignmentSource\": \"groupRule\",\n      \"group\": {\n        \"displayName\": \"<string>\",\n        \"groupType\": \"projectStakeholder\"\n      },\n      \"projectPermissionInherited\": \"notInherited\",\n      \"projectRef\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      \"teamRefs\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a user, assign license and extensions and make them a member of a project group in an account.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "User Entitlements Delete",
              "filename": "User Entitlements Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/userentitlements/{{userId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "userId",
                    "value": "{{userId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a user from the account.\n\nThe delete operation includes unassigning Extensions and Licenses and removing the user from all project memberships.\nThe user would continue to have access to the account if she is member of an AAD group, that is added directly to the account.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "User Entitlements Get",
              "filename": "User Entitlements Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/userentitlements/{{userId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "userId",
                    "value": "{{userId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get User Entitlement for a user.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "User Entitlements Search User Entitlements",
              "filename": "User Entitlements Search User Entitlements.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/userentitlements?continuationToken=<string>&select=all&$filter=<string>&$orderBy=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "select",
                    "value": "all",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$filter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$orderBy",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a paged set of user entitlements matching the filter and sort criteria built with properties that match the select input.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "User Entitlements Update User Entitlement",
              "filename": "User Entitlements Update User Entitlement.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/userentitlements/{{userId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "userId",
                    "value": "{{userId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Edit the entitlements (License, Extensions, Projects, Teams etc) for a user.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "User Entitlements Update User Entitlements",
              "filename": "User Entitlements Update User Entitlements.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/userentitlements?doNotSendInviteForNewUsers=<boolean>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "doNotSendInviteForNewUsers",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Edit the entitlements (License, Extensions, Projects, Teams etc) for one or more users.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Members",
          "filename": "Members",
          "root": {
            "docs": "APIs to Manage memberships for the Group Entitlements",
            "meta": {
              "name": "Members"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Members Add",
              "filename": "Members Add.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/GroupEntitlements/{{groupId}}/members/{{memberId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "memberId",
                    "value": "{{memberId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a member to a Group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Members Get",
              "filename": "Members Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/GroupEntitlements/{{groupId}}/members?maxResults=<integer>&pagingToken=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "maxResults",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "pagingToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get direct members of a Group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Members Remove Member From Group",
              "filename": "Members Remove Member From Group.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/GroupEntitlements/{{groupId}}/members/{{memberId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "groupId",
                    "value": "{{groupId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "memberId",
                    "value": "{{memberId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Remove a member from a Group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Notification",
      "filename": "Notification",
      "root": {
        "docs": "[Notifications REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/notification/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Notification"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Diagnostic Logs",
          "filename": "Diagnostic Logs",
          "root": {
            "meta": {
              "name": "Diagnostic Logs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Diagnostic Logs List",
              "filename": "Diagnostic Logs List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/diagnosticlogs/{{source}}/entries/{{entryId}}?startTime=<dateTime>&endTime=<dateTime>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "startTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "endTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "source",
                    "value": "{{source}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "entryId",
                    "value": "{{entryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of diagnostic logs for this service.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Event Types",
          "filename": "Event Types",
          "root": {
            "docs": "Discover notification event types, filterable fields, and related metadata.",
            "meta": {
              "name": "Event Types"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Event Types Get",
              "filename": "Event Types Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/eventtypes/{{eventType}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "eventType",
                    "value": "{{eventType}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific event type.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Event Types List",
              "filename": "Event Types List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/eventtypes?publisherId={{publisherId}}&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "publisherId",
                    "value": "{{publisherId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "List available event types for this service. Optionally filter by only event types for the specified publisher.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Diagnostics",
          "filename": "Diagnostics",
          "root": {
            "meta": {
              "name": "Diagnostics"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Diagnostics Get",
              "filename": "Diagnostics Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptions/{{subscriptionId}}/diagnostics?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "{{subscriptionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the diagnostics settings for a subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Diagnostics Update",
              "filename": "Diagnostics Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptions/{{subscriptionId}}/diagnostics?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "{{subscriptionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deliveryResults\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"deliveryTracing\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"evaluationTracing\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the diagnostics settings for a subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Settings",
          "filename": "Settings",
          "root": {
            "meta": {
              "name": "Settings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Settings Get",
              "filename": "Settings Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/settings?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Settings Update",
              "filename": "Settings Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/settings?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"defaultGroupDeliveryPreference\": \"noDelivery\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Subscriptions",
          "filename": "Subscriptions",
          "root": {
            "docs": "Manage and query notification subscriptions. A subscription defines the conditions by which a user or team should be notified when an event occurs and where notifications should be sent. A user or group can be the subscriber for a subscription.",
            "meta": {
              "name": "Subscriptions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Subscriptions Create",
              "filename": "Subscriptions Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptions?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"channel\": {\n    \"type\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"filter\": {\n    \"eventType\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"scope\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"subscriber\": {\n    \"directoryAlias\": \"adipisicing\",\n    \"id\": \"veniam dolore qui\",\n    \"imageUrl\": \"enim culpa\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"pariatur\",\n    \"uniqueName\": \"eu occaecat dolore\",\n    \"_links\": {\n      \"links\": {\n        \"esse8_\": {},\n        \"exercitation75\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Delete",
              "filename": "Subscriptions Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptions/{{subscriptionId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "{{subscriptionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Get Subscription Templates",
              "filename": "Subscriptions Get Subscription Templates.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptiontemplates?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get available subscription templates.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Get",
              "filename": "Subscriptions Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptions/{{subscriptionId}}?queryFlags=includeDeletedSubscriptions&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "queryFlags",
                    "value": "includeDeletedSubscriptions",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "{{subscriptionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a notification subscription by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions List",
              "filename": "Subscriptions List.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptions?targetId=<uuid>&ids=<string>&queryFlags=includeDeletedSubscriptions&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "targetId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "ids",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queryFlags",
                    "value": "includeDeletedSubscriptions",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of notification subscriptions, either by subscription IDs or by all subscriptions for a given user or group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Query",
              "filename": "Subscriptions Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptionquery?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"conditions\": [\n    {\n      \"filter\": {\n        \"eventType\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"flags\": \"teamSubscription\",\n      \"scope\": \"<string>\",\n      \"subscriberId\": \"<uuid>\",\n      \"subscriptionId\": \"<string>\"\n    },\n    {\n      \"filter\": {\n        \"eventType\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"flags\": \"contributedSubscription\",\n      \"scope\": \"<string>\",\n      \"subscriberId\": \"<uuid>\",\n      \"subscriptionId\": \"<string>\"\n    }\n  ],\n  \"queryFlags\": \"includeSystemSubscriptions\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Query for subscriptions. A subscription is returned if it matches one or more of the specified conditions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Update Subscription User Settings",
              "filename": "Subscriptions Update Subscription User Settings.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/Subscriptions/{{subscriptionId}}/usersettings/{{userId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "{{subscriptionId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "userId",
                    "value": "{{userId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"optedOut\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the specified user's settings for the specified subscription. This API is typically used to opt in or out of a shared subscription. User settings can only be applied to shared subscriptions, like team subscriptions or default subscriptions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Update",
              "filename": "Subscriptions Update.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscriptions/{{subscriptionId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "{{subscriptionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"adminSettings\": {\n    \"blockUserOptOut\": \"<boolean>\"\n  },\n  \"channel\": {\n    \"type\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"filter\": {\n    \"eventType\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"scope\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"status\": \"disabledMissingPermissions\",\n  \"statusMessage\": \"<string>\",\n  \"userSettings\": {\n    \"optedOut\": \"<boolean>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update an existing subscription. Depending on the type of subscription and permissions, the caller can update the description, filter settings, channel (delivery) settings and more.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Subscribers",
          "filename": "Subscribers",
          "root": {
            "meta": {
              "name": "Subscribers"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Subscribers Get",
              "filename": "Subscribers Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscribers/{{subscriberId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriberId",
                    "value": "{{subscriberId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get delivery preferences of a notifications subscriber.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscribers Update",
              "filename": "Subscribers Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/notification/subscribers/{{subscriberId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriberId",
                    "value": "{{subscriberId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deliveryPreference\": \"useDefault\",\n  \"preferredEmailAddress\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update delivery preferences of a notifications subscriber.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Operations",
      "filename": "Operations",
      "root": {
        "docs": "[Operations - REST API (Azure DevOps Operations) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/operations/operations?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Operations"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Operations",
          "filename": "Operations",
          "root": {
            "docs": "Operations provide a way to monitor the process of an async task.",
            "meta": {
              "name": "Operations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Operations Get",
              "filename": "Operations Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/operations/{{operationId}}?pluginId=<uuid>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pluginId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "operationId",
                    "value": "{{operationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets an operation from the operationId using the given pluginId.\n\nSome scenarios don’t require a pluginId. If a pluginId is not included in the call then just the operationId will be used to find an operation.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Pipelines",
      "filename": "Pipelines",
      "root": {
        "docs": "[Microsoft Learn - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/pipelines/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Pipelines"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Logs",
          "filename": "Logs",
          "root": {
            "meta": {
              "name": "Logs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Logs Get",
              "filename": "Logs Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/{{pipelineId}}/runs/{{runId}}/logs/{{logId}}?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pipelineId",
                    "value": "{{pipelineId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "logId",
                    "value": "{{logId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific log from a pipeline run",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Logs List",
              "filename": "Logs List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/{{pipelineId}}/runs/{{runId}}/logs?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pipelineId",
                    "value": "{{pipelineId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of logs from a pipeline run.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Artifacts",
          "filename": "Artifacts",
          "root": {
            "meta": {
              "name": "Artifacts"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Artifacts Get",
              "filename": "Artifacts Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/{{pipelineId}}/runs/{{runId}}/artifacts?artifactName=<string>&$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "artifactName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pipelineId",
                    "value": "{{pipelineId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific artifact from a pipeline run",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pipelines",
          "filename": "Pipelines",
          "root": {
            "meta": {
              "name": "Pipelines"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pipelines Create",
              "filename": "Pipelines Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"configuration\": {\n    \"type\": \"yaml\"\n  },\n  \"folder\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a pipeline.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pipelines Get",
              "filename": "Pipelines Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/{{pipelineId}}?pipelineVersion=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pipelineVersion",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pipelineId",
                    "value": "{{pipelineId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a pipeline, optionally at the specified version",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pipelines List",
              "filename": "Pipelines List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "orderBy",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 200\", function () {\n  expect(res.getStatus()).to.equal(200);\n});\n\n\ntest(\"Content type is application/json\", function () {\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\n});\n\n\ntest(\"Count field in the response must exist and be a number\", function () {\n  const responseData = res.getBody();\n  \n  expect(responseData).to.be.an('object');\n  expect(responseData.count).to.exist.and.to.be.a('number');\n});\n\n",
                "docs": "Get a list of pipelines.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Preview",
          "filename": "Preview",
          "root": {
            "meta": {
              "name": "Preview"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Preview Preview",
              "filename": "Preview Preview.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/{{pipelineId}}/preview?pipelineVersion=<integer>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pipelineVersion",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pipelineId",
                    "value": "{{pipelineId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"previewRun\": \"<boolean>\",\n  \"resources\": {\n    \"builds\": {\n      \"Excepteur_a_d\": {\n        \"version\": \"<string>\"\n      },\n      \"aliqua56d\": {\n        \"version\": \"<string>\"\n      },\n      \"eu_0\": {\n        \"version\": \"<string>\"\n      }\n    },\n    \"containers\": {\n      \"consectetur_9\": {\n        \"version\": \"<string>\"\n      },\n      \"ex_63\": {\n        \"version\": \"<string>\"\n      },\n      \"nisibf0\": {\n        \"version\": \"<string>\"\n      }\n    },\n    \"packages\": {\n      \"minimf\": {\n        \"version\": \"<string>\"\n      },\n      \"dolorece\": {\n        \"version\": \"<string>\"\n      },\n      \"dof\": {\n        \"version\": \"<string>\"\n      }\n    },\n    \"pipelines\": {\n      \"tempor3ef\": {\n        \"version\": \"<string>\"\n      },\n      \"deserunt_6\": {\n        \"version\": \"<string>\"\n      }\n    },\n    \"repositories\": {\n      \"elit_d9a\": {\n        \"refName\": \"<string>\",\n        \"token\": \"<string>\",\n        \"tokenType\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"incididunt_6f\": {\n        \"refName\": \"<string>\",\n        \"token\": \"<string>\",\n        \"tokenType\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"inae9\": {\n        \"refName\": \"<string>\",\n        \"token\": \"<string>\",\n        \"tokenType\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"labore_5e\": {\n        \"refName\": \"<string>\",\n        \"token\": \"<string>\",\n        \"tokenType\": \"<string>\",\n        \"version\": \"<string>\"\n      }\n    }\n  },\n  \"stagesToSkip\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"templateParameters\": {\n    \"fugiat3\": \"<string>\",\n    \"consequat1\": \"<string>\",\n    \"nostrud38\": \"<string>\"\n  },\n  \"variables\": {\n    \"ea475\": {\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    },\n    \"consectetur_f4\": {\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  },\n  \"yamlOverride\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queues a dry run of the pipeline and returns an object containing the final yaml.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Runs",
          "filename": "Runs",
          "root": {
            "meta": {
              "name": "Runs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Runs Get",
              "filename": "Runs Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/{{pipelineId}}/runs/{{runId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pipelineId",
                    "value": "{{pipelineId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a run for a particular pipeline.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Runs List",
              "filename": "Runs List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/{{pipelineId}}/runs?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pipelineId",
                    "value": "{{pipelineId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Count field must exist and be a number\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.have.property('count').that.is.a('number');\r\n});\r\n\r\n",
                "docs": "Gets top 10000 runs for a particular pipeline.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Runs Run Pipeline",
              "filename": "Runs Run Pipeline.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/pipelines/{{pipelineId}}/runs?pipelineVersion=<integer>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pipelineVersion",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pipelineId",
                    "value": "{{pipelineId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"previewRun\": \"<boolean>\",\n  \"resources\": {\n    \"builds\": {\n      \"Excepteur_a_d\": {\n        \"version\": \"<string>\"\n      },\n      \"aliqua56d\": {\n        \"version\": \"<string>\"\n      },\n      \"eu_0\": {\n        \"version\": \"<string>\"\n      }\n    },\n    \"containers\": {\n      \"consectetur_9\": {\n        \"version\": \"<string>\"\n      },\n      \"ex_63\": {\n        \"version\": \"<string>\"\n      },\n      \"nisibf0\": {\n        \"version\": \"<string>\"\n      }\n    },\n    \"packages\": {\n      \"minimf\": {\n        \"version\": \"<string>\"\n      },\n      \"dolorece\": {\n        \"version\": \"<string>\"\n      },\n      \"dof\": {\n        \"version\": \"<string>\"\n      }\n    },\n    \"pipelines\": {\n      \"tempor3ef\": {\n        \"version\": \"<string>\"\n      },\n      \"deserunt_6\": {\n        \"version\": \"<string>\"\n      }\n    },\n    \"repositories\": {\n      \"elit_d9a\": {\n        \"refName\": \"<string>\",\n        \"token\": \"<string>\",\n        \"tokenType\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"incididunt_6f\": {\n        \"refName\": \"<string>\",\n        \"token\": \"<string>\",\n        \"tokenType\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"inae9\": {\n        \"refName\": \"<string>\",\n        \"token\": \"<string>\",\n        \"tokenType\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"labore_5e\": {\n        \"refName\": \"<string>\",\n        \"token\": \"<string>\",\n        \"tokenType\": \"<string>\",\n        \"version\": \"<string>\"\n      }\n    }\n  },\n  \"stagesToSkip\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"templateParameters\": {\n    \"fugiat3\": \"<string>\",\n    \"consequat1\": \"<string>\",\n    \"nostrud38\": \"<string>\"\n  },\n  \"variables\": {\n    \"ea475\": {\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    },\n    \"consectetur_f4\": {\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  },\n  \"yamlOverride\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Runs a pipeline.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Policy",
      "filename": "Policy",
      "root": {
        "docs": "[Code policy REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/policy/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Policy"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Evaluations",
          "filename": "Evaluations",
          "root": {
            "meta": {
              "name": "Evaluations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Evaluations Get",
              "filename": "Evaluations Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/evaluations/{{evaluationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "evaluationId",
                    "value": "{{evaluationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the present evaluation state of a policy.\n\nEach policy which applies to a pull request will have an evaluation state which is specific to that policy running\nin the context of that pull request. Each evaluation is uniquely identified via a Guid. You can find all the policy\nevaluations for a specific pull request using the List operation of this controller.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Evaluations List",
              "filename": "Evaluations List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/evaluations?artifactId={{artifactId}}&includeNotApplicable=<boolean>&$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "artifactId",
                    "value": "{{artifactId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeNotApplicable",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieves a list of all the policy evaluation statuses for a specific pull request.\n\nEvaluations are retrieved using an artifact ID which uniquely identifies the pull request.\nTo generate an artifact ID for a pull request, use this template:\n```\nvstfs:///CodeReview/CodeReviewId/{projectId}/{pullRequestId}\n```",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Evaluations Requeue Policy Evaluation",
              "filename": "Evaluations Requeue Policy Evaluation.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/evaluations/{{evaluationId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "evaluationId",
                    "value": "{{evaluationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Requeue the policy evaluation.\n\nSome policies define a \"requeue\" action which performs some policy-specific operation.\nYou can trigger this operation by updating an existing policy evaluation and setting the\nPolicyEvaluationRecord.Status field to Queued.\nAlthough any policy evaluation can be requeued, at present only build policies perform any action\nin response. Requeueing a build policy will queue a new build to run (cancelling any existing build which\nis running).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Configurations",
          "filename": "Configurations",
          "root": {
            "docs": "This API provides a way to create, list, update, and delete code policy configurations.  For more information, see \n[Improve code quality with branch policies](https://go.microsoft.com/fwlink/?linkid=859025)",
            "meta": {
              "name": "Configurations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Configurations Create",
              "filename": "Configurations Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/configurations?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {},\n  \"createdBy\": {},\n  \"createdDate\": \"2020-05-31T10:57:01.920Z\",\n  \"isBlocking\": false,\n  \"isDeleted\": true,\n  \"isEnabled\": false,\n  \"isEnterpriseManaged\": false,\n  \"settings\": {},\n  \"revision\": -6755511,\n  \"id\": \"<integer>\",\n  \"type\": {\n    \"displayName\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"url\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a policy configuration of a given policy type.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Configurations Delete",
              "filename": "Configurations Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/configurations/{{configurationId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "configurationId",
                    "value": "{{configurationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a policy configuration by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Configurations Get",
              "filename": "Configurations Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/configurations/{{configurationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "configurationId",
                    "value": "{{configurationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a policy configuration by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Configurations List",
              "filename": "Configurations List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/configurations?scope=<string>&$top=<integer>&continuationToken=<string>&policyType=<uuid>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "scope",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "policyType",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of policy configurations in a project.\n\nThe 'scope' parameter for this API should not be used, except for legacy compatability reasons. It returns specifically\nscoped policies and does not support heirarchical nesting. Instead, use the /_apis/git/policy/configurations API, which provides\nfirst class scope filtering support.\n\nThe optional `policyType` parameter can be used to filter the set of policies returned from this method.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Configurations Update",
              "filename": "Configurations Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/configurations/{{configurationId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "configurationId",
                    "value": "{{configurationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {},\n  \"createdBy\": {},\n  \"createdDate\": \"2020-05-31T10:57:01.920Z\",\n  \"isBlocking\": false,\n  \"isDeleted\": true,\n  \"isEnabled\": false,\n  \"isEnterpriseManaged\": false,\n  \"settings\": {},\n  \"revision\": -6755511,\n  \"id\": \"<integer>\",\n  \"type\": {\n    \"displayName\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"url\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a policy configuration by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Revisions",
          "filename": "Revisions",
          "root": {
            "docs": "This API provides a way to get policy configuration revisions.",
            "meta": {
              "name": "Revisions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Revisions Get",
              "filename": "Revisions Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/configurations/{{configurationId}}/revisions/{{revisionId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "configurationId",
                    "value": "{{configurationId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "revisionId",
                    "value": "{{revisionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a specific revision of a given policy by ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Revisions List",
              "filename": "Revisions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/configurations/{{configurationId}}/revisions?$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "configurationId",
                    "value": "{{configurationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve all revisions for a given policy.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Types",
          "filename": "Types",
          "root": {
            "docs": "This API provides a way to list the available policy types.",
            "meta": {
              "name": "Types"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Types Get",
              "filename": "Types Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/types/{{type}}Id?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "typeId",
                    "value": "{{typeId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a specific policy type by ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Types List",
              "filename": "Types List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/policy/types?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve all available policy types.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Profile",
      "filename": "Profile",
      "root": {
        "docs": "[Profiles REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/profile/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Profile"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Profiles",
          "filename": "Profiles",
          "root": {
            "meta": {
              "name": "Profiles"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Profiles Get",
              "filename": "Profiles Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/_apis/profile/profiles/{{profileId}}?details=<boolean>&withAttributes=<boolean>&partition=<string>&coreAttributes=<string>&forceRefresh=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "details",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "withAttributes",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "partition",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "coreAttributes",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "forceRefresh",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "profileId",
                    "value": "{{profileId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a user profile.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Search",
      "filename": "Search",
      "root": {
        "docs": "[Search REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/search/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Search"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Repositories",
          "filename": "Repositories",
          "root": {
            "docs": "REST API controller for Repository Status.",
            "meta": {
              "name": "Repositories"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Repositories Get",
              "filename": "Repositories Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/search/status/repositories/{{repository}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "repository",
                    "value": "{{repository}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Provides status of Repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Package Search Results",
          "filename": "Package Search Results",
          "root": {
            "docs": "REST API for package search.",
            "meta": {
              "name": "Package Search Results"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Package Search Results Fetch Package Search Results",
              "filename": "Package Search Results Fetch Package Search Results.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/search/packagesearchresults?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"$skip\": 50996351,\n  \"$top\": -40039026,\n  \"includeFacets\": true,\n  \"filters\": {\n    \"laboreeb9\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"searchText\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Provides a set of results for the search text.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Tfvc",
          "filename": "Tfvc",
          "root": {
            "docs": "REST API controller for TFVC Repository Status.",
            "meta": {
              "name": "Tfvc"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Tfvc Get",
              "filename": "Tfvc Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/search/status/tfvc?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Provides status of TFVC Repository.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Code Search Results",
          "filename": "Code Search Results",
          "root": {
            "docs": "Rest api for code search.",
            "meta": {
              "name": "Code Search Results"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Code Search Results Fetch Code Search Results",
              "filename": "Code Search Results Fetch Code Search Results.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/search/codesearchresults?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"includeSnippet\": false,\n  \"$skip\": -68235125,\n  \"$top\": 11343379,\n  \"includeFacets\": true,\n  \"filters\": {\n    \"deserunt_e\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"aliquip2\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nostrud_511\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"searchText\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Provides a set of results for the search text.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Wiki Search Results",
          "filename": "Wiki Search Results",
          "root": {
            "docs": "REST API controller for wiki search.",
            "meta": {
              "name": "Wiki Search Results"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Wiki Search Results Fetch Wiki Search Results",
              "filename": "Wiki Search Results Fetch Wiki Search Results.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/search/wikisearchresults?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"$skip\": 77496196,\n  \"$top\": 27097473,\n  \"includeFacets\": true,\n  \"filters\": {\n    \"nisi403\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"aliquip_\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"searchText\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Provides a set of results for the search request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Search Results",
          "filename": "Work Item Search Results",
          "root": {
            "docs": "Rest api for work item search.",
            "meta": {
              "name": "Work Item Search Results"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Item Search Results Fetch Work Item Search Results",
              "filename": "Work Item Search Results Fetch Work Item Search Results.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/search/workitemsearchresults?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"$skip\": 69537594,\n  \"$top\": 18795614,\n  \"includeFacets\": true,\n  \"filters\": {\n    \"ad_9_1\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"searchText\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Provides a set of results for the search text.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Security",
      "filename": "Security",
      "root": {
        "docs": "[Security REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/security/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Security"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Access Control Lists",
          "filename": "Access Control Lists",
          "root": {
            "docs": "Manage and query [access control lists](https://docs.microsoft.com/en-us/rest/api/vsts/security/access%20control%20lists/query?#accesscontrollist).",
            "meta": {
              "name": "Access Control Lists"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Access Control Lists Query",
              "filename": "Access Control Lists Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/accesscontrollists/{{securityNamespaceId}}?token=<string>&descriptors=<string>&includeExtendedInfo=<boolean>&recurse=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "token",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "descriptors",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeExtendedInfo",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "recurse",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "securityNamespaceId",
                    "value": "{{securityNamespaceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Return a list of access control lists for the specified security namespace and token. All ACLs in the security namespace will be retrieved if no optional parameters are provided.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Access Control Lists Remove Access Control Lists",
              "filename": "Access Control Lists Remove Access Control Lists.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/accesscontrollists/{{securityNamespaceId}}?tokens=<string>&recurse=<boolean>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "tokens",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "recurse",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "securityNamespaceId",
                    "value": "{{securityNamespaceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Remove access control lists under the specfied security namespace.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Access Control Lists Set Access Control Lists",
              "filename": "Access Control Lists Set Access Control Lists.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/accesscontrollists/{{securityNamespaceId}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "securityNamespaceId",
                    "value": "{{securityNamespaceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"cupidatat consectetur\",\n  \"count\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create or update one or more access control lists. All data that currently exists for the ACLs supplied will be overwritten.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Security Namespaces",
          "filename": "Security Namespaces",
          "root": {
            "docs": "Security namespaces are used to store [access control lists](https://docs.microsoft.com/en-us/rest/api/vsts/security/access%20control%20lists/query?#accesscontrollist) (ACLs) on tokens.\n\n Local vs. remote\n  * Security namespaces may have their data mastered in one microservice, but still be visible in other microservices.\n  * If a security namespace's data is mastered in microservice X, it is said to be local to that microservice. Otherwise, it is said to be remote.",
            "meta": {
              "name": "Security Namespaces"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Security Namespaces Query",
              "filename": "Security Namespaces Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/securitynamespaces/{{securityNamespaceId}}?localOnly=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "localOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "securityNamespaceId",
                    "value": "{{securityNamespaceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "List all security namespaces or just the specified namespace.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Permissions",
          "filename": "Permissions",
          "root": {
            "docs": "Manage and query permissions.",
            "meta": {
              "name": "Permissions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Permissions Has Permissions Batch",
              "filename": "Permissions Has Permissions Batch.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/security/permissionevaluationbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"alwaysAllowAdministrators\": \"<boolean>\",\n  \"evaluations\": [\n    {\n      \"permissions\": \"<integer>\",\n      \"securityNamespaceId\": \"<uuid>\",\n      \"token\": \"<string>\",\n      \"value\": \"<boolean>\"\n    },\n    {\n      \"permissions\": \"<integer>\",\n      \"securityNamespaceId\": \"<uuid>\",\n      \"token\": \"<string>\",\n      \"value\": \"<boolean>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Evaluates multiple permissions for the calling user.  Note: This method does not aggregate the results, nor does it short-circuit if one of the permissions evaluates to false.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Permissions Has Permissions",
              "filename": "Permissions Has Permissions.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/permissions/{{securityNamespaceId}}/{{permissions}}?tokens=<string>&alwaysAllowAdministrators=<boolean>&delimiter=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "tokens",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "alwaysAllowAdministrators",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "delimiter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "securityNamespaceId",
                    "value": "{{securityNamespaceId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "permissions",
                    "value": "{{permissions}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Evaluates whether the caller has the specified permissions on the specified set of security tokens.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Permissions Remove Permission",
              "filename": "Permissions Remove Permission.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/permissions/{{securityNamespaceId}}/{{permissions}}?descriptor=<string>&token=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "descriptor",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "token",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "securityNamespaceId",
                    "value": "{{securityNamespaceId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "permissions",
                    "value": "{{permissions}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes the specified permissions on a security token for a user or group.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Access Control Entries",
          "filename": "Access Control Entries",
          "root": {
            "docs": "Manage and query [access control entries](https://docs.microsoft.com/en-us/rest/api/azure/devops/security/access%20control%20entries/set%20access%20control%20entries?#accesscontrolentry).",
            "meta": {
              "name": "Access Control Entries"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Access Control Entries Remove Access Control Entries",
              "filename": "Access Control Entries Remove Access Control Entries.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/accesscontrolentries/{{securityNamespaceId}}?token=<string>&descriptors=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "token",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "descriptors",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "securityNamespaceId",
                    "value": "{{securityNamespaceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Remove the specified ACEs from the ACL belonging to the specified token.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Access Control Entries Set Access Control Entries",
              "filename": "Access Control Entries Set Access Control Entries.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/accesscontrolentries/{{securityNamespaceId}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "securityNamespaceId",
                    "value": "{{securityNamespaceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"item\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add or update ACEs in the ACL for the provided token. The request body contains the target token, a list of [ACEs](https://docs.microsoft.com/en-us/rest/api/azure/devops/security/access%20control%20entries/set%20access%20control%20entries?#accesscontrolentry) and a optional merge parameter. In the case of a collision (by identity descriptor) with an existing ACE in the ACL, the \"merge\" parameter determines the behavior. If set, the existing ACE has its allow and deny merged with the incoming ACE's allow and deny. If unset, the existing ACE is displaced.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Release",
      "filename": "Release",
      "root": {
        "docs": "[Release REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/release/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Release"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Attachments",
          "filename": "Attachments",
          "root": {
            "meta": {
              "name": "Attachments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Attachments Get Release Task Attachment Content",
              "filename": "Attachments Get Release Task Attachment Content.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}/environments/{{environmentId}}/attempts/{{attemptId}}/plan/{{planId}}/timelines/{{timelineId}}/records/{{recordId}}/attachments/{{type}}/{{attachmentName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attemptId",
                    "value": "{{attemptId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "timelineId",
                    "value": "{{timelineId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "recordId",
                    "value": "{{recordId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "type",
                    "value": "{{type}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attachmentName",
                    "value": "{{attachmentName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a release task attachment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Get Release Task Attachments",
              "filename": "Attachments Get Release Task Attachments.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}/environments/{{environmentId}}/attempts/{{attemptId}}/plan/{{planId}}/attachments/{{type}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attemptId",
                    "value": "{{attemptId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "type",
                    "value": "{{type}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the release task attachments.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Get Task Attachment Content",
              "filename": "Attachments Get Task Attachment Content.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}/environments/{{environmentId}}/attempts/{{attemptId}}/timelines/{{timelineId}}/records/{{recordId}}/attachments/{{type}}/{{attachmentName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attemptId",
                    "value": "{{attemptId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "timelineId",
                    "value": "{{timelineId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "recordId",
                    "value": "{{recordId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "type",
                    "value": "{{type}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attachmentName",
                    "value": "{{attachmentName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "GetTaskAttachmentContent API is deprecated. Use GetReleaseTaskAttachmentContent API instead.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Get Task Attachments",
              "filename": "Attachments Get Task Attachments.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}/environments/{{environmentId}}/attempts/{{attemptId}}/timelines/{{timelineId}}/attachments/{{type}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attemptId",
                    "value": "{{attemptId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "timelineId",
                    "value": "{{timelineId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "type",
                    "value": "{{type}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "GetTaskAttachments API is deprecated. Use GetReleaseTaskAttachments API instead.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Approvals",
          "filename": "Approvals",
          "root": {
            "meta": {
              "name": "Approvals"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Approvals List",
              "filename": "Approvals List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/approvals?statusFilter=skipped&typeFilter=all&queryOrder=descending&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "statusFilter",
                    "value": "skipped",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "typeFilter",
                    "value": "all",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queryOrder",
                    "value": "descending",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "assignedToFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "releaseIdsFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "continuationToken",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "includeMyGroupApprovals",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of approvals",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Approvals Update",
              "filename": "Approvals Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/approvals/{{approvalId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "approvalId",
                    "value": "{{approvalId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"approvalType\": \"preDeploy\",\n  \"approvedBy\": {\n    \"directoryAlias\": \"laborum qui labore deserunt\",\n    \"id\": \"in\",\n    \"imageUrl\": \"in \",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"Duis id esse ea\",\n    \"uniqueName\": \"qui cupidatat sint id voluptate\",\n    \"_links\": {\n      \"links\": {\n        \"reprehenderitc39\": {},\n        \"cillum2e\": {},\n        \"proident_e09\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"approver\": {\n    \"directoryAlias\": \"dolor nulla a\",\n    \"id\": \"voluptate consequat aliquip aute\",\n    \"imageUrl\": \"exercitation occaecat\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"exercitation consectetur\",\n    \"uniqueName\": \"sint Duis\",\n    \"_links\": {\n      \"links\": {\n        \"mollit13\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"attempt\": \"<integer>\",\n  \"comments\": \"<string>\",\n  \"createdOn\": \"<dateTime>\",\n  \"history\": [\n    {\n      \"approver\": {\n        \"directoryAlias\": \"pariatur mollit proident id\",\n        \"id\": \"in ad cupidatat consectetur\",\n        \"imageUrl\": \"nostrud Duis\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"in sunt deser\",\n        \"uniqueName\": \"aute occaecat exercitation irure ex\",\n        \"_links\": {\n          \"links\": {\n            \"pariatur_630\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"changedBy\": {\n        \"directoryAlias\": \"commodo esse\",\n        \"id\": \"laboris aliquip amet\",\n        \"imageUrl\": \"aliquip\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"anim vol\",\n        \"uniqueName\": \"pariatur sit non\",\n        \"_links\": {\n          \"links\": {\n            \"proident4_e\": {},\n            \"minim69\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"comments\": \"<string>\",\n      \"createdOn\": \"<dateTime>\",\n      \"modifiedOn\": \"<dateTime>\",\n      \"revision\": \"<integer>\"\n    },\n    {\n      \"approver\": {\n        \"directoryAlias\": \"reprehenderit Ex\",\n        \"id\": \"ut ut ad \",\n        \"imageUrl\": \"in sunt non anim\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"Duis laborum\",\n        \"uniqueName\": \"labore in nisi sunt\",\n        \"_links\": {\n          \"links\": {\n            \"ullamco_c\": {},\n            \"deserunt5b\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"changedBy\": {\n        \"directoryAlias\": \"nostrud elit dolore ut\",\n        \"id\": \"Excepteur ut eiusmod fugiat\",\n        \"imageUrl\": \"aute et in ullamco mollit\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"Excepteur proident veniam\",\n        \"uniqueName\": \"aliquip incididunt sit ex et\",\n        \"_links\": {\n          \"links\": {\n            \"occaecat__a6\": {},\n            \"dolore8d3\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"comments\": \"<string>\",\n      \"createdOn\": \"<dateTime>\",\n      \"modifiedOn\": \"<dateTime>\",\n      \"revision\": \"<integer>\"\n    }\n  ],\n  \"id\": \"<integer>\",\n  \"isAutomated\": \"<boolean>\",\n  \"modifiedOn\": \"<dateTime>\",\n  \"rank\": \"<integer>\",\n  \"release\": {\n    \"_links\": {\n      \"links\": {\n        \"sunt304\": {},\n        \"culpa_5c1\": {},\n        \"consectetur9\": {}\n      }\n    },\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"releaseDefinition\": {\n    \"_links\": {\n      \"links\": {\n        \"dolore_2d\": {},\n        \"tempor01\": {},\n        \"esse0\": {},\n        \"laborum_073\": {}\n      }\n    },\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"projectReference\": {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  },\n  \"releaseEnvironment\": {\n    \"_links\": {\n      \"links\": {\n        \"elit4\": {},\n        \"aliquip1\": {}\n      }\n    },\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"revision\": \"<integer>\",\n  \"status\": \"approved\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update status of an approval",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Deployments",
          "filename": "Deployments",
          "root": {
            "meta": {
              "name": "Deployments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Deployments List",
              "filename": "Deployments List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/deployments?definitionId=<integer>&definitionEnvironmentId=<integer>&createdBy=<string>&minModifiedTime=<dateTime>&maxModifiedTime=<dateTime>&deploymentStatus=failed&operationStatus=phaseInProgress&latestAttemptsOnly=<boolean>&queryOrder=descending&$top=<integer>&continuationToken=<integer>&createdFor=<string>&minStartedTime=<dateTime>&maxStartedTime=<dateTime>&sourceBranch=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "definitionId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "definitionEnvironmentId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "createdBy",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "minModifiedTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "maxModifiedTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "deploymentStatus",
                    "value": "failed",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "operationStatus",
                    "value": "phaseInProgress",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "latestAttemptsOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queryOrder",
                    "value": "descending",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "createdFor",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "minStartedTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "maxStartedTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "sourceBranch",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Gates",
          "filename": "Gates",
          "root": {
            "meta": {
              "name": "Gates"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Gates Update",
              "filename": "Gates Update.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/gates/{{gateStepId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "gateStepId",
                    "value": "{{gateStepId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"comment\": \"<string>\",\n  \"gatesToIgnore\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates the gate for a deployment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Folders",
          "filename": "Folders",
          "root": {
            "docs": "Controller to handle all REST calls against folders.",
            "meta": {
              "name": "Folders"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Folders Create",
              "filename": "Folders Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/folders/{{path}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"createdBy\": {\n    \"directoryAlias\": \"reprehenderit cillum\",\n    \"id\": \"dolor officia sed fugiat ea\",\n    \"imageUrl\": \"quis consectetur dolore laboris\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"id enim\",\n    \"uniqueName\": \"sit Lorem reprehenderit non\",\n    \"_links\": {\n      \"links\": {\n        \"ut_6\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"createdOn\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"lastChangedBy\": {\n    \"directoryAlias\": \"in sunt\",\n    \"id\": \"pariatur adipisicing do\",\n    \"imageUrl\": \"Ut dol\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"veniam commodo nulla sunt\",\n    \"uniqueName\": \"sit consectetur nulla\",\n    \"_links\": {\n      \"links\": {\n        \"Excepteur_5dd\": {},\n        \"anim_b2_\": {},\n        \"occaecat_64\": {},\n        \"Excepteur2f\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastChangedDate\": \"<dateTime>\",\n  \"path\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "This method is no longer supported. Use CreateFolder with folder parameter API.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Folders Delete",
              "filename": "Folders Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/folders/{{path}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a definition folder for given folder name and path and all it's existing definitions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Folders List",
              "filename": "Folders List.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/folders/{{path}}?queryOrder=descending&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "queryOrder",
                    "value": "descending",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets folders.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Folders Update",
              "filename": "Folders Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/folders/{{path}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"createdBy\": {\n    \"directoryAlias\": \"reprehenderit cillum\",\n    \"id\": \"dolor officia sed fugiat ea\",\n    \"imageUrl\": \"quis consectetur dolore laboris\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"id enim\",\n    \"uniqueName\": \"sit Lorem reprehenderit non\",\n    \"_links\": {\n      \"links\": {\n        \"ut_6\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"createdOn\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"lastChangedBy\": {\n    \"directoryAlias\": \"in sunt\",\n    \"id\": \"pariatur adipisicing do\",\n    \"imageUrl\": \"Ut dol\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"veniam commodo nulla sunt\",\n    \"uniqueName\": \"sit consectetur nulla\",\n    \"_links\": {\n      \"links\": {\n        \"Excepteur_5dd\": {},\n        \"anim_b2_\": {},\n        \"occaecat_64\": {},\n        \"Excepteur2f\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastChangedDate\": \"<dateTime>\",\n  \"path\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates an existing folder at given existing path.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Definitions",
          "filename": "Definitions",
          "root": {
            "meta": {
              "name": "Definitions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Definitions Create",
              "filename": "Definitions Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/definitions?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"comment\": \"ex id\",\n  \"createdBy\": {},\n  \"createdOn\": \"2023-07-01T18:01:59.042Z\",\n  \"description\": \"Duis do pariatur dolore\",\n  \"isDeleted\": false,\n  \"lastRelease\": {},\n  \"modifiedBy\": {},\n  \"modifiedOn\": \"1983-11-14T04:06:24.454Z\",\n  \"properties\": {},\n  \"releaseNameFormat\": \"anim voluptate\",\n  \"revision\": -25529835,\n  \"source\": \"undefined\",\n  \"tags\": [\n    \"amet mollit dolor culpa ullamco\",\n    \"aliqua in id\"\n  ],\n  \"variableGroups\": [\n    -16595484,\n    -86198094\n  ],\n  \"variables\": {\n    \"qui_d7\": {}\n  },\n  \"_links\": {\n    \"links\": {\n      \"amet_40f\": {},\n      \"irureed5\": {},\n      \"inc\": {}\n    }\n  },\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"path\": \"<string>\",\n  \"projectReference\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a release definition",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Delete",
              "filename": "Definitions Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/definitions/{{definitionId}}?comment=<string>&forceDelete=<boolean>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "comment",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "forceDelete",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a release definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Get Definition Revision",
              "filename": "Definitions Get Definition Revision.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/Release/definitions/{{definitionId}}/revisions/{{revision}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "text/plain",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "revision",
                    "value": "{{revision}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get release definition for a given definitionId and revision",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Get Release Definition History",
              "filename": "Definitions Get Release Definition History.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/Release/definitions/{{definitionId}}/revisions?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get revision history for a release definition",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Get",
              "filename": "Definitions Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/definitions/{{definitionId}}?propertyFilters=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a release definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions List",
              "filename": "Definitions List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/definitions?searchText=<string>&$expand=none&artifactType=<string>&artifactSourceId=<string>&$top=<integer>&continuationToken=<string>&queryOrder=idAscending&path={{path}}&isExactNameMatch=<boolean>&tagFilter=<string>&propertyFilters=<string>&definitionIdFilter=<string>&isDeleted=<boolean>&searchTextContainsFolderName=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "searchText",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "artifactType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "artifactSourceId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "queryOrder",
                    "value": "idAscending",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isExactNameMatch",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "tagFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "definitionIdFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchTextContainsFolderName",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of release definitions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Definitions Update",
              "filename": "Definitions Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/definitions?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"comment\": \"ex id\",\n  \"createdBy\": {},\n  \"createdOn\": \"2023-07-01T18:01:59.042Z\",\n  \"description\": \"Duis do pariatur dolore\",\n  \"isDeleted\": false,\n  \"lastRelease\": {},\n  \"modifiedBy\": {},\n  \"modifiedOn\": \"1983-11-14T04:06:24.454Z\",\n  \"properties\": {},\n  \"releaseNameFormat\": \"anim voluptate\",\n  \"revision\": -25529835,\n  \"source\": \"undefined\",\n  \"tags\": [\n    \"amet mollit dolor culpa ullamco\",\n    \"aliqua in id\"\n  ],\n  \"variableGroups\": [\n    -16595484,\n    -86198094\n  ],\n  \"variables\": {\n    \"qui_d7\": {}\n  },\n  \"_links\": {\n    \"links\": {\n      \"amet_40f\": {},\n      \"irureed5\": {},\n      \"inc\": {}\n    }\n  },\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"path\": \"<string>\",\n  \"projectReference\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a release definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Releases",
          "filename": "Releases",
          "root": {
            "meta": {
              "name": "Releases"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Releases Create",
              "filename": "Releases Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"artifacts\": [\n    {\n      \"alias\": \"<string>\",\n      \"instanceReference\": {\n        \"commitMessage\": \"<string>\",\n        \"definitionId\": \"<string>\",\n        \"definitionName\": \"<string>\",\n        \"id\": \"<string>\",\n        \"isMultiDefinitionType\": \"<boolean>\",\n        \"name\": \"<string>\",\n        \"sourceBranch\": \"<string>\",\n        \"sourcePullRequestVersion\": {\n          \"iterationId\": \"<string>\",\n          \"pullRequestId\": \"<string>\",\n          \"pullRequestMergedAt\": \"<dateTime>\",\n          \"sourceBranch\": \"<string>\",\n          \"sourceBranchCommitId\": \"<string>\",\n          \"targetBranch\": \"<string>\"\n        },\n        \"sourceRepositoryId\": \"<string>\",\n        \"sourceRepositoryType\": \"<string>\",\n        \"sourceVersion\": \"<string>\"\n      }\n    },\n    {\n      \"alias\": \"<string>\",\n      \"instanceReference\": {\n        \"commitMessage\": \"<string>\",\n        \"definitionId\": \"<string>\",\n        \"definitionName\": \"<string>\",\n        \"id\": \"<string>\",\n        \"isMultiDefinitionType\": \"<boolean>\",\n        \"name\": \"<string>\",\n        \"sourceBranch\": \"<string>\",\n        \"sourcePullRequestVersion\": {\n          \"iterationId\": \"<string>\",\n          \"pullRequestId\": \"<string>\",\n          \"pullRequestMergedAt\": \"<dateTime>\",\n          \"sourceBranch\": \"<string>\",\n          \"sourceBranchCommitId\": \"<string>\",\n          \"targetBranch\": \"<string>\"\n        },\n        \"sourceRepositoryId\": \"<string>\",\n        \"sourceRepositoryType\": \"<string>\",\n        \"sourceVersion\": \"<string>\"\n      }\n    }\n  ],\n  \"definitionId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"environmentsMetadata\": [\n    {\n      \"definitionEnvironmentId\": \"<integer>\",\n      \"variables\": {\n        \"consequatbce\": {\n          \"allowOverride\": \"<boolean>\",\n          \"isSecret\": \"<boolean>\",\n          \"value\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"definitionEnvironmentId\": \"<integer>\",\n      \"variables\": {\n        \"commodo_d\": {\n          \"allowOverride\": \"<boolean>\",\n          \"isSecret\": \"<boolean>\",\n          \"value\": \"<string>\"\n        },\n        \"in_59\": {\n          \"allowOverride\": \"<boolean>\",\n          \"isSecret\": \"<boolean>\",\n          \"value\": \"<string>\"\n        },\n        \"dolorb\": {\n          \"allowOverride\": \"<boolean>\",\n          \"isSecret\": \"<boolean>\",\n          \"value\": \"<string>\"\n        },\n        \"dolore_0\": {\n          \"allowOverride\": \"<boolean>\",\n          \"isSecret\": \"<boolean>\",\n          \"value\": \"<string>\"\n        }\n      }\n    }\n  ],\n  \"isDraft\": \"<boolean>\",\n  \"manualEnvironments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"properties\": {\n    \"count\": \"<integer>\",\n    \"item\": {},\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"reason\": \"pullRequest\",\n  \"variables\": {\n    \"ina\": {\n      \"allowOverride\": \"<boolean>\",\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    },\n    \"officiadd0\": {\n      \"allowOverride\": \"<boolean>\",\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    },\n    \"nisi_5d6\": {\n      \"allowOverride\": \"<boolean>\",\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a release.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Releases Get Logs",
              "filename": "Releases Get Logs.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}/logs?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get logs for a release Id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Releases Get Release Environment",
              "filename": "Releases Get Release Environment.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/Release/releases/{{releaseId}}/environments/{{environmentId}}?$expand=tasks&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "tasks",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a release environment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Releases Get Release Revision",
              "filename": "Releases Get Release Revision.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}?definitionSnapshotRevision=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "text/plain",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "definitionSnapshotRevision",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get release for a given revision number.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Releases Get Task Log",
              "filename": "Releases Get Task Log.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}/environments/{{environmentId}}/deployPhases/{{releaseDeployPhaseId}}/tasks/{{taskId}}/logs?startLine=<long>&endLine=<long>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "text/plain",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "startLine",
                    "value": "<long>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "endLine",
                    "value": "<long>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseDeployPhaseId",
                    "value": "{{releaseDeployPhaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "taskId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the task log of a release as a plain text file.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Releases List",
              "filename": "Releases List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{releaseServer}}/{{organization}}/{{project}}/_apis/release/releases?searchText=2024&statusFilter=active&minCreatedTime=2024-01-01&$top=1000&isDeleted=false",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "searchText",
                    "value": "2024",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "statusFilter",
                    "value": "active",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "minCreatedTime",
                    "value": "2024-01-01",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "1000",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isDeleted",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "definitionId",
                    "value": "{{definitionId}}",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "definitionEnvironmentId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "createdBy",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "environmentStatusFilter",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "maxCreatedTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "queryOrder",
                    "value": "descending",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "continuationToken",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "$expand",
                    "value": "manualInterventions",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "artifactTypeId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "sourceId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "artifactVersionId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "sourceBranchFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "tagFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "propertyFilters",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "releaseIdFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": false
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n\ntest(\"Content type is application/json\", function () {\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\n});\n\n\ntest(\"Count is present in the response\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData).to.have.property('count');\n});\n\n\ntest(\"Value should be an empty array\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.value).to.be.an('array').that.is.empty;\n});\n\n\ntest(\"Value is an array\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.value).to.be.an('array');\n});\n\n",
                "docs": "Get a list of releases\n\nAdditional example of using continuationToken with PowerShell.  \n\\`  \nprocess {  \n$ErrorActionPreference = $actionErrorVariable  \n$Error.Clear()\n\n$result = @{  \nvalue = @()  \n}\n\ndo  \n{  \ntry  \n{  \n$uri = ('[https://vsrm.dev.azure.com/{0}/{1}/_apis/release/releases?$top=100&amp;minCreatedTime={2}&amp;isDeleted=false'](https://vsrm.dev.azure.com/%7B0%7D/%7B1%7D/_apis/release/releases?$top=100&minCreatedTime=%7B2%7D&isDeleted=false') -f ($OrgId), ($ProjectId), ($fromDate))  \nif($continuationToken)  \n{$uri += '&continuationToken={0}' -f $continuationToken}  \nWrite-Information -MessageData ('=> INFO: {0} - {1} ' -f $MyInvocation.InvocationName, $uri)  \n$response = Invoke-RestMethod -Uri $uri -Method get -Headers $Headers -ResponseHeadersVariable responseHeaders  \n$obj = $response.value  \n$result.value += $obj\n\n```\n  $continuationToken = $responseHeaders['x-ms-continuationtoken']\n}\ncatch \n{\n  Write-Error -Message ('=====> ERR: {0} - {1} ' -f $MyInvocation.InvocationName, $uri)\n  Continue\n}\n\n ```\n\n}  \nwhile($continuationToken)\n\nreturn $result.value  \n}\\`",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Releases Update Release Environment",
              "filename": "Releases Update Release Environment.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/Release/releases/{{releaseId}}/environments/{{environmentId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "environmentId",
                    "value": "{{environmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"comment\": \"<string>\",\n  \"scheduledDeploymentTime\": \"<dateTime>\",\n  \"status\": \"inProgress\",\n  \"variables\": {\n    \"anim_f0b\": {\n      \"allowOverride\": \"<boolean>\",\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    },\n    \"consequat_c3a\": {\n      \"allowOverride\": \"<boolean>\",\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the status of a release environment",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Releases Update Release Resource",
              "filename": "Releases Update Release Resource.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"comment\": \"<string>\",\n  \"keepForever\": \"<boolean>\",\n  \"manualEnvironments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"status\": \"abandoned\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update few properties of a release.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Releases Update Release",
              "filename": "Releases Update Release.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/release/releases/{{releaseId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"dolore55d\": {},\n      \"minim_a\": {}\n    }\n  },\n  \"artifacts\": [\n    {\n      \"alias\": \"<string>\",\n      \"definitionReference\": {\n        \"laborum_0\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"amet_08\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      \"isPrimary\": \"<boolean>\",\n      \"isRetained\": \"<boolean>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"comment\": \"<string>\",\n  \"createdBy\": {\n    \"directoryAlias\": \"dolore nisi aliqua laborum\",\n    \"id\": \"ea elit\",\n    \"imageUrl\": \"velit et amet cupidatat\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"eu velit nulla\",\n    \"uniqueName\": \"sed quis\",\n    \"_links\": {\n      \"links\": {\n        \"consequat_1\": {},\n        \"Duis2\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"createdFor\": {\n    \"directoryAlias\": \"occaecat nulla eu aliqua\",\n    \"id\": \"deserunt\",\n    \"imageUrl\": \"cupidatat exercitation\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ut Ut\",\n    \"uniqueName\": \"est officia commodo elit\",\n    \"_links\": {\n      \"links\": {\n        \"ut2a\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"createdOn\": \"<dateTime>\",\n  \"definitionSnapshotRevision\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"environments\": [\n    {\n      \"conditions\": [\n        {\n          \"result\": true,\n          \"conditionType\": \"environmentState\",\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"createdOn\": \"<dateTime>\",\n      \"definitionEnvironmentId\": \"<integer>\",\n      \"deployPhasesSnapshot\": [\n        {\n          \"name\": \"<string>\",\n          \"phaseType\": \"machineGroupBasedDeployment\",\n          \"rank\": \"<integer>\",\n          \"refName\": \"<string>\",\n          \"workflowTasks\": [\n            {\n              \"alwaysRun\": \"<boolean>\",\n              \"condition\": \"<string>\",\n              \"continueOnError\": \"<boolean>\",\n              \"definitionType\": \"<string>\",\n              \"enabled\": \"<boolean>\",\n              \"environment\": {\n                \"nisic6\": \"<string>\"\n              },\n              \"inputs\": {\n                \"do_75\": \"<string>\",\n                \"id__\": \"<string>\"\n              },\n              \"name\": \"<string>\",\n              \"overrideInputs\": {\n                \"commodo__62\": \"<string>\",\n                \"esse_4a\": \"<string>\",\n                \"ut_9c\": \"<string>\"\n              },\n              \"refName\": \"<string>\",\n              \"retryCountOnTaskFailure\": \"<integer>\",\n              \"taskId\": \"<uuid>\",\n              \"timeoutInMinutes\": \"<integer>\",\n              \"version\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"deploySteps\": [\n        {\n          \"attempt\": \"<integer>\",\n          \"deploymentId\": \"<integer>\",\n          \"hasStarted\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"issues\": [\n            {\n              \"data\": {\n                \"ut8\": \"<string>\",\n                \"essed\": \"<string>\"\n              },\n              \"issueType\": \"<string>\",\n              \"message\": \"<string>\"\n            }\n          ],\n          \"lastModifiedBy\": {\n            \"directoryAlias\": \"eiusmod\",\n            \"id\": \"adipisicing officia ea in mollit\",\n            \"imageUrl\": \"consectetur veniam in\",\n            \"inactive\": true,\n            \"isAadIdentity\": true,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"dolor ullamco\",\n            \"uniqueName\": \"commodo c\",\n            \"_links\": {\n              \"links\": {\n                \"eu43\": {},\n                \"tempor_e\": {},\n                \"culpaea\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"lastModifiedOn\": \"<dateTime>\",\n          \"operationStatus\": \"manualInterventionPending\",\n          \"postDeploymentGates\": {\n            \"deploymentJobs\": [\n              {\n                \"job\": {\n                  \"agentName\": \"<string>\",\n                  \"finishTime\": \"<dateTime>\",\n                  \"id\": \"<integer>\",\n                  \"issues\": [\n                    {\n                      \"data\": {\n                        \"tempor__1b\": \"<string>\",\n                        \"sint97\": \"<string>\"\n                      },\n                      \"issueType\": \"<string>\",\n                      \"message\": \"<string>\"\n                    }\n                  ],\n                  \"lineCount\": \"<long>\",\n                  \"logUrl\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"percentComplete\": \"<integer>\",\n                  \"rank\": \"<integer>\",\n                  \"resultCode\": \"<string>\",\n                  \"startTime\": \"<dateTime>\",\n                  \"status\": \"pending\",\n                  \"task\": {\n                    \"id\": \"<uuid>\",\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"timelineRecordId\": \"<uuid>\"\n                },\n                \"tasks\": [\n                  {\n                    \"agentName\": \"<string>\",\n                    \"finishTime\": \"<dateTime>\",\n                    \"id\": \"<integer>\",\n                    \"issues\": [\n                      {\n                        \"data\": {\n                          \"aute2\": \"<string>\",\n                          \"Ut_82b\": \"<string>\"\n                        },\n                        \"issueType\": \"<string>\",\n                        \"message\": \"<string>\"\n                      }\n                    ],\n                    \"lineCount\": \"<long>\",\n                    \"logUrl\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"percentComplete\": \"<integer>\",\n                    \"rank\": \"<integer>\",\n                    \"resultCode\": \"<string>\",\n                    \"startTime\": \"<dateTime>\",\n                    \"status\": \"canceled\",\n                    \"task\": {\n                      \"id\": \"<uuid>\",\n                      \"name\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"timelineRecordId\": \"<uuid>\"\n                  }\n                ]\n              }\n            ],\n            \"id\": \"<integer>\",\n            \"ignoredGates\": [\n              {\n                \"lastModifiedOn\": \"<dateTime>\",\n                \"name\": \"<string>\"\n              }\n            ],\n            \"lastModifiedOn\": \"<dateTime>\",\n            \"runPlanId\": \"<uuid>\",\n            \"stabilizationCompletedOn\": \"<dateTime>\",\n            \"startedOn\": \"<dateTime>\",\n            \"status\": \"canceled\",\n            \"succeedingSince\": \"<dateTime>\"\n          },\n          \"preDeploymentGates\": {\n            \"deploymentJobs\": [\n              {\n                \"job\": {\n                  \"agentName\": \"<string>\",\n                  \"finishTime\": \"<dateTime>\",\n                  \"id\": \"<integer>\",\n                  \"issues\": [\n                    {\n                      \"data\": {\n                        \"sit0fb\": \"<string>\",\n                        \"ut20f\": \"<string>\"\n                      },\n                      \"issueType\": \"<string>\",\n                      \"message\": \"<string>\"\n                    }\n                  ],\n                  \"lineCount\": \"<long>\",\n                  \"logUrl\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"percentComplete\": \"<integer>\",\n                  \"rank\": \"<integer>\",\n                  \"resultCode\": \"<string>\",\n                  \"startTime\": \"<dateTime>\",\n                  \"status\": \"pending\",\n                  \"task\": {\n                    \"id\": \"<uuid>\",\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"timelineRecordId\": \"<uuid>\"\n                },\n                \"tasks\": [\n                  {\n                    \"agentName\": \"<string>\",\n                    \"finishTime\": \"<dateTime>\",\n                    \"id\": \"<integer>\",\n                    \"issues\": [\n                      {\n                        \"data\": {\n                          \"occaecate7c\": \"<string>\",\n                          \"deserunt_6\": \"<string>\",\n                          \"dolor147\": \"<string>\",\n                          \"auteaa\": \"<string>\"\n                        },\n                        \"issueType\": \"<string>\",\n                        \"message\": \"<string>\"\n                      }\n                    ],\n                    \"lineCount\": \"<long>\",\n                    \"logUrl\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"percentComplete\": \"<integer>\",\n                    \"rank\": \"<integer>\",\n                    \"resultCode\": \"<string>\",\n                    \"startTime\": \"<dateTime>\",\n                    \"status\": \"failed\",\n                    \"task\": {\n                      \"id\": \"<uuid>\",\n                      \"name\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"timelineRecordId\": \"<uuid>\"\n                  }\n                ]\n              }\n            ],\n            \"id\": \"<integer>\",\n            \"ignoredGates\": [\n              {\n                \"lastModifiedOn\": \"<dateTime>\",\n                \"name\": \"<string>\"\n              }\n            ],\n            \"lastModifiedOn\": \"<dateTime>\",\n            \"runPlanId\": \"<uuid>\",\n            \"stabilizationCompletedOn\": \"<dateTime>\",\n            \"startedOn\": \"<dateTime>\",\n            \"status\": \"succeeded\",\n            \"succeedingSince\": \"<dateTime>\"\n          },\n          \"queuedOn\": \"<dateTime>\",\n          \"reason\": \"redeployTrigger\",\n          \"releaseDeployPhases\": [\n            {\n              \"deploymentJobs\": [\n                {\n                  \"job\": {\n                    \"agentName\": \"<string>\",\n                    \"finishTime\": \"<dateTime>\",\n                    \"id\": \"<integer>\",\n                    \"issues\": [\n                      {\n                        \"data\": {\n                          \"aliquip__d5\": \"<string>\",\n                          \"est_8\": \"<string>\"\n                        },\n                        \"issueType\": \"<string>\",\n                        \"message\": \"<string>\"\n                      }\n                    ],\n                    \"lineCount\": \"<long>\",\n                    \"logUrl\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"percentComplete\": \"<integer>\",\n                    \"rank\": \"<integer>\",\n                    \"resultCode\": \"<string>\",\n                    \"startTime\": \"<dateTime>\",\n                    \"status\": \"success\",\n                    \"task\": {\n                      \"id\": \"<uuid>\",\n                      \"name\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"timelineRecordId\": \"<uuid>\"\n                  },\n                  \"tasks\": [\n                    {\n                      \"agentName\": \"<string>\",\n                      \"finishTime\": \"<dateTime>\",\n                      \"id\": \"<integer>\",\n                      \"issues\": [\n                        {\n                          \"data\": {\n                            \"veniam59d\": \"<string>\"\n                          },\n                          \"issueType\": \"<string>\",\n                          \"message\": \"<string>\"\n                        }\n                      ],\n                      \"lineCount\": \"<long>\",\n                      \"logUrl\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"percentComplete\": \"<integer>\",\n                      \"rank\": \"<integer>\",\n                      \"resultCode\": \"<string>\",\n                      \"startTime\": \"<dateTime>\",\n                      \"status\": \"unknown\",\n                      \"task\": {\n                        \"id\": \"<uuid>\",\n                        \"name\": \"<string>\",\n                        \"version\": \"<string>\"\n                      },\n                      \"timelineRecordId\": \"<uuid>\"\n                    }\n                  ]\n                }\n              ],\n              \"errorLog\": \"<string>\",\n              \"manualInterventions\": [\n                {\n                  \"approver\": {\n                    \"directoryAlias\": \"tempor\",\n                    \"id\": \"qui quis fugiat anim\",\n                    \"imageUrl\": \"adipisicing reprehenderit magna ad in\",\n                    \"inactive\": true,\n                    \"isAadIdentity\": true,\n                    \"isContainer\": true,\n                    \"isDeletedInOrigin\": true,\n                    \"profileUrl\": \"sint deserunt dolore sunt\",\n                    \"uniqueName\": \"ut incididunt anim in\",\n                    \"_links\": {\n                      \"links\": {\n                        \"sunt_b\": {},\n                        \"proident9a\": {},\n                        \"et_a5\": {}\n                      }\n                    },\n                    \"descriptor\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"url\": \"<string>\"\n                  },\n                  \"comments\": \"<string>\",\n                  \"createdOn\": \"<dateTime>\",\n                  \"id\": \"<integer>\",\n                  \"instructions\": \"<string>\",\n                  \"modifiedOn\": \"<dateTime>\",\n                  \"name\": \"<string>\",\n                  \"release\": {\n                    \"_links\": {\n                      \"links\": {\n                        \"officia_c\": {},\n                        \"mollit_a8\": {},\n                        \"aute3\": {}\n                      }\n                    },\n                    \"id\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"url\": \"<string>\"\n                  },\n                  \"releaseDefinition\": {\n                    \"_links\": {\n                      \"links\": {\n                        \"pariatur_4\": {},\n                        \"Utb\": {}\n                      }\n                    },\n                    \"id\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"path\": \"<string>\",\n                    \"projectReference\": {\n                      \"id\": \"<uuid>\",\n                      \"name\": \"<string>\"\n                    },\n                    \"url\": \"<string>\"\n                  },\n                  \"releaseEnvironment\": {\n                    \"_links\": {\n                      \"links\": {\n                        \"Lorem_0d\": {},\n                        \"elit_4\": {},\n                        \"ad3\": {},\n                        \"voluptate_9\": {}\n                      }\n                    },\n                    \"id\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"url\": \"<string>\"\n                  },\n                  \"status\": \"approved\",\n                  \"taskInstanceId\": \"<uuid>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"name\": \"<string>\",\n              \"phaseId\": \"<string>\",\n              \"phaseType\": \"deploymentGates\",\n              \"rank\": \"<integer>\",\n              \"runPlanId\": \"<uuid>\",\n              \"startedOn\": \"<dateTime>\",\n              \"status\": \"skipped\"\n            }\n          ],\n          \"requestedBy\": {\n            \"directoryAlias\": \"sed\",\n            \"id\": \"consequat voluptate in sint quis\",\n            \"imageUrl\": \"dolor elit\",\n            \"inactive\": true,\n            \"isAadIdentity\": true,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"deserunt fugiat o\",\n            \"uniqueName\": \"reprehenderit\",\n            \"_links\": {\n              \"links\": {\n                \"in_2\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"requestedFor\": {\n            \"directoryAlias\": \"officia id\",\n            \"id\": \"eu fugiat\",\n            \"imageUrl\": \"Ut velit sit commodo\",\n            \"inactive\": true,\n            \"isAadIdentity\": true,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"fugiat labore ut ad sint\",\n            \"uniqueName\": \"commodo eiusmod exercitation ut\",\n            \"_links\": {\n              \"links\": {\n                \"aliqua_64\": {},\n                \"Duis4\": {},\n                \"in_41\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"status\": \"inProgress\"\n        }\n      ],\n      \"environmentOptions\": {\n        \"autoLinkWorkItems\": \"<boolean>\",\n        \"badgeEnabled\": \"<boolean>\",\n        \"publishDeploymentStatus\": \"<boolean>\",\n        \"pullRequestDeploymentEnabled\": \"<boolean>\"\n      },\n      \"id\": \"<integer>\",\n      \"modifiedOn\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"nextScheduledUtcTime\": \"<dateTime>\",\n      \"owner\": {\n        \"directoryAlias\": \"voluptate in Lorem\",\n        \"id\": \"exercitation nostrud\",\n        \"imageUrl\": \"cillum et culpa a\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"sit reprehenderit non\",\n        \"uniqueName\": \"commodo et\",\n        \"_links\": {\n          \"links\": {\n            \"velit65b\": {},\n            \"dolore_5b\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"postApprovalsSnapshot\": {\n        \"approvalOptions\": {\n          \"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped\": \"<boolean>\",\n          \"enforceIdentityRevalidation\": \"<boolean>\",\n          \"executionOrder\": \"afterGatesAlways\",\n          \"releaseCreatorCanBeApprover\": \"<boolean>\",\n          \"requiredApproverCount\": \"<integer>\",\n          \"timeoutInMinutes\": \"<integer>\"\n        },\n        \"approvals\": [\n          {\n            \"approver\": {},\n            \"isAutomated\": true,\n            \"isNotificationOn\": false,\n            \"rank\": 17900759,\n            \"id\": \"<integer>\"\n          }\n        ]\n      },\n      \"postDeployApprovals\": [\n        {\n          \"approvalType\": \"all\",\n          \"approvedBy\": {\n            \"directoryAlias\": \"irure ullamco non eiusmod\",\n            \"id\": \"amet nostrud non\",\n            \"imageUrl\": \"cupidatat adipisicing elit aliquip reprehen\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"amet cillum occaecat\",\n            \"uniqueName\": \"quis ea\",\n            \"_links\": {\n              \"links\": {\n                \"consequat96e\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"approver\": {\n            \"directoryAlias\": \"veniam Ut fugiat\",\n            \"id\": \"aliquip Lorem minim Ut\",\n            \"imageUrl\": \"nulla dolor\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"nulla tempor velit\",\n            \"uniqueName\": \"laboris\",\n            \"_links\": {\n              \"links\": {\n                \"Lorem284\": {},\n                \"nulla_b8\": {},\n                \"dolorcdb\": {},\n                \"amet31e\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"attempt\": \"<integer>\",\n          \"comments\": \"<string>\",\n          \"createdOn\": \"<dateTime>\",\n          \"history\": [\n            {\n              \"approver\": {\n                \"directoryAlias\": \"eu fugiat magna\",\n                \"id\": \"ipsum in aliquip Lorem\",\n                \"imageUrl\": \"Ut cupidatat\",\n                \"inactive\": true,\n                \"isAadIdentity\": true,\n                \"isContainer\": false,\n                \"isDeletedInOrigin\": true,\n                \"profileUrl\": \"nisi in exercita\",\n                \"uniqueName\": \"eu culpa\",\n                \"_links\": {\n                  \"links\": {\n                    \"mollit6\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"changedBy\": {\n                \"directoryAlias\": \"sed enim\",\n                \"id\": \"do\",\n                \"imageUrl\": \"nisi anim\",\n                \"inactive\": true,\n                \"isAadIdentity\": false,\n                \"isContainer\": true,\n                \"isDeletedInOrigin\": false,\n                \"profileUrl\": \"cillum dolore sunt\",\n                \"uniqueName\": \"voluptate aliquip occaecat ut\",\n                \"_links\": {\n                  \"links\": {\n                    \"sed_145\": {},\n                    \"ad_d3a\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"comments\": \"<string>\",\n              \"createdOn\": \"<dateTime>\",\n              \"modifiedOn\": \"<dateTime>\",\n              \"revision\": \"<integer>\"\n            }\n          ],\n          \"id\": \"<integer>\",\n          \"isAutomated\": \"<boolean>\",\n          \"modifiedOn\": \"<dateTime>\",\n          \"rank\": \"<integer>\",\n          \"release\": {\n            \"_links\": {\n              \"links\": {\n                \"occaecat_\": {}\n              }\n            },\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"releaseDefinition\": {\n            \"_links\": {\n              \"links\": {\n                \"anim_2\": {},\n                \"exercitation_2\": {},\n                \"utf\": {}\n              }\n            },\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"path\": \"<string>\",\n            \"projectReference\": {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            },\n            \"url\": \"<string>\"\n          },\n          \"releaseEnvironment\": {\n            \"_links\": {\n              \"links\": {\n                \"exercitation3d\": {},\n                \"consectetur_1c\": {}\n              }\n            },\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"revision\": \"<integer>\",\n          \"status\": \"pending\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"postDeploymentGatesSnapshot\": {\n        \"gates\": [\n          {\n            \"tasks\": [\n              {\n                \"alwaysRun\": \"<boolean>\",\n                \"condition\": \"<string>\",\n                \"continueOnError\": \"<boolean>\",\n                \"definitionType\": \"<string>\",\n                \"enabled\": \"<boolean>\",\n                \"environment\": {\n                  \"adipisicing_6\": \"<string>\"\n                },\n                \"inputs\": {\n                  \"do_f\": \"<string>\",\n                  \"id_b84\": \"<string>\",\n                  \"veniambf\": \"<string>\",\n                  \"dolore_f\": \"<string>\",\n                  \"este91\": \"<string>\"\n                },\n                \"name\": \"<string>\",\n                \"overrideInputs\": {\n                  \"ina7\": \"<string>\",\n                  \"ipsumb\": \"<string>\",\n                  \"labore_03a\": \"<string>\"\n                },\n                \"refName\": \"<string>\",\n                \"retryCountOnTaskFailure\": \"<integer>\",\n                \"taskId\": \"<uuid>\",\n                \"timeoutInMinutes\": \"<integer>\",\n                \"version\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"gatesOptions\": {\n          \"isEnabled\": \"<boolean>\",\n          \"minimumSuccessDuration\": \"<integer>\",\n          \"samplingInterval\": \"<integer>\",\n          \"stabilizationTime\": \"<integer>\",\n          \"timeout\": \"<integer>\"\n        },\n        \"id\": \"<integer>\"\n      },\n      \"preApprovalsSnapshot\": {\n        \"approvalOptions\": {\n          \"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped\": \"<boolean>\",\n          \"enforceIdentityRevalidation\": \"<boolean>\",\n          \"executionOrder\": \"beforeGates\",\n          \"releaseCreatorCanBeApprover\": \"<boolean>\",\n          \"requiredApproverCount\": \"<integer>\",\n          \"timeoutInMinutes\": \"<integer>\"\n        },\n        \"approvals\": [\n          {\n            \"approver\": {},\n            \"isAutomated\": true,\n            \"isNotificationOn\": true,\n            \"rank\": -34561243,\n            \"id\": \"<integer>\"\n          }\n        ]\n      },\n      \"preDeployApprovals\": [\n        {\n          \"approvalType\": \"undefined\",\n          \"approvedBy\": {\n            \"directoryAlias\": \"veniam consequat\",\n            \"id\": \"qui mollit\",\n            \"imageUrl\": \"amet Excepteur nulla incididunt proident\",\n            \"inactive\": true,\n            \"isAadIdentity\": true,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"in ea\",\n            \"uniqueName\": \"aute occaecat amet mollit\",\n            \"_links\": {\n              \"links\": {\n                \"laboree9d\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"approver\": {\n            \"directoryAlias\": \"fugiat minim dolor\",\n            \"id\": \"tempor voluptate\",\n            \"imageUrl\": \"eiusmod sint esse exercitation\",\n            \"inactive\": false,\n            \"isAadIdentity\": true,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"volu\",\n            \"uniqueName\": \"sed adipisicing\",\n            \"_links\": {\n              \"links\": {\n                \"in3\": {},\n                \"voluptate_a0c\": {},\n                \"est_f_\": {},\n                \"consequat_2\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"attempt\": \"<integer>\",\n          \"comments\": \"<string>\",\n          \"createdOn\": \"<dateTime>\",\n          \"history\": [\n            {\n              \"approver\": {\n                \"directoryAlias\": \"et id elit\",\n                \"id\": \"minim tempor\",\n                \"imageUrl\": \"amet cupidatat\",\n                \"inactive\": true,\n                \"isAadIdentity\": true,\n                \"isContainer\": true,\n                \"isDeletedInOrigin\": false,\n                \"profileUrl\": \"commodo incididunt in sint\",\n                \"uniqueName\": \"est\",\n                \"_links\": {\n                  \"links\": {\n                    \"veniam_f\": {},\n                    \"esse6\": {},\n                    \"irure307\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"changedBy\": {\n                \"directoryAlias\": \"Excepteur non\",\n                \"id\": \"magna\",\n                \"imageUrl\": \"ullamco Excepteur aliquip veniam\",\n                \"inactive\": false,\n                \"isAadIdentity\": true,\n                \"isContainer\": false,\n                \"isDeletedInOrigin\": false,\n                \"profileUrl\": \"ad aliquip eiusmod veniam\",\n                \"uniqueName\": \"consectetur enim Excepteur\",\n                \"_links\": {\n                  \"links\": {\n                    \"laborum_890\": {}\n                  }\n                },\n                \"descriptor\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"comments\": \"<string>\",\n              \"createdOn\": \"<dateTime>\",\n              \"modifiedOn\": \"<dateTime>\",\n              \"revision\": \"<integer>\"\n            }\n          ],\n          \"id\": \"<integer>\",\n          \"isAutomated\": \"<boolean>\",\n          \"modifiedOn\": \"<dateTime>\",\n          \"rank\": \"<integer>\",\n          \"release\": {\n            \"_links\": {\n              \"links\": {\n                \"tempor_177\": {},\n                \"magna00a\": {},\n                \"in15\": {},\n                \"et10e\": {}\n              }\n            },\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"releaseDefinition\": {\n            \"_links\": {\n              \"links\": {\n                \"Lorem_df\": {},\n                \"est_f8b\": {},\n                \"aute8\": {}\n              }\n            },\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"path\": \"<string>\",\n            \"projectReference\": {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\"\n            },\n            \"url\": \"<string>\"\n          },\n          \"releaseEnvironment\": {\n            \"_links\": {\n              \"links\": {\n                \"laboris1\": {}\n              }\n            },\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"revision\": \"<integer>\",\n          \"status\": \"canceled\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"preDeploymentGatesSnapshot\": {\n        \"gates\": [\n          {\n            \"tasks\": [\n              {\n                \"alwaysRun\": \"<boolean>\",\n                \"condition\": \"<string>\",\n                \"continueOnError\": \"<boolean>\",\n                \"definitionType\": \"<string>\",\n                \"enabled\": \"<boolean>\",\n                \"environment\": {\n                  \"nisi_2e5\": \"<string>\",\n                  \"qui_9\": \"<string>\",\n                  \"reprehenderitfd1\": \"<string>\"\n                },\n                \"inputs\": {\n                  \"temporca\": \"<string>\",\n                  \"dolore_f\": \"<string>\"\n                },\n                \"name\": \"<string>\",\n                \"overrideInputs\": {\n                  \"sit_e\": \"<string>\",\n                  \"dolor_61d\": \"<string>\"\n                },\n                \"refName\": \"<string>\",\n                \"retryCountOnTaskFailure\": \"<integer>\",\n                \"taskId\": \"<uuid>\",\n                \"timeoutInMinutes\": \"<integer>\",\n                \"version\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"gatesOptions\": {\n          \"isEnabled\": \"<boolean>\",\n          \"minimumSuccessDuration\": \"<integer>\",\n          \"samplingInterval\": \"<integer>\",\n          \"stabilizationTime\": \"<integer>\",\n          \"timeout\": \"<integer>\"\n        },\n        \"id\": \"<integer>\"\n      },\n      \"processParameters\": {\n        \"dataSourceBindings\": [\n          {\n            \"callbackContextTemplate\": \"<string>\",\n            \"callbackRequiredTemplate\": \"<string>\",\n            \"dataSourceName\": \"<string>\",\n            \"endpointId\": \"<string>\",\n            \"endpointUrl\": \"<string>\",\n            \"headers\": [\n              {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"initialContextTemplate\": \"<string>\",\n            \"parameters\": {\n              \"pariatur_a4\": \"<string>\"\n            },\n            \"requestContent\": \"<string>\",\n            \"requestVerb\": \"<string>\",\n            \"resultSelector\": \"<string>\",\n            \"resultTemplate\": \"<string>\",\n            \"target\": \"<string>\"\n          }\n        ],\n        \"inputs\": [\n          {\n            \"aliases\": [\n              \"<string>\"\n            ],\n            \"defaultValue\": \"<string>\",\n            \"groupName\": \"<string>\",\n            \"helpMarkDown\": \"<string>\",\n            \"label\": \"<string>\",\n            \"name\": \"<string>\",\n            \"options\": {\n              \"enim_\": \"<string>\",\n              \"sit4f\": \"<string>\",\n              \"qui_8e\": \"<string>\"\n            },\n            \"properties\": {\n              \"quis4\": \"<string>\",\n              \"tempor_f\": \"<string>\"\n            },\n            \"required\": \"<boolean>\",\n            \"type\": \"<string>\",\n            \"validation\": {\n              \"expression\": \"<string>\",\n              \"message\": \"<string>\"\n            },\n            \"visibleRule\": \"<string>\"\n          }\n        ],\n        \"sourceDefinitions\": [\n          {\n            \"authKey\": \"<string>\",\n            \"endpoint\": \"<string>\",\n            \"keySelector\": \"<string>\",\n            \"selector\": \"<string>\",\n            \"target\": \"<string>\"\n          }\n        ]\n      },\n      \"rank\": \"<integer>\",\n      \"release\": {\n        \"_links\": {\n          \"links\": {\n            \"aliqua_8e\": {},\n            \"ut_3\": {}\n          }\n        },\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"releaseCreatedBy\": {\n        \"directoryAlias\": \"irure laboris ut dolor nulla\",\n        \"id\": \"deserunt\",\n        \"imageUrl\": \"commodo in dolore aute velit\",\n        \"inactive\": false,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"sit sed dolore\",\n        \"uniqueName\": \"ea anim\",\n        \"_links\": {\n          \"links\": {\n            \"eiusmod_a9e\": {},\n            \"do9eb\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"releaseDefinition\": {\n        \"_links\": {\n          \"links\": {\n            \"laboris32f\": {},\n            \"exercitation3ee\": {}\n          }\n        },\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"path\": \"<string>\",\n        \"projectReference\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        \"url\": \"<string>\"\n      },\n      \"releaseId\": \"<integer>\",\n      \"scheduledDeploymentTime\": \"<dateTime>\",\n      \"schedules\": [\n        {\n          \"daysToRelease\": \"sunday\",\n          \"jobId\": \"<uuid>\",\n          \"scheduleOnlyWithChanges\": \"<boolean>\",\n          \"startHours\": \"<integer>\",\n          \"startMinutes\": \"<integer>\",\n          \"timeZoneId\": \"<string>\"\n        }\n      ],\n      \"status\": \"partiallySucceeded\",\n      \"timeToDeploy\": \"<double>\",\n      \"triggerReason\": \"<string>\",\n      \"variableGroups\": [\n        {\n          \"createdBy\": {\n            \"directoryAlias\": \"ad deserunt magna incidi\",\n            \"id\": \"occaecat nostrud sint do ad\",\n            \"imageUrl\": \"Duis veniam\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"reprehenderit\",\n            \"uniqueName\": \"in cillum\",\n            \"_links\": {\n              \"links\": {\n                \"laborum2ad\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"createdOn\": \"<dateTime>\",\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isShared\": \"<boolean>\",\n          \"modifiedBy\": {\n            \"directoryAlias\": \"elit Ut dolor commodo\",\n            \"id\": \"aliquip sed in\",\n            \"imageUrl\": \"dolor Duis laboris deserun\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"quis Ut pariatur id\",\n            \"uniqueName\": \"ea ut\",\n            \"_links\": {\n              \"links\": {\n                \"nulla255\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"modifiedOn\": \"<dateTime>\",\n          \"name\": \"<string>\",\n          \"providerData\": {},\n          \"type\": \"<string>\",\n          \"variableGroupProjectReferences\": [\n            {\n              \"description\": \"<string>\",\n              \"name\": \"<string>\",\n              \"projectReference\": {\n                \"id\": \"<uuid>\",\n                \"name\": \"<string>\"\n              }\n            }\n          ],\n          \"variables\": {\n            \"quis39f\": {\n              \"isReadOnly\": \"<boolean>\",\n              \"isSecret\": \"<boolean>\",\n              \"value\": \"<string>\"\n            },\n            \"officia26e\": {\n              \"isReadOnly\": \"<boolean>\",\n              \"isSecret\": \"<boolean>\",\n              \"value\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"variables\": {\n        \"cillum_94\": {\n          \"allowOverride\": \"<boolean>\",\n          \"isSecret\": \"<boolean>\",\n          \"value\": \"<string>\"\n        }\n      }\n    }\n  ],\n  \"id\": \"<integer>\",\n  \"keepForever\": \"<boolean>\",\n  \"logsContainerUrl\": \"<string>\",\n  \"modifiedBy\": {\n    \"directoryAlias\": \"in sed sint fugiat dolor\",\n    \"id\": \"nostrud Lorem labore \",\n    \"imageUrl\": \"ad est cupidatat anim\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"do incididunt ipsum non\",\n    \"uniqueName\": \"dolore anim voluptate elit\",\n    \"_links\": {\n      \"links\": {\n        \"tempor0\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"modifiedOn\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"poolName\": \"<string>\",\n  \"projectReference\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  },\n  \"properties\": {\n    \"count\": \"<integer>\",\n    \"item\": {},\n    \"keys\": [\n      \"<string>\"\n    ],\n    \"values\": [\n      \"<string>\"\n    ]\n  },\n  \"reason\": \"none\",\n  \"releaseDefinition\": {\n    \"_links\": {\n      \"links\": {\n        \"eiusmoda8a\": {}\n      }\n    },\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"projectReference\": {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  },\n  \"releaseDefinitionRevision\": \"<integer>\",\n  \"releaseNameFormat\": \"<string>\",\n  \"status\": \"abandoned\",\n  \"tags\": [\n    \"<string>\"\n  ],\n  \"triggeringArtifactAlias\": \"<string>\",\n  \"variableGroups\": [\n    {\n      \"createdBy\": {\n        \"directoryAlias\": \"minim\",\n        \"id\": \"Duis in fugiat sed\",\n        \"imageUrl\": \"quis enim cillum Lorem\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"laboris amet pariatur tempor aliqua\",\n        \"uniqueName\": \"do id sed reprehenderit\",\n        \"_links\": {\n          \"links\": {\n            \"culpa_0\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"createdOn\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"isShared\": \"<boolean>\",\n      \"modifiedBy\": {\n        \"directoryAlias\": \"velit reprehenderit\",\n        \"id\": \"velit dolor laboris consequat non\",\n        \"imageUrl\": \"occaecat esse\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"pariatur labore adipisicing\",\n        \"uniqueName\": \"laboris ex\",\n        \"_links\": {\n          \"links\": {\n            \"proident0\": {},\n            \"non2\": {},\n            \"sed_1\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"modifiedOn\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"providerData\": {},\n      \"type\": \"<string>\",\n      \"variableGroupProjectReferences\": [\n        {\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"projectReference\": {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        }\n      ],\n      \"variables\": {\n        \"magna7d1\": {\n          \"isReadOnly\": \"<boolean>\",\n          \"isSecret\": \"<boolean>\",\n          \"value\": \"<string>\"\n        }\n      }\n    }\n  ],\n  \"variables\": {\n    \"occaecat_4\": {\n      \"allowOverride\": \"<boolean>\",\n      \"isSecret\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a complete release object.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Manual Interventions",
          "filename": "Manual Interventions",
          "root": {
            "meta": {
              "name": "Manual Interventions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Manual Interventions Get",
              "filename": "Manual Interventions Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/Release/releases/{{releaseId}}/manualinterventions/{{manualInterventionId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "manualInterventionId",
                    "value": "{{manualInterventionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get manual intervention for a given release and manual intervention id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Manual Interventions List",
              "filename": "Manual Interventions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/Release/releases/{{releaseId}}/manualinterventions?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "List all manual interventions for a given release.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Manual Interventions Update",
              "filename": "Manual Interventions Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/Release/releases/{{releaseId}}/manualinterventions/{{manualInterventionId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "releaseId",
                    "value": "{{releaseId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "manualInterventionId",
                    "value": "{{manualInterventionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"comment\": \"<string>\",\n  \"status\": \"rejected\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update manual intervention.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Security Roles",
      "filename": "Security Roles",
      "root": {
        "docs": "[Roleassignments - REST API (Azure DevOps Security Roles) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/securityroles/roleassignments?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Security Roles"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Roleassignments",
          "filename": "Roleassignments",
          "root": {
            "meta": {
              "name": "Roleassignments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Roleassignments List",
              "filename": "Roleassignments List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/securityroles/scopes/{{scopeId}}/roleassignments/resources/{{resourceId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeId",
                    "value": "{{scopeId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "{{resourceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get role assignments for the resource",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Roleassignments Remove Role Assignment",
              "filename": "Roleassignments Remove Role Assignment.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/securityroles/scopes/{{scopeId}}/roleassignments/resources/{{resourceId}}/{{identityId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeId",
                    "value": "{{scopeId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "{{resourceId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "identityId",
                    "value": "{{identityId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Remove the role assignment on a resource",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Roleassignments Remove Role Assignments",
              "filename": "Roleassignments Remove Role Assignments.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/securityroles/scopes/{{scopeId}}/roleassignments/resources/{{resourceId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeId",
                    "value": "{{scopeId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "{{resourceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Roleassignments Set Role Assignment",
              "filename": "Roleassignments Set Role Assignment.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/securityroles/scopes/{{scopeId}}/roleassignments/resources/{{resourceId}}/{{identityId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeId",
                    "value": "{{scopeId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "{{resourceId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "identityId",
                    "value": "{{identityId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"roleName\": \"<string>\",\n  \"uniqueName\": \"<string>\",\n  \"userId\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set role assignment on a resource",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Roleassignments Set Role Assignments",
              "filename": "Roleassignments Set Role Assignments.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/securityroles/scopes/{{scopeId}}/roleassignments/resources/{{resourceId}}?limitToCallerIdentityDomain=<boolean>&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "limitToCallerIdentityDomain",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeId",
                    "value": "{{scopeId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resourceId",
                    "value": "{{resourceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"roleName\": \"<string>\",\n    \"uniqueName\": \"<string>\",\n    \"userId\": \"<uuid>\"\n  },\n  {\n    \"roleName\": \"<string>\",\n    \"uniqueName\": \"<string>\",\n    \"userId\": \"<uuid>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set role assignments on a resource",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Roledefinitions",
          "filename": "Roledefinitions",
          "root": {
            "meta": {
              "name": "Roledefinitions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Roledefinitions List",
              "filename": "Roledefinitions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/securityroles/scopes/{{scopeId}}/roledefinitions?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "scopeId",
                    "value": "{{scopeId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Service Endpoint",
      "filename": "Service Endpoint",
      "root": {
        "docs": "[Endpoints - REST API (Azure DevOps Service Endpoint) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Service Endpoint"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Endpointproxy",
          "filename": "Endpointproxy",
          "root": {
            "meta": {
              "name": "Endpointproxy"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Endpointproxy Query",
              "filename": "Endpointproxy Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/serviceendpoint/endpointproxy?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"callbackContextTemplate\": \"<string>\",\n  \"callbackRequiredTemplate\": \"<string>\",\n  \"dataSourceName\": \"<string>\",\n  \"endpointId\": \"<string>\",\n  \"endpointUrl\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"initialContextTemplate\": \"<string>\",\n  \"parameters\": {\n    \"sit_c3\": \"<string>\",\n    \"laborum791\": \"<string>\",\n    \"in_15\": \"<string>\"\n  },\n  \"requestContent\": \"<string>\",\n  \"requestVerb\": \"<string>\",\n  \"resultSelector\": \"<string>\",\n  \"resultTemplate\": \"<string>\",\n  \"target\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Use ExecuteServiceEndpointRequest API Instead",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Executionhistory",
          "filename": "Executionhistory",
          "root": {
            "meta": {
              "name": "Executionhistory"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Executionhistory List",
              "filename": "Executionhistory List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/serviceendpoint/{{endpointId}}/executionhistory?top=<integer>&continuationToken=<long>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<long>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "endpointId",
                    "value": "{{endpointId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get service endpoint execution records.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Endpoints",
          "filename": "Endpoints",
          "root": {
            "meta": {
              "name": "Endpoints"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Endpoints Create",
              "filename": "Endpoints Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceendpoint/endpoints?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"administratorsGroup\": {\n    \"directoryAlias\": \"veniam mollit ut incididunt\",\n    \"id\": \"amet\",\n    \"imageUrl\": \"ullamco nisi ea eiusmod\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"velit Ut dolor\",\n    \"uniqueName\": \"esse\",\n    \"_links\": {\n      \"links\": {\n        \"consequat715\": {},\n        \"id_5\": {},\n        \"dolor376\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"authorization\": {\n    \"parameters\": {\n      \"ad977\": \"<string>\",\n      \"eu1\": \"<string>\"\n    },\n    \"scheme\": \"<string>\"\n  },\n  \"createdBy\": {\n    \"directoryAlias\": \"quis\",\n    \"id\": \"dolore Excepteur irure\",\n    \"imageUrl\": \"amet commodo\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ullamco \",\n    \"uniqueName\": \"elit Duis dolore sit\",\n    \"_links\": {\n      \"links\": {\n        \"ea_8\": {},\n        \"enim3\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"data\": {\n    \"qui_e5\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"groupScopeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"isReady\": \"<boolean>\",\n  \"isShared\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"operationStatus\": {\n    \"item\": {\n      \"first\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"hasValues\": \"<boolean>\",\n      \"item\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"last\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"next\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"parent\": \"<string>\",\n      \"path\": \"<string>\",\n      \"previous\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"root\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"type\": \"<string>\"\n    },\n    \"type\": \"<string>\"\n  },\n  \"owner\": \"<string>\",\n  \"readersGroup\": {\n    \"directoryAlias\": \"aute\",\n    \"id\": \"dolor fugiat dolor adipisicing\",\n    \"imageUrl\": \"sunt ex et culpa\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"nostrud laborum voluptate\",\n    \"uniqueName\": \"laborum sunt irure minim\",\n    \"_links\": {\n      \"links\": {\n        \"velit09\": {},\n        \"cillum_4\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"serviceEndpointProjectReferences\": [\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectReference\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectReference\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"type\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a new service endpoint",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Endpoints Delete",
              "filename": "Endpoints Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceendpoint/endpoints/{{endpointId}}?projectIds=<string>&deep=<boolean>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "projectIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "deep",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "endpointId",
                    "value": "{{endpointId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a service endpoint",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Endpoints Get Service Endpoints By Names",
              "filename": "Endpoints Get Service Endpoints By Names.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/serviceendpoint/endpoints?endpointNames=<string>&type={{type}}&authSchemes=<string>&owner=<string>&includeFailed=<boolean>&includeDetails=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "endpointNames",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "type",
                    "value": "{{type}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "authSchemes",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "owner",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeFailed",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the service endpoints by name.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Endpoints Get Service Endpoints With Refreshed Authentication",
              "filename": "Endpoints Get Service Endpoints With Refreshed Authentication.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/serviceendpoint/endpoints?endpointIds=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "endpointIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"endpointId\": \"<uuid>\",\n    \"scope\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"tokenValidityInMinutes\": \"<integer>\"\n  },\n  {\n    \"endpointId\": \"<uuid>\",\n    \"scope\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"tokenValidityInMinutes\": \"<integer>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the service endpoints and patch new authorization parameters",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Endpoints Get",
              "filename": "Endpoints Get.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/serviceendpoint/endpoints/{{endpointId}}?actionFilter=view&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "actionFilter",
                    "value": "view",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "endpointId",
                    "value": "{{endpointId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the service endpoint details.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Endpoints Share Service Endpoint",
              "filename": "Endpoints Share Service Endpoint.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceendpoint/endpoints/{{endpointId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "endpointId",
                    "value": "{{endpointId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectReference\": {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectReference\": {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    }\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Share service endpoint across projects",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Endpoints Update Service Endpoint",
              "filename": "Endpoints Update Service Endpoint.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceendpoint/endpoints/{{endpointId}}?operation=<string>&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "operation",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "endpointId",
                    "value": "{{endpointId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"administratorsGroup\": {\n    \"directoryAlias\": \"veniam mollit ut incididunt\",\n    \"id\": \"amet\",\n    \"imageUrl\": \"ullamco nisi ea eiusmod\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"velit Ut dolor\",\n    \"uniqueName\": \"esse\",\n    \"_links\": {\n      \"links\": {\n        \"consequat715\": {},\n        \"id_5\": {},\n        \"dolor376\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"authorization\": {\n    \"parameters\": {\n      \"ad977\": \"<string>\",\n      \"eu1\": \"<string>\"\n    },\n    \"scheme\": \"<string>\"\n  },\n  \"createdBy\": {\n    \"directoryAlias\": \"quis\",\n    \"id\": \"dolore Excepteur irure\",\n    \"imageUrl\": \"amet commodo\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ullamco \",\n    \"uniqueName\": \"elit Duis dolore sit\",\n    \"_links\": {\n      \"links\": {\n        \"ea_8\": {},\n        \"enim3\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"data\": {\n    \"qui_e5\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"groupScopeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"isReady\": \"<boolean>\",\n  \"isShared\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"operationStatus\": {\n    \"item\": {\n      \"first\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"hasValues\": \"<boolean>\",\n      \"item\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"last\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"next\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"parent\": \"<string>\",\n      \"path\": \"<string>\",\n      \"previous\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"root\": {\n        \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n      },\n      \"type\": \"<string>\"\n    },\n    \"type\": \"<string>\"\n  },\n  \"owner\": \"<string>\",\n  \"readersGroup\": {\n    \"directoryAlias\": \"aute\",\n    \"id\": \"dolor fugiat dolor adipisicing\",\n    \"imageUrl\": \"sunt ex et culpa\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"nostrud laborum voluptate\",\n    \"uniqueName\": \"laborum sunt irure minim\",\n    \"_links\": {\n      \"links\": {\n        \"velit09\": {},\n        \"cillum_4\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"serviceEndpointProjectReferences\": [\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectReference\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectReference\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"type\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the service endpoint",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Endpoints Update Service Endpoints",
              "filename": "Endpoints Update Service Endpoints.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceendpoint/endpoints?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"administratorsGroup\": {\n      \"directoryAlias\": \"anim dolor amet incididunt\",\n      \"id\": \"ullamco incididunt et ut aute\",\n      \"imageUrl\": \"anim amet Duis nostrud\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"veniam dolore elit proident\",\n      \"uniqueName\": \"anim minim ex dolore\",\n      \"_links\": {\n        \"links\": {\n          \"incididunt_8\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"authorization\": {\n      \"parameters\": {\n        \"pariatur_a2\": \"<string>\",\n        \"animd\": \"<string>\",\n        \"nullaaeb\": \"<string>\",\n        \"ut7bd\": \"<string>\"\n      },\n      \"scheme\": \"<string>\"\n    },\n    \"createdBy\": {\n      \"directoryAlias\": \"sit nostrud aliquip Duis\",\n      \"id\": \"minim ut id\",\n      \"imageUrl\": \"et velit\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"ipsum incididunt\",\n      \"uniqueName\": \"deserunt sunt\",\n      \"_links\": {\n        \"links\": {\n          \"sit_ec\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"data\": {\n      \"proidentf\": \"<string>\"\n    },\n    \"description\": \"<string>\",\n    \"groupScopeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"isReady\": \"<boolean>\",\n    \"isShared\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"operationStatus\": {\n      \"item\": {\n        \"first\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"hasValues\": \"<boolean>\",\n        \"item\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"last\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"next\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"parent\": \"<string>\",\n        \"path\": \"<string>\",\n        \"previous\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"root\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"type\": \"<string>\"\n      },\n      \"type\": \"<string>\"\n    },\n    \"owner\": \"<string>\",\n    \"readersGroup\": {\n      \"directoryAlias\": \"veniam do enim\",\n      \"id\": \"nulla Duis cupidatat est\",\n      \"imageUrl\": \"amet qui irure\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"labore cupidatat exercitation\",\n      \"uniqueName\": \"Excepteur \",\n      \"_links\": {\n        \"links\": {\n          \"consectetur68\": {},\n          \"aliquip0\": {},\n          \"nisi_47\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"serviceEndpointProjectReferences\": [\n      {\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"projectReference\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"projectReference\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  {\n    \"administratorsGroup\": {\n      \"directoryAlias\": \"cillum adipisicing sunt et\",\n      \"id\": \"ipsum cillum deser\",\n      \"imageUrl\": \"q\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"nostrud culpa occaecat\",\n      \"uniqueName\": \"ex cupidatat Excepteur\",\n      \"_links\": {\n        \"links\": {\n          \"sint_19\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"authorization\": {\n      \"parameters\": {\n        \"officia_53\": \"<string>\",\n        \"animc1\": \"<string>\",\n        \"aliquip_a4\": \"<string>\"\n      },\n      \"scheme\": \"<string>\"\n    },\n    \"createdBy\": {\n      \"directoryAlias\": \"Lorem minim sed \",\n      \"id\": \"in\",\n      \"imageUrl\": \"aliquip\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"eu labore laboris reprehenderit\",\n      \"uniqueName\": \"amet enim sunt sint\",\n      \"_links\": {\n        \"links\": {\n          \"reprehenderit33\": {},\n          \"qui_595\": {},\n          \"estf\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"data\": {\n      \"sunta\": \"<string>\",\n      \"doloref\": \"<string>\"\n    },\n    \"description\": \"<string>\",\n    \"groupScopeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"isReady\": \"<boolean>\",\n    \"isShared\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"operationStatus\": {\n      \"item\": {\n        \"first\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"hasValues\": \"<boolean>\",\n        \"item\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"last\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"next\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"parent\": \"<string>\",\n        \"path\": \"<string>\",\n        \"previous\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"root\": {\n          \"value\": \"<Circular reference to #/components/schemas/JToken detected>\"\n        },\n        \"type\": \"<string>\"\n      },\n      \"type\": \"<string>\"\n    },\n    \"owner\": \"<string>\",\n    \"readersGroup\": {\n      \"directoryAlias\": \"Lorem nulla culpa reprehenderit laboris\",\n      \"id\": \"ad proident\",\n      \"imageUrl\": \"ame\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"sunt ipsum occaecat fugiat\",\n      \"uniqueName\": \"mollit exercitation amet veniam\",\n      \"_links\": {\n        \"links\": {\n          \"aliqua_2\": {},\n          \"eiusmod_8\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"serviceEndpointProjectReferences\": [\n      {\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"projectReference\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"projectReference\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the service endpoints.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Types",
          "filename": "Types",
          "root": {
            "meta": {
              "name": "Types"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Types List",
              "filename": "Types List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/serviceendpoint/types?type={{type}}&scheme=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "type",
                    "value": "{{type}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "scheme",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get service endpoint types.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Service Hooks",
      "filename": "Service Hooks",
      "root": {
        "docs": "[Service hooks REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/hooks/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Service Hooks"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Diagnostics",
          "filename": "Diagnostics",
          "root": {
            "meta": {
              "name": "Diagnostics"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Diagnostics Get",
              "filename": "Diagnostics Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions/{{subscriptionId}}/diagnostics?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "{{subscriptionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Diagnostics Update",
              "filename": "Diagnostics Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions/{{subscriptionId}}/diagnostics?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "{{subscriptionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"deliveryResults\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"deliveryTracing\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"evaluationTracing\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Consumers",
          "filename": "Consumers",
          "root": {
            "meta": {
              "name": "Consumers"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Consumers Get Consumer Action",
              "filename": "Consumers Get Consumer Action.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/consumers/{{consumerId}}/actions/{{consumerActionId}}?publisherId=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "publisherId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "consumerId",
                    "value": "{{consumerId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "consumerActionId",
                    "value": "{{consumerActionId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get details about a specific consumer action.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Consumers Get",
              "filename": "Consumers Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/consumers/{{consumerId}}?publisherId=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "publisherId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "consumerId",
                    "value": "{{consumerId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific consumer service. Optionally filter out consumer actions that do not support any event types for the specified publisher.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Consumers List Consumer Actions",
              "filename": "Consumers List Consumer Actions.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/consumers/{{consumerId}}/actions?publisherId=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "publisherId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "consumerId",
                    "value": "{{consumerId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of consumer actions for a specific consumer.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Consumers List",
              "filename": "Consumers List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/consumers?publisherId=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "publisherId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of available service hook consumer services. Optionally filter by consumers that support at least one event type from the specific publisher.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Subscriptions",
          "filename": "Subscriptions",
          "root": {
            "meta": {
              "name": "Subscriptions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Subscriptions Create Subscriptions Query",
              "filename": "Subscriptions Create Subscriptions Query.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptionsquery?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"consumerActionId\": \"<string>\",\n  \"consumerId\": \"<string>\",\n  \"consumerInputFilters\": [\n    {\n      \"conditions\": [\n        {\n          \"caseSensitive\": \"<boolean>\",\n          \"inputId\": \"<string>\",\n          \"inputValue\": \"<string>\",\n          \"operator\": \"equals\"\n        },\n        {\n          \"caseSensitive\": \"<boolean>\",\n          \"inputId\": \"<string>\",\n          \"inputValue\": \"<string>\",\n          \"operator\": \"equals\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"caseSensitive\": \"<boolean>\",\n          \"inputId\": \"<string>\",\n          \"inputValue\": \"<string>\",\n          \"operator\": \"equals\"\n        },\n        {\n          \"caseSensitive\": \"<boolean>\",\n          \"inputId\": \"<string>\",\n          \"inputValue\": \"<string>\",\n          \"operator\": \"notEquals\"\n        }\n      ]\n    }\n  ],\n  \"eventType\": \"<string>\",\n  \"publisherId\": \"<string>\",\n  \"publisherInputFilters\": [\n    {\n      \"conditions\": [\n        {\n          \"caseSensitive\": \"<boolean>\",\n          \"inputId\": \"<string>\",\n          \"inputValue\": \"<string>\",\n          \"operator\": \"equals\"\n        },\n        {\n          \"caseSensitive\": \"<boolean>\",\n          \"inputId\": \"<string>\",\n          \"inputValue\": \"<string>\",\n          \"operator\": \"equals\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"caseSensitive\": \"<boolean>\",\n          \"inputId\": \"<string>\",\n          \"inputValue\": \"<string>\",\n          \"operator\": \"equals\"\n        },\n        {\n          \"caseSensitive\": \"<boolean>\",\n          \"inputId\": \"<string>\",\n          \"inputValue\": \"<string>\",\n          \"operator\": \"equals\"\n        }\n      ]\n    }\n  ],\n  \"results\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"anim_69a\": {}\n        }\n      },\n      \"actionDescription\": \"<string>\",\n      \"consumerActionId\": \"<string>\",\n      \"consumerId\": \"<string>\",\n      \"consumerInputs\": {\n        \"sit_69\": \"<string>\"\n      },\n      \"createdBy\": {\n        \"directoryAlias\": \"anim et nisi\",\n        \"id\": \"laborum tempor\",\n        \"imageUrl\": \"ex qui\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"vo\",\n        \"uniqueName\": \"aliquip deserunt ipsum\",\n        \"_links\": {\n          \"links\": {\n            \"tempor_ca\": {},\n            \"reprehenderit5\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"createdDate\": \"<dateTime>\",\n      \"eventDescription\": \"<string>\",\n      \"eventType\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastProbationRetryDate\": \"<dateTime>\",\n      \"modifiedBy\": {\n        \"directoryAlias\": \"amet incididunt Ut\",\n        \"id\": \"minim et do\",\n        \"imageUrl\": \"reprehenderit\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"velit c\",\n        \"uniqueName\": \"labore id\",\n        \"_links\": {\n          \"links\": {\n            \"incididunt7\": {},\n            \"ipsum_2\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"modifiedDate\": \"<dateTime>\",\n      \"probationRetries\": \"<string>\",\n      \"publisherId\": \"<string>\",\n      \"publisherInputs\": {\n        \"aute_f66\": \"<string>\",\n        \"elitb8\": \"<string>\",\n        \"veniam0a\": \"<string>\"\n      },\n      \"resourceVersion\": \"<string>\",\n      \"status\": \"disabledByInactiveIdentity\",\n      \"subscriber\": {\n        \"directoryAlias\": \"tempor\",\n        \"id\": \"amet in laboris\",\n        \"imageUrl\": \"dolore\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"sunt\",\n        \"uniqueName\": \"dolor deserunt labore aute culpa\",\n        \"_links\": {\n          \"links\": {\n            \"do_28\": {},\n            \"in_a66\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    },\n    {\n      \"_links\": {\n        \"links\": {\n          \"ipsum5a6\": {},\n          \"enim_0a\": {}\n        }\n      },\n      \"actionDescription\": \"<string>\",\n      \"consumerActionId\": \"<string>\",\n      \"consumerId\": \"<string>\",\n      \"consumerInputs\": {\n        \"officia_7\": \"<string>\"\n      },\n      \"createdBy\": {\n        \"directoryAlias\": \"esse adipisicing\",\n        \"id\": \"consequat\",\n        \"imageUrl\": \"velit ea\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"Excepteur sunt Ut minim et\",\n        \"uniqueName\": \"minim labore dolor ea\",\n        \"_links\": {\n          \"links\": {\n            \"cillum_29\": {},\n            \"idd\": {},\n            \"reprehenderit__\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"createdDate\": \"<dateTime>\",\n      \"eventDescription\": \"<string>\",\n      \"eventType\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastProbationRetryDate\": \"<dateTime>\",\n      \"modifiedBy\": {\n        \"directoryAlias\": \"tempor sunt\",\n        \"id\": \"qui veniam non nostrud elit\",\n        \"imageUrl\": \"deserunt sed id\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"amet in\",\n        \"uniqueName\": \"irure deserunt reprehenderit pariatur Lorem\",\n        \"_links\": {\n          \"links\": {\n            \"incididunt_\": {},\n            \"et_08b\": {},\n            \"nulla297\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"modifiedDate\": \"<dateTime>\",\n      \"probationRetries\": \"<string>\",\n      \"publisherId\": \"<string>\",\n      \"publisherInputs\": {\n        \"commodoa8\": \"<string>\"\n      },\n      \"resourceVersion\": \"<string>\",\n      \"status\": \"onProbation\",\n      \"subscriber\": {\n        \"directoryAlias\": \"officia qui\",\n        \"id\": \"culpa dolor cupidatat\",\n        \"imageUrl\": \"est pariatur qui dolor\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"elit ullamco in laborum\",\n        \"uniqueName\": \"mollit incididunt amet\",\n        \"_links\": {\n          \"links\": {\n            \"officia__a\": {},\n            \"aliqua92\": {},\n            \"incididunt_be\": {},\n            \"commodo06b\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    }\n  ],\n  \"subscriberId\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Query for service hook subscriptions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Create",
              "filename": "Subscriptions Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"utb5d\": {}\n    }\n  },\n  \"actionDescription\": \"<string>\",\n  \"consumerActionId\": \"<string>\",\n  \"consumerId\": \"<string>\",\n  \"consumerInputs\": {\n    \"nostrudf\": \"<string>\",\n    \"culpa_49\": \"<string>\"\n  },\n  \"createdBy\": {\n    \"directoryAlias\": \"irure\",\n    \"id\": \"in do aute voluptate labore\",\n    \"imageUrl\": \"adipisicing commodo\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"nisi est deserunt\",\n    \"uniqueName\": \"in irure culpa\",\n    \"_links\": {\n      \"links\": {\n        \"deserunt61\": {},\n        \"esse_23\": {},\n        \"cupidatat_2e\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"createdDate\": \"<dateTime>\",\n  \"eventDescription\": \"<string>\",\n  \"eventType\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"lastProbationRetryDate\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"directoryAlias\": \"voluptate dolor\",\n    \"id\": \"aliquip non veniam id consequat\",\n    \"imageUrl\": \"Duis ullamco\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ut consequat\",\n    \"uniqueName\": \"cupidatat nulla id nostrud non\",\n    \"_links\": {\n      \"links\": {\n        \"pariaturd53\": {},\n        \"irure_27\": {},\n        \"ea0\": {},\n        \"Excepteur_b0\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"modifiedDate\": \"<dateTime>\",\n  \"probationRetries\": \"<string>\",\n  \"publisherId\": \"<string>\",\n  \"publisherInputs\": {\n    \"nostrud_694\": \"<string>\"\n  },\n  \"resourceVersion\": \"<string>\",\n  \"status\": \"onProbation\",\n  \"subscriber\": {\n    \"directoryAlias\": \"consectetur magna minim\",\n    \"id\": \"ut eu\",\n    \"imageUrl\": \"labore amet qui id fugiat\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"tempor minim do pariatur in\",\n    \"uniqueName\": \"Lorem ut\",\n    \"_links\": {\n      \"links\": {\n        \"in729\": {},\n        \"laboris978\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Delete",
              "filename": "Subscriptions Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions/{{subscriptionId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a specific service hooks subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Get",
              "filename": "Subscriptions Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions/{{subscriptionId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific service hooks subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions List",
              "filename": "Subscriptions List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions?publisherId={{publisherId}}&eventType={{eventType}}&consumerId={{consumerId}}&consumerActionId={{consumerActionId}}&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "publisherId",
                    "value": "{{publisherId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "eventType",
                    "value": "{{eventType}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "consumerId",
                    "value": "{{consumerId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "consumerActionId",
                    "value": "{{consumerActionId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of subscriptions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Subscriptions Replace Subscription",
              "filename": "Subscriptions Replace Subscription.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions/{{subscriptionId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"utb5d\": {}\n    }\n  },\n  \"actionDescription\": \"<string>\",\n  \"consumerActionId\": \"<string>\",\n  \"consumerId\": \"<string>\",\n  \"consumerInputs\": {\n    \"nostrudf\": \"<string>\",\n    \"culpa_49\": \"<string>\"\n  },\n  \"createdBy\": {\n    \"directoryAlias\": \"irure\",\n    \"id\": \"in do aute voluptate labore\",\n    \"imageUrl\": \"adipisicing commodo\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"nisi est deserunt\",\n    \"uniqueName\": \"in irure culpa\",\n    \"_links\": {\n      \"links\": {\n        \"deserunt61\": {},\n        \"esse_23\": {},\n        \"cupidatat_2e\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"createdDate\": \"<dateTime>\",\n  \"eventDescription\": \"<string>\",\n  \"eventType\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"lastProbationRetryDate\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"directoryAlias\": \"voluptate dolor\",\n    \"id\": \"aliquip non veniam id consequat\",\n    \"imageUrl\": \"Duis ullamco\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"ut consequat\",\n    \"uniqueName\": \"cupidatat nulla id nostrud non\",\n    \"_links\": {\n      \"links\": {\n        \"pariaturd53\": {},\n        \"irure_27\": {},\n        \"ea0\": {},\n        \"Excepteur_b0\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"modifiedDate\": \"<dateTime>\",\n  \"probationRetries\": \"<string>\",\n  \"publisherId\": \"<string>\",\n  \"publisherInputs\": {\n    \"nostrud_694\": \"<string>\"\n  },\n  \"resourceVersion\": \"<string>\",\n  \"status\": \"onProbation\",\n  \"subscriber\": {\n    \"directoryAlias\": \"consectetur magna minim\",\n    \"id\": \"ut eu\",\n    \"imageUrl\": \"labore amet qui id fugiat\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"tempor minim do pariatur in\",\n    \"uniqueName\": \"Lorem ut\",\n    \"_links\": {\n      \"links\": {\n        \"in729\": {},\n        \"laboris978\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a subscription. <param name=\"subscriptionId\">ID for a subscription that you wish to update.</param>",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Notifications",
          "filename": "Notifications",
          "root": {
            "meta": {
              "name": "Notifications"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Notifications Create",
              "filename": "Notifications Create.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/testnotifications?useRealData=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "useRealData",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"createdDate\": \"<dateTime>\",\n  \"details\": {\n    \"completedDate\": \"<dateTime>\",\n    \"consumerActionId\": \"<string>\",\n    \"consumerId\": \"<string>\",\n    \"consumerInputs\": {\n      \"exercitationbdd\": \"<string>\"\n    },\n    \"dequeuedDate\": \"<dateTime>\",\n    \"errorDetail\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"event\": {\n      \"createdDate\": \"<dateTime>\",\n      \"detailedMessage\": {\n        \"html\": \"<string>\",\n        \"markdown\": \"<string>\",\n        \"text\": \"<string>\"\n      },\n      \"eventType\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"message\": {\n        \"html\": \"<string>\",\n        \"markdown\": \"<string>\",\n        \"text\": \"<string>\"\n      },\n      \"publisherId\": \"<string>\",\n      \"resource\": {},\n      \"resourceContainers\": {\n        \"veniam_f67\": {\n          \"baseUrl\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"adipisicinge30\": {\n          \"baseUrl\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      },\n      \"resourceVersion\": \"<string>\",\n      \"sessionToken\": {\n        \"error\": \"<string>\",\n        \"token\": \"<string>\",\n        \"validTo\": \"<dateTime>\"\n      }\n    },\n    \"eventType\": \"<string>\",\n    \"processedDate\": \"<dateTime>\",\n    \"publisherId\": \"<string>\",\n    \"publisherInputs\": {\n      \"ex_cc\": \"<string>\",\n      \"nisif\": \"<string>\"\n    },\n    \"queuedDate\": \"<dateTime>\",\n    \"request\": \"<string>\",\n    \"requestAttempts\": \"<integer>\",\n    \"requestDuration\": \"<double>\",\n    \"response\": \"<string>\"\n  },\n  \"eventId\": \"<uuid>\",\n  \"id\": \"<integer>\",\n  \"modifiedDate\": \"<dateTime>\",\n  \"result\": \"succeeded\",\n  \"status\": \"requestInProgress\",\n  \"subscriberId\": \"<uuid>\",\n  \"subscriptionId\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Sends a test notification. This is useful for verifying the configuration of an updated or new service hooks subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Notifications Get",
              "filename": "Notifications Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions/{{subscriptionId}}/notifications/{{notificationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "notificationId",
                    "value": "{{notificationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific notification for a subscription.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Notifications List",
              "filename": "Notifications List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/subscriptions/{{subscriptionId}}/notifications?status=requestInProgress&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "status",
                    "value": "requestInProgress",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "maxResults",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "result",
                    "value": "filtered",
                    "type": "query",
                    "enabled": false
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subscriptionId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of notifications for a specific subscription. A notification includes details about the event, the request to and the response from the consumer service.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Notifications Query",
              "filename": "Notifications Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/notificationsquery?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"associatedSubscriptions\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"sunt_3\": {},\n          \"dolore_5_8\": {}\n        }\n      },\n      \"actionDescription\": \"<string>\",\n      \"consumerActionId\": \"<string>\",\n      \"consumerId\": \"<string>\",\n      \"consumerInputs\": {\n        \"in__7c\": \"<string>\",\n        \"culpa8b8\": \"<string>\",\n        \"ade\": \"<string>\",\n        \"tempor89e\": \"<string>\"\n      },\n      \"createdBy\": {\n        \"directoryAlias\": \"nostrud\",\n        \"id\": \"dolor\",\n        \"imageUrl\": \"elit anim aliqua\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"minim qui nulla eiusmod\",\n        \"uniqueName\": \"ut i\",\n        \"_links\": {\n          \"links\": {\n            \"cillum_a35\": {},\n            \"elit523\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"createdDate\": \"<dateTime>\",\n      \"eventDescription\": \"<string>\",\n      \"eventType\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastProbationRetryDate\": \"<dateTime>\",\n      \"modifiedBy\": {\n        \"directoryAlias\": \"commodo dolor fugiat Duis\",\n        \"id\": \"culpa commodo ad minim eu\",\n        \"imageUrl\": \"e\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"officia velit cillum ea\",\n        \"uniqueName\": \"amet esse reprehenderit\",\n        \"_links\": {\n          \"links\": {\n            \"nisib6\": {},\n            \"esse6\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"modifiedDate\": \"<dateTime>\",\n      \"probationRetries\": \"<string>\",\n      \"publisherId\": \"<string>\",\n      \"publisherInputs\": {\n        \"do_e44\": \"<string>\"\n      },\n      \"resourceVersion\": \"<string>\",\n      \"status\": \"disabledByUser\",\n      \"subscriber\": {\n        \"directoryAlias\": \"dolor eu ea deserunt labore\",\n        \"id\": \"anim irure dolor\",\n        \"imageUrl\": \"sed quis veniam deserunt cupidatat\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"irure occaecat laborum\",\n        \"uniqueName\": \"in ex magna exercitation\",\n        \"_links\": {\n          \"links\": {\n            \"pariatur_661\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    },\n    {\n      \"_links\": {\n        \"links\": {\n          \"incididunt_ce4\": {},\n          \"cupidatat_69\": {}\n        }\n      },\n      \"actionDescription\": \"<string>\",\n      \"consumerActionId\": \"<string>\",\n      \"consumerId\": \"<string>\",\n      \"consumerInputs\": {\n        \"reprehenderit_7\": \"<string>\",\n        \"irure_a\": \"<string>\"\n      },\n      \"createdBy\": {\n        \"directoryAlias\": \"adipisicing\",\n        \"id\": \"ea\",\n        \"imageUrl\": \"Duis elit nulla labore\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"enim cillum ea cupidatat\",\n        \"uniqueName\": \"fugiat ullamco\",\n        \"_links\": {\n          \"links\": {\n            \"nisif\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"createdDate\": \"<dateTime>\",\n      \"eventDescription\": \"<string>\",\n      \"eventType\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"lastProbationRetryDate\": \"<dateTime>\",\n      \"modifiedBy\": {\n        \"directoryAlias\": \"irure\",\n        \"id\": \"amet magna ad commodo\",\n        \"imageUrl\": \"ullamco\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"occaecat\",\n        \"uniqueName\": \"qui\",\n        \"_links\": {\n          \"links\": {\n            \"laborum5c3\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"modifiedDate\": \"<dateTime>\",\n      \"probationRetries\": \"<string>\",\n      \"publisherId\": \"<string>\",\n      \"publisherInputs\": {\n        \"nonf\": \"<string>\"\n      },\n      \"resourceVersion\": \"<string>\",\n      \"status\": \"disabledBySystem\",\n      \"subscriber\": {\n        \"directoryAlias\": \"veniam sed Excepteur enim magna\",\n        \"id\": \"fugiat occaecat i\",\n        \"imageUrl\": \"Ut aute fugiat\",\n        \"inactive\": false,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"ad mollit deserunt\",\n        \"uniqueName\": \"nulla aliquip\",\n        \"_links\": {\n          \"links\": {\n            \"nisi_c13\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    }\n  ],\n  \"includeDetails\": \"<boolean>\",\n  \"maxCreatedDate\": \"<dateTime>\",\n  \"maxResults\": \"<integer>\",\n  \"maxResultsPerSubscription\": \"<integer>\",\n  \"minCreatedDate\": \"<dateTime>\",\n  \"publisherId\": \"<string>\",\n  \"results\": [\n    {\n      \"createdDate\": \"<dateTime>\",\n      \"details\": {\n        \"completedDate\": \"<dateTime>\",\n        \"consumerActionId\": \"<string>\",\n        \"consumerId\": \"<string>\",\n        \"consumerInputs\": {\n          \"ex90\": \"<string>\",\n          \"consectetur_8_\": \"<string>\",\n          \"ipsum7b_\": \"<string>\"\n        },\n        \"dequeuedDate\": \"<dateTime>\",\n        \"errorDetail\": \"<string>\",\n        \"errorMessage\": \"<string>\",\n        \"event\": {\n          \"createdDate\": \"<dateTime>\",\n          \"detailedMessage\": {\n            \"html\": \"<string>\",\n            \"markdown\": \"<string>\",\n            \"text\": \"<string>\"\n          },\n          \"eventType\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"message\": {\n            \"html\": \"<string>\",\n            \"markdown\": \"<string>\",\n            \"text\": \"<string>\"\n          },\n          \"publisherId\": \"<string>\",\n          \"resource\": {},\n          \"resourceContainers\": {\n            \"anim6\": {\n              \"baseUrl\": \"<string>\",\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          },\n          \"resourceVersion\": \"<string>\",\n          \"sessionToken\": {\n            \"error\": \"<string>\",\n            \"token\": \"<string>\",\n            \"validTo\": \"<dateTime>\"\n          }\n        },\n        \"eventType\": \"<string>\",\n        \"processedDate\": \"<dateTime>\",\n        \"publisherId\": \"<string>\",\n        \"publisherInputs\": {\n          \"tempor_4\": \"<string>\",\n          \"in_895\": \"<string>\",\n          \"officia_8_3\": \"<string>\"\n        },\n        \"queuedDate\": \"<dateTime>\",\n        \"request\": \"<string>\",\n        \"requestAttempts\": \"<integer>\",\n        \"requestDuration\": \"<double>\",\n        \"response\": \"<string>\"\n      },\n      \"eventId\": \"<uuid>\",\n      \"id\": \"<integer>\",\n      \"modifiedDate\": \"<dateTime>\",\n      \"result\": \"filtered\",\n      \"status\": \"completed\",\n      \"subscriberId\": \"<uuid>\",\n      \"subscriptionId\": \"<uuid>\"\n    },\n    {\n      \"createdDate\": \"<dateTime>\",\n      \"details\": {\n        \"completedDate\": \"<dateTime>\",\n        \"consumerActionId\": \"<string>\",\n        \"consumerId\": \"<string>\",\n        \"consumerInputs\": {\n          \"nulla03\": \"<string>\"\n        },\n        \"dequeuedDate\": \"<dateTime>\",\n        \"errorDetail\": \"<string>\",\n        \"errorMessage\": \"<string>\",\n        \"event\": {\n          \"createdDate\": \"<dateTime>\",\n          \"detailedMessage\": {\n            \"html\": \"<string>\",\n            \"markdown\": \"<string>\",\n            \"text\": \"<string>\"\n          },\n          \"eventType\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"message\": {\n            \"html\": \"<string>\",\n            \"markdown\": \"<string>\",\n            \"text\": \"<string>\"\n          },\n          \"publisherId\": \"<string>\",\n          \"resource\": {},\n          \"resourceContainers\": {\n            \"id_dbb\": {\n              \"baseUrl\": \"<string>\",\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          },\n          \"resourceVersion\": \"<string>\",\n          \"sessionToken\": {\n            \"error\": \"<string>\",\n            \"token\": \"<string>\",\n            \"validTo\": \"<dateTime>\"\n          }\n        },\n        \"eventType\": \"<string>\",\n        \"processedDate\": \"<dateTime>\",\n        \"publisherId\": \"<string>\",\n        \"publisherInputs\": {\n          \"minim_a\": \"<string>\"\n        },\n        \"queuedDate\": \"<dateTime>\",\n        \"request\": \"<string>\",\n        \"requestAttempts\": \"<integer>\",\n        \"requestDuration\": \"<double>\",\n        \"response\": \"<string>\"\n      },\n      \"eventId\": \"<uuid>\",\n      \"id\": \"<integer>\",\n      \"modifiedDate\": \"<dateTime>\",\n      \"result\": \"filtered\",\n      \"status\": \"requestInProgress\",\n      \"subscriberId\": \"<uuid>\",\n      \"subscriptionId\": \"<uuid>\"\n    }\n  ],\n  \"resultType\": \"pending\",\n  \"status\": \"queued\",\n  \"subscriptionIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"summary\": [\n    {\n      \"results\": [\n        {\n          \"notificationCount\": \"<integer>\",\n          \"result\": \"pending\"\n        },\n        {\n          \"notificationCount\": \"<integer>\",\n          \"result\": \"failed\"\n        }\n      ],\n      \"subscriptionId\": \"<uuid>\"\n    },\n    {\n      \"results\": [\n        {\n          \"notificationCount\": \"<integer>\",\n          \"result\": \"pending\"\n        },\n        {\n          \"notificationCount\": \"<integer>\",\n          \"result\": \"failed\"\n        }\n      ],\n      \"subscriptionId\": \"<uuid>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Query for notifications. A notification includes details about the event, the request to and the response from the consumer service.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Publishers",
          "filename": "Publishers",
          "root": {
            "meta": {
              "name": "Publishers"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Publishers Get Event Type",
              "filename": "Publishers Get Event Type.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/publishers/{{publisherId}}/eventtypes/{{eventType}}Id?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "publisherId",
                    "value": "{{publisherId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "eventTypeId",
                    "value": "{{eventTypeId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific event type.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Publishers Get",
              "filename": "Publishers Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/publishers/{{publisherId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "publisherId",
                    "value": "{{publisherId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific service hooks publisher.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Publishers List Event Types",
              "filename": "Publishers List Event Types.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/publishers/{{publisherId}}/eventtypes?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "publisherId",
                    "value": "{{publisherId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the event types for a specific publisher.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Publishers List",
              "filename": "Publishers List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/publishers?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n  expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Verify the response content type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Response time is within the acceptable range\", function () {\r\n  expect(res.getResponseTime()).to.be.below(200);\r\n});\r\n\r\n\r\ntest(\"Value array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.be.an('array');\r\n    expect(responseData.value).to.have.lengthOf(0);\r\n});\r\n\r\n",
                "docs": "Get a list of publishers.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Publishers Query Input Values",
              "filename": "Publishers Query Input Values.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/publishers/{{publisherId}}/inputValuesQuery?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "publisherId",
                    "value": "{{publisherId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"currentValues\": {\n    \"ut7\": \"<string>\"\n  },\n  \"inputValues\": [\n    {\n      \"defaultValue\": \"<string>\",\n      \"error\": {\n        \"message\": \"<string>\"\n      },\n      \"inputId\": \"<string>\",\n      \"isDisabled\": \"<boolean>\",\n      \"isLimitedToPossibleValues\": \"<boolean>\",\n      \"isReadOnly\": \"<boolean>\",\n      \"possibleValues\": [\n        {\n          \"data\": {\n            \"ex_230\": {}\n          },\n          \"displayValue\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"data\": {\n            \"est_b\": {},\n            \"officia_6d\": {},\n            \"eiusmod0e\": {}\n          },\n          \"displayValue\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"defaultValue\": \"<string>\",\n      \"error\": {\n        \"message\": \"<string>\"\n      },\n      \"inputId\": \"<string>\",\n      \"isDisabled\": \"<boolean>\",\n      \"isLimitedToPossibleValues\": \"<boolean>\",\n      \"isReadOnly\": \"<boolean>\",\n      \"possibleValues\": [\n        {\n          \"data\": {\n            \"qui91\": {},\n            \"amet_f_2\": {},\n            \"occaecat5f9\": {}\n          },\n          \"displayValue\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"data\": {\n            \"occaecat_9\": {},\n            \"officia71\": {},\n            \"cupidatat78b\": {},\n            \"pariatur_c5\": {}\n          },\n          \"displayValue\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"resource\": {}\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Publishers Query Publishers",
              "filename": "Publishers Query Publishers.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/hooks/publishersquery?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"publisherIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"publisherInputs\": {\n    \"incididuntaa\": \"<string>\",\n    \"cillum_b\": \"<string>\"\n  },\n  \"results\": [\n    {\n      \"_links\": {\n        \"links\": {\n          \"ullamco_8d\": {},\n          \"in37b\": {},\n          \"commodo_c5e\": {},\n          \"aliqua42\": {}\n        }\n      },\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inputDescriptors\": [\n        {\n          \"dependencyInputIds\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"description\": \"<string>\",\n          \"groupName\": \"<string>\",\n          \"hasDynamicValueInformation\": \"<boolean>\",\n          \"id\": \"<string>\",\n          \"inputMode\": \"combo\",\n          \"isConfidential\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"properties\": {\n            \"irure_5d1\": {},\n            \"ipsum_19\": {}\n          },\n          \"type\": \"<string>\",\n          \"useInDefaultDescription\": \"<boolean>\",\n          \"validation\": {\n            \"dataType\": \"number\",\n            \"isRequired\": \"<boolean>\",\n            \"maxLength\": \"<integer>\",\n            \"maxValue\": \"<string>\",\n            \"minLength\": \"<integer>\",\n            \"minValue\": \"<string>\",\n            \"pattern\": \"<string>\",\n            \"patternMismatchErrorMessage\": \"<string>\"\n          },\n          \"valueHint\": \"<string>\",\n          \"values\": {\n            \"defaultValue\": \"<string>\",\n            \"error\": {\n              \"message\": \"<string>\"\n            },\n            \"inputId\": \"<string>\",\n            \"isDisabled\": \"<boolean>\",\n            \"isLimitedToPossibleValues\": \"<boolean>\",\n            \"isReadOnly\": \"<boolean>\",\n            \"possibleValues\": [\n              {\n                \"data\": {\n                  \"consectetur_663\": {}\n                },\n                \"displayValue\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"data\": {\n                  \"quis_3_0\": {}\n                },\n                \"displayValue\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ]\n          }\n        },\n        {\n          \"dependencyInputIds\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"description\": \"<string>\",\n          \"groupName\": \"<string>\",\n          \"hasDynamicValueInformation\": \"<boolean>\",\n          \"id\": \"<string>\",\n          \"inputMode\": \"radioButtons\",\n          \"isConfidential\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"properties\": {\n            \"magna_546\": {},\n            \"non__\": {}\n          },\n          \"type\": \"<string>\",\n          \"useInDefaultDescription\": \"<boolean>\",\n          \"validation\": {\n            \"dataType\": \"uri\",\n            \"isRequired\": \"<boolean>\",\n            \"maxLength\": \"<integer>\",\n            \"maxValue\": \"<string>\",\n            \"minLength\": \"<integer>\",\n            \"minValue\": \"<string>\",\n            \"pattern\": \"<string>\",\n            \"patternMismatchErrorMessage\": \"<string>\"\n          },\n          \"valueHint\": \"<string>\",\n          \"values\": {\n            \"defaultValue\": \"<string>\",\n            \"error\": {\n              \"message\": \"<string>\"\n            },\n            \"inputId\": \"<string>\",\n            \"isDisabled\": \"<boolean>\",\n            \"isLimitedToPossibleValues\": \"<boolean>\",\n            \"isReadOnly\": \"<boolean>\",\n            \"possibleValues\": [\n              {\n                \"data\": {\n                  \"eiusmod_4\": {}\n                },\n                \"displayValue\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"data\": {\n                  \"esta\": {}\n                },\n                \"displayValue\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ]\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"serviceInstanceType\": \"<string>\",\n      \"supportedEvents\": [\n        {\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"inputDescriptors\": [\n            {\n              \"dependencyInputIds\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"description\": \"<string>\",\n              \"groupName\": \"<string>\",\n              \"hasDynamicValueInformation\": \"<boolean>\",\n              \"id\": \"<string>\",\n              \"inputMode\": \"radioButtons\",\n              \"isConfidential\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"properties\": {\n                \"id_f\": {},\n                \"incididunt__f\": {},\n                \"ex_aa\": {}\n              },\n              \"type\": \"<string>\",\n              \"useInDefaultDescription\": \"<boolean>\",\n              \"validation\": {\n                \"dataType\": \"none\",\n                \"isRequired\": \"<boolean>\",\n                \"maxLength\": \"<integer>\",\n                \"maxValue\": \"<string>\",\n                \"minLength\": \"<integer>\",\n                \"minValue\": \"<string>\",\n                \"pattern\": \"<string>\",\n                \"patternMismatchErrorMessage\": \"<string>\"\n              },\n              \"valueHint\": \"<string>\",\n              \"values\": {\n                \"defaultValue\": \"<string>\",\n                \"error\": {\n                  \"message\": \"<string>\"\n                },\n                \"inputId\": \"<string>\",\n                \"isDisabled\": \"<boolean>\",\n                \"isLimitedToPossibleValues\": \"<boolean>\",\n                \"isReadOnly\": \"<boolean>\",\n                \"possibleValues\": [\n                  {\n                    \"data\": {\n                      \"ex_284\": {},\n                      \"in__cd\": {},\n                      \"laborum_3\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"data\": {\n                      \"commodo_2d6\": {},\n                      \"id_be0\": {},\n                      \"velit1ee\": {},\n                      \"minim_5\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            },\n            {\n              \"dependencyInputIds\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"description\": \"<string>\",\n              \"groupName\": \"<string>\",\n              \"hasDynamicValueInformation\": \"<boolean>\",\n              \"id\": \"<string>\",\n              \"inputMode\": \"textBox\",\n              \"isConfidential\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"properties\": {\n                \"ut_0\": {}\n              },\n              \"type\": \"<string>\",\n              \"useInDefaultDescription\": \"<boolean>\",\n              \"validation\": {\n                \"dataType\": \"uri\",\n                \"isRequired\": \"<boolean>\",\n                \"maxLength\": \"<integer>\",\n                \"maxValue\": \"<string>\",\n                \"minLength\": \"<integer>\",\n                \"minValue\": \"<string>\",\n                \"pattern\": \"<string>\",\n                \"patternMismatchErrorMessage\": \"<string>\"\n              },\n              \"valueHint\": \"<string>\",\n              \"values\": {\n                \"defaultValue\": \"<string>\",\n                \"error\": {\n                  \"message\": \"<string>\"\n                },\n                \"inputId\": \"<string>\",\n                \"isDisabled\": \"<boolean>\",\n                \"isLimitedToPossibleValues\": \"<boolean>\",\n                \"isReadOnly\": \"<boolean>\",\n                \"possibleValues\": [\n                  {\n                    \"data\": {\n                      \"voluptate_7c\": {},\n                      \"enimf\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"data\": {\n                      \"tempor_b\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"name\": \"<string>\",\n          \"publisherId\": \"<string>\",\n          \"supportedResourceVersions\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"url\": \"<string>\"\n        },\n        {\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"inputDescriptors\": [\n            {\n              \"dependencyInputIds\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"description\": \"<string>\",\n              \"groupName\": \"<string>\",\n              \"hasDynamicValueInformation\": \"<boolean>\",\n              \"id\": \"<string>\",\n              \"inputMode\": \"combo\",\n              \"isConfidential\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"properties\": {\n                \"ipsum209\": {},\n                \"magnab\": {}\n              },\n              \"type\": \"<string>\",\n              \"useInDefaultDescription\": \"<boolean>\",\n              \"validation\": {\n                \"dataType\": \"guid\",\n                \"isRequired\": \"<boolean>\",\n                \"maxLength\": \"<integer>\",\n                \"maxValue\": \"<string>\",\n                \"minLength\": \"<integer>\",\n                \"minValue\": \"<string>\",\n                \"pattern\": \"<string>\",\n                \"patternMismatchErrorMessage\": \"<string>\"\n              },\n              \"valueHint\": \"<string>\",\n              \"values\": {\n                \"defaultValue\": \"<string>\",\n                \"error\": {\n                  \"message\": \"<string>\"\n                },\n                \"inputId\": \"<string>\",\n                \"isDisabled\": \"<boolean>\",\n                \"isLimitedToPossibleValues\": \"<boolean>\",\n                \"isReadOnly\": \"<boolean>\",\n                \"possibleValues\": [\n                  {\n                    \"data\": {\n                      \"officiab\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"data\": {\n                      \"consequat_5\": {},\n                      \"ut_4_a\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            },\n            {\n              \"dependencyInputIds\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"description\": \"<string>\",\n              \"groupName\": \"<string>\",\n              \"hasDynamicValueInformation\": \"<boolean>\",\n              \"id\": \"<string>\",\n              \"inputMode\": \"radioButtons\",\n              \"isConfidential\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"properties\": {\n                \"in_3\": {}\n              },\n              \"type\": \"<string>\",\n              \"useInDefaultDescription\": \"<boolean>\",\n              \"validation\": {\n                \"dataType\": \"string\",\n                \"isRequired\": \"<boolean>\",\n                \"maxLength\": \"<integer>\",\n                \"maxValue\": \"<string>\",\n                \"minLength\": \"<integer>\",\n                \"minValue\": \"<string>\",\n                \"pattern\": \"<string>\",\n                \"patternMismatchErrorMessage\": \"<string>\"\n              },\n              \"valueHint\": \"<string>\",\n              \"values\": {\n                \"defaultValue\": \"<string>\",\n                \"error\": {\n                  \"message\": \"<string>\"\n                },\n                \"inputId\": \"<string>\",\n                \"isDisabled\": \"<boolean>\",\n                \"isLimitedToPossibleValues\": \"<boolean>\",\n                \"isReadOnly\": \"<boolean>\",\n                \"possibleValues\": [\n                  {\n                    \"data\": {\n                      \"eu1\": {},\n                      \"ipsum_0c\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"data\": {\n                      \"tempor40\": {},\n                      \"magna_0\": {},\n                      \"commodo_3c\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"name\": \"<string>\",\n          \"publisherId\": \"<string>\",\n          \"supportedResourceVersions\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"url\": \"<string>\"\n        }\n      ],\n      \"url\": \"<string>\"\n    },\n    {\n      \"_links\": {\n        \"links\": {\n          \"Excepteur_6\": {}\n        }\n      },\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inputDescriptors\": [\n        {\n          \"dependencyInputIds\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"description\": \"<string>\",\n          \"groupName\": \"<string>\",\n          \"hasDynamicValueInformation\": \"<boolean>\",\n          \"id\": \"<string>\",\n          \"inputMode\": \"checkBox\",\n          \"isConfidential\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"properties\": {\n            \"est9fc\": {},\n            \"anim_1\": {},\n            \"dolore_9\": {},\n            \"ullamcoe3\": {}\n          },\n          \"type\": \"<string>\",\n          \"useInDefaultDescription\": \"<boolean>\",\n          \"validation\": {\n            \"dataType\": \"none\",\n            \"isRequired\": \"<boolean>\",\n            \"maxLength\": \"<integer>\",\n            \"maxValue\": \"<string>\",\n            \"minLength\": \"<integer>\",\n            \"minValue\": \"<string>\",\n            \"pattern\": \"<string>\",\n            \"patternMismatchErrorMessage\": \"<string>\"\n          },\n          \"valueHint\": \"<string>\",\n          \"values\": {\n            \"defaultValue\": \"<string>\",\n            \"error\": {\n              \"message\": \"<string>\"\n            },\n            \"inputId\": \"<string>\",\n            \"isDisabled\": \"<boolean>\",\n            \"isLimitedToPossibleValues\": \"<boolean>\",\n            \"isReadOnly\": \"<boolean>\",\n            \"possibleValues\": [\n              {\n                \"data\": {\n                  \"fugiat_02a\": {}\n                },\n                \"displayValue\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"data\": {\n                  \"officia6a3\": {},\n                  \"Duis79\": {},\n                  \"sunt_cb\": {}\n                },\n                \"displayValue\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ]\n          }\n        },\n        {\n          \"dependencyInputIds\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"description\": \"<string>\",\n          \"groupName\": \"<string>\",\n          \"hasDynamicValueInformation\": \"<boolean>\",\n          \"id\": \"<string>\",\n          \"inputMode\": \"radioButtons\",\n          \"isConfidential\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"properties\": {\n            \"tempor71_\": {},\n            \"laboris66\": {},\n            \"ex_5\": {}\n          },\n          \"type\": \"<string>\",\n          \"useInDefaultDescription\": \"<boolean>\",\n          \"validation\": {\n            \"dataType\": \"number\",\n            \"isRequired\": \"<boolean>\",\n            \"maxLength\": \"<integer>\",\n            \"maxValue\": \"<string>\",\n            \"minLength\": \"<integer>\",\n            \"minValue\": \"<string>\",\n            \"pattern\": \"<string>\",\n            \"patternMismatchErrorMessage\": \"<string>\"\n          },\n          \"valueHint\": \"<string>\",\n          \"values\": {\n            \"defaultValue\": \"<string>\",\n            \"error\": {\n              \"message\": \"<string>\"\n            },\n            \"inputId\": \"<string>\",\n            \"isDisabled\": \"<boolean>\",\n            \"isLimitedToPossibleValues\": \"<boolean>\",\n            \"isReadOnly\": \"<boolean>\",\n            \"possibleValues\": [\n              {\n                \"data\": {\n                  \"ea_a\": {}\n                },\n                \"displayValue\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"data\": {\n                  \"cillum_f08\": {}\n                },\n                \"displayValue\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ]\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"serviceInstanceType\": \"<string>\",\n      \"supportedEvents\": [\n        {\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"inputDescriptors\": [\n            {\n              \"dependencyInputIds\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"description\": \"<string>\",\n              \"groupName\": \"<string>\",\n              \"hasDynamicValueInformation\": \"<boolean>\",\n              \"id\": \"<string>\",\n              \"inputMode\": \"checkBox\",\n              \"isConfidential\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"properties\": {\n                \"veniama2\": {}\n              },\n              \"type\": \"<string>\",\n              \"useInDefaultDescription\": \"<boolean>\",\n              \"validation\": {\n                \"dataType\": \"uri\",\n                \"isRequired\": \"<boolean>\",\n                \"maxLength\": \"<integer>\",\n                \"maxValue\": \"<string>\",\n                \"minLength\": \"<integer>\",\n                \"minValue\": \"<string>\",\n                \"pattern\": \"<string>\",\n                \"patternMismatchErrorMessage\": \"<string>\"\n              },\n              \"valueHint\": \"<string>\",\n              \"values\": {\n                \"defaultValue\": \"<string>\",\n                \"error\": {\n                  \"message\": \"<string>\"\n                },\n                \"inputId\": \"<string>\",\n                \"isDisabled\": \"<boolean>\",\n                \"isLimitedToPossibleValues\": \"<boolean>\",\n                \"isReadOnly\": \"<boolean>\",\n                \"possibleValues\": [\n                  {\n                    \"data\": {\n                      \"cillum3_\": {},\n                      \"ute\": {},\n                      \"tempor_a6\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"data\": {\n                      \"pariatur_9af\": {},\n                      \"culpa_334\": {},\n                      \"laboris14\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            },\n            {\n              \"dependencyInputIds\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"description\": \"<string>\",\n              \"groupName\": \"<string>\",\n              \"hasDynamicValueInformation\": \"<boolean>\",\n              \"id\": \"<string>\",\n              \"inputMode\": \"textBox\",\n              \"isConfidential\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"properties\": {\n                \"ex79\": {},\n                \"enim9d1\": {},\n                \"ameta\": {}\n              },\n              \"type\": \"<string>\",\n              \"useInDefaultDescription\": \"<boolean>\",\n              \"validation\": {\n                \"dataType\": \"boolean\",\n                \"isRequired\": \"<boolean>\",\n                \"maxLength\": \"<integer>\",\n                \"maxValue\": \"<string>\",\n                \"minLength\": \"<integer>\",\n                \"minValue\": \"<string>\",\n                \"pattern\": \"<string>\",\n                \"patternMismatchErrorMessage\": \"<string>\"\n              },\n              \"valueHint\": \"<string>\",\n              \"values\": {\n                \"defaultValue\": \"<string>\",\n                \"error\": {\n                  \"message\": \"<string>\"\n                },\n                \"inputId\": \"<string>\",\n                \"isDisabled\": \"<boolean>\",\n                \"isLimitedToPossibleValues\": \"<boolean>\",\n                \"isReadOnly\": \"<boolean>\",\n                \"possibleValues\": [\n                  {\n                    \"data\": {\n                      \"fugiat_4\": {},\n                      \"commodo_0ec\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"data\": {\n                      \"sed_d\": {},\n                      \"Lorem_4\": {},\n                      \"occaecatd\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"name\": \"<string>\",\n          \"publisherId\": \"<string>\",\n          \"supportedResourceVersions\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"url\": \"<string>\"\n        },\n        {\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"inputDescriptors\": [\n            {\n              \"dependencyInputIds\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"description\": \"<string>\",\n              \"groupName\": \"<string>\",\n              \"hasDynamicValueInformation\": \"<boolean>\",\n              \"id\": \"<string>\",\n              \"inputMode\": \"none\",\n              \"isConfidential\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"properties\": {\n                \"consequat__b\": {},\n                \"Excepteur_c\": {}\n              },\n              \"type\": \"<string>\",\n              \"useInDefaultDescription\": \"<boolean>\",\n              \"validation\": {\n                \"dataType\": \"guid\",\n                \"isRequired\": \"<boolean>\",\n                \"maxLength\": \"<integer>\",\n                \"maxValue\": \"<string>\",\n                \"minLength\": \"<integer>\",\n                \"minValue\": \"<string>\",\n                \"pattern\": \"<string>\",\n                \"patternMismatchErrorMessage\": \"<string>\"\n              },\n              \"valueHint\": \"<string>\",\n              \"values\": {\n                \"defaultValue\": \"<string>\",\n                \"error\": {\n                  \"message\": \"<string>\"\n                },\n                \"inputId\": \"<string>\",\n                \"isDisabled\": \"<boolean>\",\n                \"isLimitedToPossibleValues\": \"<boolean>\",\n                \"isReadOnly\": \"<boolean>\",\n                \"possibleValues\": [\n                  {\n                    \"data\": {\n                      \"dolore_be\": {},\n                      \"exercitation_6c\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"data\": {\n                      \"ex0\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            },\n            {\n              \"dependencyInputIds\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"description\": \"<string>\",\n              \"groupName\": \"<string>\",\n              \"hasDynamicValueInformation\": \"<boolean>\",\n              \"id\": \"<string>\",\n              \"inputMode\": \"textBox\",\n              \"isConfidential\": \"<boolean>\",\n              \"name\": \"<string>\",\n              \"properties\": {\n                \"aute_d\": {},\n                \"velit8\": {},\n                \"mollitd\": {},\n                \"exercitation9\": {},\n                \"reprehenderit_d\": {}\n              },\n              \"type\": \"<string>\",\n              \"useInDefaultDescription\": \"<boolean>\",\n              \"validation\": {\n                \"dataType\": \"string\",\n                \"isRequired\": \"<boolean>\",\n                \"maxLength\": \"<integer>\",\n                \"maxValue\": \"<string>\",\n                \"minLength\": \"<integer>\",\n                \"minValue\": \"<string>\",\n                \"pattern\": \"<string>\",\n                \"patternMismatchErrorMessage\": \"<string>\"\n              },\n              \"valueHint\": \"<string>\",\n              \"values\": {\n                \"defaultValue\": \"<string>\",\n                \"error\": {\n                  \"message\": \"<string>\"\n                },\n                \"inputId\": \"<string>\",\n                \"isDisabled\": \"<boolean>\",\n                \"isLimitedToPossibleValues\": \"<boolean>\",\n                \"isReadOnly\": \"<boolean>\",\n                \"possibleValues\": [\n                  {\n                    \"data\": {\n                      \"consectetur_d4\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"data\": {\n                      \"consequat_1_f\": {},\n                      \"Excepteur_264\": {}\n                    },\n                    \"displayValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"name\": \"<string>\",\n          \"publisherId\": \"<string>\",\n          \"supportedResourceVersions\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"url\": \"<string>\"\n        }\n      ],\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Query for service hook publishers.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Symbol",
      "filename": "Symbol",
      "root": {
        "docs": "[Symbol Service Rest API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/symbol/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Symbol"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Availability",
          "filename": "Availability",
          "root": {
            "docs": "An endpoint for clients to determine the availability of symbol service for the current VSTS account.\n\nThis controller does not sit behind any feature flag.\n\nThe controller returns 200 if the service is available. Any other codes indicate that the service is not available.\nFor now, only 404 is used explicitly, but the client may also receive 500 if an internal error arises. In the future\nwe may add 402 to indicate a license issue.\n\nVisual Studio IDE calls this when connecting to symbol server, but it doesn't use SymbolHttpClient due to restrictions\non binplacing micro-service DLLs inside Team Explorer package.\n\nTrace Format: Artifact Services: 57, Symbol Service: 3, SymbolAvailabilityController: 6 -> 5736MM0 for all Exception traces",
            "meta": {
              "name": "Availability"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Availability Check Availability",
              "filename": "Availability Check Availability.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/availability?api-version={{api-version}}",
                "method": "GET",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Check the availability of symbol service. This includes checking for feature flag, and possibly license in future. Note this is NOT an anonymous endpoint, and the caller will be redirected to authentication before hitting it.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Client",
          "filename": "Client",
          "root": {
            "docs": "The endpoint to query and retrieve symbol client.\n\nTrace Format: Artifact Services: 57, Symbol Service: 3, ClientController: 3 -> 5733MM0 for all Exception traces",
            "meta": {
              "name": "Client"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Client Get",
              "filename": "Client Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/client/{{clientType}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "clientType",
                    "value": "{{clientType}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the client package.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Client Head Client",
              "filename": "Client Head Client.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/client?api-version={{api-version}}",
                "method": "HEAD",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get client version information.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Symsrv",
          "filename": "Symsrv",
          "root": {
            "docs": "The endpoint to query debug entries using a \"client key\". This is intended to be called by a client that implements \nMicrosoft's symbol protocol (symsrv).\n\nTrace Format: Artifact Services: 57, Symbol Service: 3, SymSrvController: 2 -> 5732MM0 for all Exception traces",
            "meta": {
              "name": "Symsrv"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Symsrv Get",
              "filename": "Symsrv Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/symsrv/{{debugEntryClientKey}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "debugEntryClientKey",
                    "value": "{{debugEntryClientKey}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Given a client key, returns the best matched debug entry.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Contents",
          "filename": "Contents",
          "root": {
            "docs": "The endpoint to stitch chunks of a chunk dedup debug entry.\n\nTrace Format: Artifact Services: 57, Symbol Service: 3, SymbolContentController: 7 -> 5737MM0 for all Exception traces",
            "meta": {
              "name": "Contents"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Contents Get",
              "filename": "Contents Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests/{{requestId}}/contents/{{debugEntryId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "requestId",
                    "value": "{{requestId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "debugEntryId",
                    "value": "{{debugEntryId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a stitched debug entry for a symbol request as specified by symbol request identifier and debug entry identifier.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Requests",
          "filename": "Requests",
          "root": {
            "docs": "The endpoints to perfrom CRUD operations on symbol requests and debug entries.\n\nTrace Format: Artifact Services: 57, Symbol Service: 3, Requests2Controller: 5 -> 5735MM0 for all Exception traces",
            "meta": {
              "name": "Requests"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Requests Create Requests Request Id Debug Entries",
              "filename": "Requests Create Requests Request Id Debug Entries.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests/{{requestId}}?collection=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "collection",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "requestId",
                    "value": "{{requestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"createBehavior\": \"overwriteIfExists\",\n  \"debugEntries\": [\n    {\n      \"blobDetails\": {},\n      \"blobIdentifier\": {},\n      \"blobUri\": \"deserunt labore ut\",\n      \"clientKey\": \"ad id\",\n      \"domainId\": {},\n      \"informationLevel\": \"lineNumbers\",\n      \"requestId\": \"ut nulla pariatur anim est\",\n      \"size\": -38652489,\n      \"status\": \"none\",\n      \"createdBy\": \"<uuid>\",\n      \"createdDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"storageETag\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"blobDetails\": {},\n      \"blobIdentifier\": {},\n      \"blobUri\": \"ea cupidatat\",\n      \"clientKey\": \"irure ex\",\n      \"domainId\": {},\n      \"informationLevel\": \"lineNumbers\",\n      \"requestId\": \"ut aliqua\",\n      \"size\": -21971953,\n      \"status\": \"blobMissing\",\n      \"createdBy\": \"<uuid>\",\n      \"createdDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"storageETag\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"proofNodes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create debug entries for a symbol request as specified by its identifier.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Requests Create Requests",
              "filename": "Requests Create Requests.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"Excepteur nisi\",\n  \"domainId\": {},\n  \"expirationDate\": \"1950-08-16T14:31:19.573Z\",\n  \"isChunked\": false,\n  \"name\": \"amet cillum mollit in\",\n  \"size\": 97595151,\n  \"status\": \"none\",\n  \"createdBy\": \"<uuid>\",\n  \"createdDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"storageETag\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new symbol request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Requests Delete Requests Request Id",
              "filename": "Requests Delete Requests Request Id.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests/{{requestId}}?synchronous=<boolean>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "synchronous",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "requestId",
                    "value": "{{requestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a symbol request by request identifier.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Requests Delete Requests Request Name",
              "filename": "Requests Delete Requests Request Name.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests?requestName=<string>&synchronous=<boolean>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "requestName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "synchronous",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a symbol request by request name.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Requests Get Requests Request Id",
              "filename": "Requests Get Requests Request Id.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests/{{requestId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "requestId",
                    "value": "{{requestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a symbol request by request identifier.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Requests Get Requests Request Name",
              "filename": "Requests Get Requests Request Name.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests?requestName=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "requestName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a symbol request by request name.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Requests Update Requests Request Id",
              "filename": "Requests Update Requests Request Id.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests/{{requestId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "requestId",
                    "value": "{{requestId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"Excepteur nisi\",\n  \"domainId\": {},\n  \"expirationDate\": \"1950-08-16T14:31:19.573Z\",\n  \"isChunked\": false,\n  \"name\": \"amet cillum mollit in\",\n  \"size\": 97595151,\n  \"status\": \"none\",\n  \"createdBy\": \"<uuid>\",\n  \"createdDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"storageETag\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a symbol request by request identifier.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Requests Update Requests Request Name",
              "filename": "Requests Update Requests Request Name.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/symbol/requests?requestName=<string>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "requestName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"Excepteur nisi\",\n  \"domainId\": {},\n  \"expirationDate\": \"1950-08-16T14:31:19.573Z\",\n  \"isChunked\": false,\n  \"name\": \"amet cillum mollit in\",\n  \"size\": 97595151,\n  \"status\": \"none\",\n  \"createdBy\": \"<uuid>\",\n  \"createdDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"storageETag\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a symbol request by request name.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Status",
      "filename": "Status",
      "root": {
        "docs": "[Status API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/status/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Status"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Health",
          "filename": "Health",
          "root": {
            "meta": {
              "name": "Health"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Health Get",
              "filename": "Health Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/_apis/status/health?services=<string>&geographies=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "services",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "geographies",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queries status information for the service all-up, or scoped to a particular service and/or geography",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Test Plan",
      "filename": "Test Plan",
      "root": {
        "docs": "[Test Plans - REST API (Azure DevOps Test Plan) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/testplan/test-plans?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Test Plan"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Configurations",
          "filename": "Configurations",
          "root": {
            "docs": "Test Configuration Apis",
            "meta": {
              "name": "Configurations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Configurations Create",
              "filename": "Configurations Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/configurations?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"state\": \"active\",\n  \"values\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a test configuration.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Configurations Delete",
              "filename": "Configurations Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/configurations?testConfiguartionId=<integer>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "testConfiguartionId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a test configuration by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Configurations Get",
              "filename": "Configurations Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/configurations/{{testConfigurationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testConfigurationId",
                    "value": "{{testConfigurationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a test configuration",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Configurations List",
              "filename": "Configurations List.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/configurations?continuationToken=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of test configurations.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Configurations Update",
              "filename": "Configurations Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/configurations?testConfiguartionId=<integer>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "testConfiguartionId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"state\": \"active\",\n  \"values\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a test configuration by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test  Plans",
          "filename": "Test  Plans",
          "root": {
            "docs": "Work with test plans programmatically using the REST APIs for Azure DevOps Services and Azure DevOps Server.",
            "meta": {
              "name": "Test  Plans"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test  Plans Create",
              "filename": "Test  Plans Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/plans?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"areaPath\": \"<string>\",\n  \"buildDefinition\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"buildId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"endDate\": \"<dateTime>\",\n  \"iteration\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"directoryAlias\": \"culpa cupidatat\",\n    \"id\": \"est laboris ea enim consequat\",\n    \"imageUrl\": \"esse Excepteur\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"ex\",\n    \"uniqueName\": \"occaecat sunt\",\n    \"_links\": {\n      \"links\": {\n        \"incididunt__eb\": {},\n        \"reprehenderit9_\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"releaseEnvironmentDefinition\": {\n    \"definitionId\": \"<integer>\",\n    \"environmentDefinitionId\": \"<integer>\"\n  },\n  \"startDate\": \"<dateTime>\",\n  \"state\": \"<string>\",\n  \"testOutcomeSettings\": {\n    \"syncOutcomeAcrossSuites\": \"<boolean>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a test plan.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Plans Delete",
              "filename": "Test  Plans Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/plans/{{planId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a test plan.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Plans Get",
              "filename": "Test  Plans Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/plans/{{planId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a test plan by Id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Plans List",
              "filename": "Test  Plans List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/plans?owner=<string>&continuationToken=<string>&includePlanDetails=<boolean>&filterActivePlans=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "owner",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includePlanDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "filterActivePlans",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of test plans",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Plans Update",
              "filename": "Test  Plans Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/plans/{{planId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"revision\": -98788544,\n  \"areaPath\": \"<string>\",\n  \"buildDefinition\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"buildId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"endDate\": \"<dateTime>\",\n  \"iteration\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"directoryAlias\": \"ut esse\",\n    \"id\": \"deserunt aliquip\",\n    \"imageUrl\": \"qui quis incididunt nisi\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"in magna commodo\",\n    \"uniqueName\": \"sint sunt Ut in\",\n    \"_links\": {\n      \"links\": {\n        \"ut_49\": {},\n        \"magna_c9\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"releaseEnvironmentDefinition\": {\n    \"definitionId\": \"<integer>\",\n    \"environmentDefinitionId\": \"<integer>\"\n  },\n  \"startDate\": \"<dateTime>\",\n  \"state\": \"<string>\",\n  \"testOutcomeSettings\": {\n    \"syncOutcomeAcrossSuites\": \"<boolean>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a test plan.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test  Suite  Entry",
          "filename": "Test  Suite  Entry",
          "root": {
            "docs": "Reorder test suite entries (test cases and child test suites) in a given test suite.",
            "meta": {
              "name": "Test  Suite  Entry"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test  Suite  Entry List",
              "filename": "Test  Suite  Entry List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/suiteentry/{{suiteId}}?suiteEntryType=testCase&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "suiteEntryType",
                    "value": "testCase",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of test suite entries in the test suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suite  Entry Reorder Suite Entries",
              "filename": "Test  Suite  Entry Reorder Suite Entries.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/suiteentry/{{suiteId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"id\": \"<integer>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"suiteEntryType\": \"suite\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"suiteEntryType\": \"suite\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Reorder test suite entries in the test suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test Cases",
          "filename": "Test Cases",
          "root": {
            "docs": "Controller to handle WIT scoped TestCase APIs",
            "meta": {
              "name": "Test Cases"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test Cases Delete",
              "filename": "Test Cases Delete.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/testcases/{{testCaseId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a test case.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test  Suites",
          "filename": "Test  Suites",
          "root": {
            "docs": "Test suites help in organizing test cases in a test plan. A test suite can contain multiple child test suites, helping you build a folder structure under a test plan, or it can contain test cases. Last child test suites typically contain test cases, whereas intermediate suites represent a structure hierarchy. Intermediate suites can only be Static type, whereas last child suites can be of static suites, requirement-based suites, or query-based suites.",
            "meta": {
              "name": "Test  Suites"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test  Suites Create",
              "filename": "Test  Suites Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/suites?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"requirementId\": 11388332,\n  \"suiteType\": \"dynamicTestSuite\",\n  \"defaultConfigurations\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"defaultTesters\": [\n    {\n      \"directoryAlias\": \"aute deserunt commodo u\",\n      \"id\": \"minim\",\n      \"imageUrl\": \"irure laboris et exercitation\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"aute enim\",\n      \"uniqueName\": \"mollit est\",\n      \"_links\": {\n        \"links\": {\n          \"nisia\": {},\n          \"pariatur50\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"directoryAlias\": \"dolore commodo\",\n      \"id\": \"Excepteur non exercitation fugiat\",\n      \"imageUrl\": \"anim minim\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"est \",\n      \"uniqueName\": \"reprehenderi\",\n      \"_links\": {\n        \"links\": {\n          \"ipsum7e\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"inheritDefaultConfigurations\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"parentSuite\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"queryString\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create test suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites Delete",
              "filename": "Test  Suites Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/suites/{{suiteId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete test suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites Get Suites By Test Case Id",
              "filename": "Test  Suites Get Suites By Test Case Id.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/testplan/suites?testCaseId=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "testCaseId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Find the list of all test suites in which a given test case is present. This is helpful if you need to find out which test suites are using a test case, when you need to make changes to a test case.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites Get Test Suites For Plan",
              "filename": "Test  Suites Get Test Suites For Plan.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/suites?expand=defaultTesters&continuationToken=<string>&asTreeView=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "expand",
                    "value": "defaultTesters",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "asTreeView",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get test suites for plan.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites Get",
              "filename": "Test  Suites Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/suites/{{suiteId}}?expand=defaultTesters&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "expand",
                    "value": "defaultTesters",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get test suite by suite id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites Update",
              "filename": "Test  Suites Update.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/suites/{{suiteId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"revision\": -18629436,\n  \"defaultConfigurations\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"defaultTesters\": [\n    {\n      \"directoryAlias\": \"Lorem\",\n      \"id\": \"incididunt dolor adipisic\",\n      \"imageUrl\": \"reprehenderit sed ut\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"occaecat\",\n      \"uniqueName\": \"sed dolore ad\",\n      \"_links\": {\n        \"links\": {\n          \"ad_dfc\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"directoryAlias\": \"minim dolore ipsum\",\n      \"id\": \"in minim dolor\",\n      \"imageUrl\": \"cupidatat Ut\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"cillum quis\",\n      \"uniqueName\": \"non officia aliquip sed consequat\",\n      \"_links\": {\n        \"links\": {\n          \"exercitation_5\": {},\n          \"anim_\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"inheritDefaultConfigurations\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"parentSuite\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"queryString\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update test suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test Point",
          "filename": "Test Point",
          "root": {
            "docs": "Controller to handle Test Point REST calls",
            "meta": {
              "name": "Test Point"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test Point Get Points",
              "filename": "Test Point Get Points.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/Suites/{{suiteId}}/TestPoint?pointId=<string>&returnIdentityRef=<boolean>&includePointDetails=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pointId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "returnIdentityRef",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includePointDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a particular Test Point from a suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test Point Update",
              "filename": "Test Point Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/Suites/{{suiteId}}/TestPoint?includePointDetails=<boolean>&returnIdentityRef=<boolean>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includePointDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "returnIdentityRef",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"id\": \"<integer>\",\n    \"isActive\": \"<boolean>\",\n    \"results\": {\n      \"outcome\": \"blocked\"\n    },\n    \"tester\": {\n      \"directoryAlias\": \"consectetur qui dolor cons\",\n      \"id\": \"Ut pariatur elit aliqua\",\n      \"imageUrl\": \"sint mollit in\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"ut ipsum eu nostr\",\n      \"uniqueName\": \"deserunt non anim enim\",\n      \"_links\": {\n        \"links\": {\n          \"sed52b\": {},\n          \"ipsum0f7\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"isActive\": \"<boolean>\",\n    \"results\": {\n      \"outcome\": \"notExecuted\"\n    },\n    \"tester\": {\n      \"directoryAlias\": \"Lorem enim velit labore\",\n      \"id\": \"qui esse quis\",\n      \"imageUrl\": \"ad et deserunt labore\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"ut exercitation aute Lorem\",\n      \"uniqueName\": \"ea la\",\n      \"_links\": {\n        \"links\": {\n          \"utda\": {},\n          \"eu_a\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update Test Points. This is used to Reset test point to active, update the outcome of a test point or update the tester of a test point",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test Case Clone",
          "filename": "Test Case Clone",
          "root": {
            "meta": {
              "name": "Test Case Clone"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test Case Clone Clone Test Case",
              "filename": "Test Case Clone Clone Test Case.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/TestCases/CloneTestCaseOperation?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"cloneOptions\": {\n    \"includeAttachments\": \"<boolean>\",\n    \"includeLinks\": \"<boolean>\",\n    \"relatedLinkComment\": \"<string>\"\n  },\n  \"destinationTestPlan\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"destinationTestSuite\": {\n    \"id\": \"<integer>\",\n    \"project\": \"<string>\"\n  },\n  \"sourceTestPlan\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"sourceTestSuite\": {\n    \"id\": \"<integer>\"\n  },\n  \"testCaseIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test Case Clone Get",
              "filename": "Test Case Clone Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/TestCases/CloneTestCaseOperation/{{cloneOperationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "cloneOperationId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get clone information.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Suite Test Case",
          "filename": "Suite Test Case",
          "root": {
            "docs": "Controller to handle Test Case REST calls",
            "meta": {
              "name": "Suite Test Case"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Suite Test Case Add",
              "filename": "Suite Test Case Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/Suites/{{suiteId}}/TestCase?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"pointAssignments\": [\n      {\n        \"configurationId\": \"<integer>\"\n      },\n      {\n        \"configurationId\": \"<integer>\"\n      }\n    ],\n    \"workItem\": {\n      \"id\": \"<integer>\"\n    }\n  },\n  {\n    \"pointAssignments\": [\n      {\n        \"configurationId\": \"<integer>\"\n      },\n      {\n        \"configurationId\": \"<integer>\"\n      }\n    ],\n    \"workItem\": {\n      \"id\": \"<integer>\"\n    }\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add test cases to a suite with specified configurations",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Suite Test Case Get Test Case List",
              "filename": "Suite Test Case Get Test Case List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/Suites/{{suiteId}}/TestCase?testIds=<string>&configurationIds=<string>&witFields=<string>&continuationToken=<string>&returnIdentityRef=<boolean>&expand=<boolean>&excludeFlags=pointAssignments&isRecursive=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "testIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "configurationIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "witFields",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "returnIdentityRef",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "expand",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "excludeFlags",
                    "value": "pointAssignments",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isRecursive",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get Test Case List return those test cases which have all the configuration Ids as mentioned in the optional parameter. If configuration Ids is null, it return all the test cases",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Suite Test Case Get Test Case",
              "filename": "Suite Test Case Get Test Case.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/Suites/{{suiteId}}/TestCase/{{testCaseId}}?witFields=<string>&returnIdentityRef=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "witFields",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "returnIdentityRef",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseId",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a particular Test Case from a Suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Suite Test Case Remove Test Cases List From Suite",
              "filename": "Suite Test Case Remove Test Cases List From Suite.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/Suites/{{suiteId}}/TestCase?testIds=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "testIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes test cases from a suite based on the list of test case Ids provided. This API can be used to remove a larger number of test cases.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Suite Test Case Update",
              "filename": "Suite Test Case Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/{{planId}}/Suites/{{suiteId}}/TestCase?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"pointAssignments\": [\n      {\n        \"configurationId\": \"<integer>\"\n      },\n      {\n        \"configurationId\": \"<integer>\"\n      }\n    ],\n    \"workItem\": {\n      \"id\": \"<integer>\"\n    }\n  },\n  {\n    \"pointAssignments\": [\n      {\n        \"configurationId\": \"<integer>\"\n      },\n      {\n        \"configurationId\": \"<integer>\"\n      }\n    ],\n    \"workItem\": {\n      \"id\": \"<integer>\"\n    }\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the configurations for test cases",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test Plan Clone",
          "filename": "Test Plan Clone",
          "root": {
            "meta": {
              "name": "Test Plan Clone"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test Plan Clone Clone Test Plan",
              "filename": "Test Plan Clone Clone Test Plan.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/CloneOperation?deepClone=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "deepClone",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"cloneOptions\": {\n    \"cloneRequirements\": \"<boolean>\",\n    \"copyAllSuites\": \"<boolean>\",\n    \"copyAncestorHierarchy\": \"<boolean>\",\n    \"destinationWorkItemType\": \"<string>\",\n    \"overrideParameters\": {\n      \"culpa_9\": \"<string>\",\n      \"eu_7c9\": \"<string>\",\n      \"laborumc9\": \"<string>\"\n    },\n    \"relatedLinkComment\": \"<string>\"\n  },\n  \"destinationTestPlan\": {\n    \"project\": \"occaecat fugiat Ut\",\n    \"areaPath\": \"<string>\",\n    \"buildDefinition\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"buildId\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"endDate\": \"<dateTime>\",\n    \"iteration\": \"<string>\",\n    \"name\": \"<string>\",\n    \"owner\": {\n      \"directoryAlias\": \"exercitation ea dolor in\",\n      \"id\": \"minim voluptate nostrud in\",\n      \"imageUrl\": \"eiusmod qui Lorem laborum\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"pariatur eu exercitation\",\n      \"uniqueName\": \"quis eu incididunt sunt irure\",\n      \"_links\": {\n        \"links\": {\n          \"culpac\": {},\n          \"ea_1\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"releaseEnvironmentDefinition\": {\n      \"definitionId\": \"<integer>\",\n      \"environmentDefinitionId\": \"<integer>\"\n    },\n    \"startDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"testOutcomeSettings\": {\n      \"syncOutcomeAcrossSuites\": \"<boolean>\"\n    }\n  },\n  \"sourceTestPlan\": {\n    \"id\": \"<integer>\",\n    \"suiteIds\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Clone test plan",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test Plan Clone Get",
              "filename": "Test Plan Clone Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Plans/CloneOperation/{{cloneOperationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "cloneOperationId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get clone information.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Variables",
          "filename": "Variables",
          "root": {
            "docs": "Test Variable Apis",
            "meta": {
              "name": "Variables"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Variables Create",
              "filename": "Variables Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/variables?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"values\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a test variable.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variables Delete",
              "filename": "Variables Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/variables/{{testVariableId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testVariableId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a test variable by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variables Get",
              "filename": "Variables Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/variables/{{testVariableId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testVariableId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a test variable by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variables List",
              "filename": "Variables List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/variables?continuationToken=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of test variables.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Variables Update",
              "filename": "Variables Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/variables/{{testVariableId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testVariableId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"values\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a test variable by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test Suite Clone",
          "filename": "Test Suite Clone",
          "root": {
            "docs": "Work with cloning test plans and test suites programmatically using the REST APIs for Azure DevOps Services and Azure DevOps Server.",
            "meta": {
              "name": "Test Suite Clone"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test Suite Clone Clone Test Suite",
              "filename": "Test Suite Clone Clone Test Suite.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Suites/CloneOperation?deepClone=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "deepClone",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"cloneOptions\": {\n    \"cloneRequirements\": \"<boolean>\",\n    \"copyAllSuites\": \"<boolean>\",\n    \"copyAncestorHierarchy\": \"<boolean>\",\n    \"destinationWorkItemType\": \"<string>\",\n    \"overrideParameters\": {\n      \"cillumecc\": \"<string>\"\n    },\n    \"relatedLinkComment\": \"<string>\"\n  },\n  \"destinationTestSuite\": {\n    \"id\": \"<integer>\",\n    \"project\": \"<string>\"\n  },\n  \"sourceTestSuite\": {\n    \"id\": \"<integer>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Clone test suite",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test Suite Clone Get",
              "filename": "Test Suite Clone Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testplan/Suites/CloneOperation/{{cloneOperationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "cloneOperationId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get clone information.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Test",
      "filename": "Test",
      "root": {
        "docs": "[Test REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/test/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Test"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Attachments",
          "filename": "Attachments",
          "root": {
            "docs": "Work with test attachments programmatically using the REST APIs for Azure DevOps Services and Azure DevOps Server.",
            "meta": {
              "name": "Attachments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Attachments Create Test Result Attachment",
              "filename": "Attachments Create Test Result Attachment.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/Results/{{testCaseResultId}}/attachments?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseResultId",
                    "value": "{{testCaseResultId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"attachmentType\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"stream\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Attach a file to a test result.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Create Test Run Attachment",
              "filename": "Attachments Create Test Run Attachment.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/attachments?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"attachmentType\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"stream\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Attach a file to a test run.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Get Test Result Attachment Zip",
              "filename": "Attachments Get Test Result Attachment Zip.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/Results/{{testCaseResultId}}/attachments/{{attachmentId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseResultId",
                    "value": "{{testCaseResultId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attachmentId",
                    "value": "{{attachmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Download a test result attachment by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Get Test Result Attachments",
              "filename": "Attachments Get Test Result Attachments.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/Results/{{testCaseResultId}}/attachments?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseResultId",
                    "value": "{{testCaseResultId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get list of test result attachments reference.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Get Test Run Attachment Zip",
              "filename": "Attachments Get Test Run Attachment Zip.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/attachments/{{attachmentId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attachmentId",
                    "value": "{{attachmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Download a test run attachment by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Get Test Run Attachments",
              "filename": "Attachments Get Test Run Attachments.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/attachments?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get list of test run attachments reference.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Iterations",
          "filename": "Iterations",
          "root": {
            "docs": "API to work with Manual testing test result iterations.",
            "meta": {
              "name": "Iterations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Iterations Get",
              "filename": "Iterations Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/Results/{{testCaseResultId}}/iterations/{{iterationId}}?includeActionResults=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeActionResults",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseResultId",
                    "value": "{{testCaseResultId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get iteration for a result",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Iterations List",
              "filename": "Iterations List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/Results/{{testCaseResultId}}/iterations?includeActionResults=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeActionResults",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseResultId",
                    "value": "{{testCaseResultId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get iterations for a result",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Points",
          "filename": "Points",
          "root": {
            "docs": "Work with test points programmatically using the REST APIs for Azure DevOps Services and Azure DevOps Server.",
            "meta": {
              "name": "Points"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Points Get Point",
              "filename": "Points Get Point.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Plans/{{planId}}/Suites/{{suiteId}}/points/{{pointIds}}?witFields=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "witFields",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pointIds",
                    "value": "{{pointIds}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a test point.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Points Get Points By Query",
              "filename": "Points Get Points By Query.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/points?$skip=<integer>&$top=<integer>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"orderBy\": \"<string>\",\n  \"points\": [\n    {\n      \"assignedTo\": {\n        \"directoryAlias\": \"ess\",\n        \"id\": \"officia ipsum\",\n        \"imageUrl\": \"dolor aliquip fugiat tempor\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"anim eu non commodo\",\n        \"uniqueName\": \"dolor\",\n        \"_links\": {\n          \"links\": {\n            \"exc5a\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"automated\": \"<boolean>\",\n      \"comment\": \"<string>\",\n      \"configuration\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"failureType\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"lastResetToActive\": \"<dateTime>\",\n      \"lastResolutionStateId\": \"<integer>\",\n      \"lastResult\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"lastResultDetails\": {\n        \"dateCompleted\": \"<dateTime>\",\n        \"duration\": \"<long>\",\n        \"runBy\": {\n          \"directoryAlias\": \"ut\",\n          \"id\": \"labore magna Duis\",\n          \"imageUrl\": \"in Ut nisi mollit eiusmod\",\n          \"inactive\": false,\n          \"isAadIdentity\": true,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": true,\n          \"profileUrl\": \"ea nisi dolore\",\n          \"uniqueName\": \"ex veniam Lor\",\n          \"_links\": {\n            \"links\": {\n              \"laborum81\": {},\n              \"consequatad\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      },\n      \"lastResultState\": \"<string>\",\n      \"lastRunBuildNumber\": \"<string>\",\n      \"lastTestRun\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"lastUpdatedBy\": {\n        \"directoryAlias\": \"in \",\n        \"id\": \"Ut\",\n        \"imageUrl\": \"dolor in\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"mollit voluptate officia\",\n        \"uniqueName\": \"Lorem in fugiat Duis pariatur\",\n        \"_links\": {\n          \"links\": {\n            \"in_30\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"lastUpdatedDate\": \"<dateTime>\",\n      \"outcome\": \"<string>\",\n      \"revision\": \"<integer>\",\n      \"state\": \"<string>\",\n      \"suite\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"testCase\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"url\": \"<string>\",\n        \"webUrl\": \"<string>\"\n      },\n      \"testPlan\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    },\n    {\n      \"assignedTo\": {\n        \"directoryAlias\": \"quis sed nostrud ut ipsum\",\n        \"id\": \"nostrud\",\n        \"imageUrl\": \"tempor incididunt\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"ipsum commodo\",\n        \"uniqueName\": \"adipisicing anim\",\n        \"_links\": {\n          \"links\": {\n            \"laborum_a\": {},\n            \"deserunt_d29\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"automated\": \"<boolean>\",\n      \"comment\": \"<string>\",\n      \"configuration\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"failureType\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"lastResetToActive\": \"<dateTime>\",\n      \"lastResolutionStateId\": \"<integer>\",\n      \"lastResult\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"lastResultDetails\": {\n        \"dateCompleted\": \"<dateTime>\",\n        \"duration\": \"<long>\",\n        \"runBy\": {\n          \"directoryAlias\": \"ipsum cill\",\n          \"id\": \"quis do sed pariatur\",\n          \"imageUrl\": \"eu officia\",\n          \"inactive\": true,\n          \"isAadIdentity\": false,\n          \"isContainer\": true,\n          \"isDeletedInOrigin\": false,\n          \"profileUrl\": \"adipisicing reprehenderit id nulla\",\n          \"uniqueName\": \"aute nisi\",\n          \"_links\": {\n            \"links\": {\n              \"aliquip_a60\": {},\n              \"nulla___4\": {}\n            }\n          },\n          \"descriptor\": \"<string>\",\n          \"displayName\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      },\n      \"lastResultState\": \"<string>\",\n      \"lastRunBuildNumber\": \"<string>\",\n      \"lastTestRun\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"lastUpdatedBy\": {\n        \"directoryAlias\": \"quis dolore id\",\n        \"id\": \"Lorem sed minim cillum\",\n        \"imageUrl\": \"ipsum\",\n        \"inactive\": true,\n        \"isAadIdentity\": true,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"aliqua Lorem\",\n        \"uniqueName\": \"nulla in\",\n        \"_links\": {\n          \"links\": {\n            \"dolor_8_\": {},\n            \"fugiat51\": {},\n            \"in3\": {},\n            \"eab0f\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"lastUpdatedDate\": \"<dateTime>\",\n      \"outcome\": \"<string>\",\n      \"revision\": \"<integer>\",\n      \"state\": \"<string>\",\n      \"suite\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"testCase\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"url\": \"<string>\",\n        \"webUrl\": \"<string>\"\n      },\n      \"testPlan\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    }\n  ],\n  \"pointsFilter\": {\n    \"configurationNames\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"testcaseIds\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"testers\": [\n      {\n        \"directoryAlias\": \"do cillum sit non\",\n        \"id\": \"ullamco dolor dolore cupidatat\",\n        \"imageUrl\": \"qui tempor ex commodo labore\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": true,\n        \"isDeletedInOrigin\": true,\n        \"profileUrl\": \"cillum irure do\",\n        \"uniqueName\": \"irure tempor deserunt et\",\n        \"_links\": {\n          \"links\": {\n            \"aliqua_fe\": {},\n            \"velit2_1\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"directoryAlias\": \"dolore aute dolor\",\n        \"id\": \"proident aute deserunt\",\n        \"imageUrl\": \"amet\",\n        \"inactive\": true,\n        \"isAadIdentity\": false,\n        \"isContainer\": false,\n        \"isDeletedInOrigin\": false,\n        \"profileUrl\": \"commodo ad adipisicing amet\",\n        \"uniqueName\": \"cillum\",\n        \"_links\": {\n          \"links\": {\n            \"aute_d4\": {},\n            \"ex074\": {},\n            \"nona3\": {}\n          }\n        },\n        \"descriptor\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"witFields\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get test points using query.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Points List",
              "filename": "Points List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Plans/{{planId}}/Suites/{{suiteId}}/points?witFields=<string>&configurationId=<string>&testCaseId=<string>&testPointIds=<string>&includePointDetails=<boolean>&$skip=<integer>&$top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "witFields",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "configurationId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "testCaseId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "testPointIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includePointDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of test points.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Points Update",
              "filename": "Points Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Plans/{{planId}}/Suites/{{suiteId}}/points/{{pointIds}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pointIds",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"outcome\": \"<string>\",\n  \"resetToActive\": \"<boolean>\",\n  \"tester\": {\n    \"directoryAlias\": \"id in\",\n    \"id\": \"culpa anim\",\n    \"imageUrl\": \"fugiat nost\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"dolore incididunt\",\n    \"uniqueName\": \"dolore ipsum irure\",\n    \"_links\": {\n      \"links\": {\n        \"nullaf1\": {},\n        \"est8\": {},\n        \"adipisicingd\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update test points.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Code Coverage",
          "filename": "Code Coverage",
          "root": {
            "docs": "Work with code coverage programmatically using the REST APIs for Azure DevOps Services and Azure DevOps Server.",
            "meta": {
              "name": "Code Coverage"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Code Coverage Get Build Code Coverage",
              "filename": "Code Coverage Get Build Code Coverage.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/codecoverage?buildId={{buildId}}&flags=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "flags",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get code coverage data for a build.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Code Coverage Get Test Run Code Coverage",
              "filename": "Code Coverage Get Test Run Code Coverage.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/codecoverage?flags=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "flags",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get code coverage data for a test run",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Results",
          "filename": "Results",
          "root": {
            "meta": {
              "name": "Results"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Results Add",
              "filename": "Results Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/results?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"afnStripId\": \"<integer>\",\n    \"area\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"associatedBugs\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"automatedTestId\": \"<string>\",\n    \"automatedTestName\": \"<string>\",\n    \"automatedTestStorage\": \"<string>\",\n    \"automatedTestType\": \"<string>\",\n    \"automatedTestTypeId\": \"<string>\",\n    \"build\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"buildReference\": {\n      \"branchName\": \"<string>\",\n      \"buildSystem\": \"<string>\",\n      \"definitionId\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"number\": \"<string>\",\n      \"repositoryId\": \"<string>\",\n      \"uri\": \"<string>\"\n    },\n    \"comment\": \"<string>\",\n    \"completedDate\": \"<dateTime>\",\n    \"computerName\": \"<string>\",\n    \"configuration\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"createdDate\": \"<dateTime>\",\n    \"customFields\": [\n      {\n        \"fieldName\": \"<string>\",\n        \"value\": {}\n      },\n      {\n        \"fieldName\": \"<string>\",\n        \"value\": {}\n      }\n    ],\n    \"durationInMs\": \"<double>\",\n    \"errorMessage\": \"<string>\",\n    \"failingSince\": {\n      \"build\": {\n        \"branchName\": \"<string>\",\n        \"buildSystem\": \"<string>\",\n        \"definitionId\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"number\": \"<string>\",\n        \"repositoryId\": \"<string>\",\n        \"uri\": \"<string>\"\n      },\n      \"date\": \"<dateTime>\",\n      \"release\": {\n        \"attempt\": \"<integer>\",\n        \"creationDate\": \"<dateTime>\",\n        \"definitionId\": \"<integer>\",\n        \"environmentCreationDate\": \"<dateTime>\",\n        \"environmentDefinitionId\": \"<integer>\",\n        \"environmentDefinitionName\": \"<string>\",\n        \"environmentId\": \"<integer>\",\n        \"environmentName\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"failureType\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"iterationDetails\": [\n      {\n        \"actionResults\": [\n          {\n            \"actionPath\": \"nisi magna\",\n            \"iterationId\": 48440387,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"sit elit non et Duis\",\n            \"url\": \"eiusmod consequat\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          },\n          {\n            \"actionPath\": \"sint el\",\n            \"iterationId\": 90667034,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"nostrud ipsum occaecat reprehenderit\",\n            \"url\": \"in laboris\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          }\n        ],\n        \"attachments\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"durationInMs\": \"<double>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"outcome\": \"<string>\",\n        \"parameters\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"startedDate\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"actionResults\": [\n          {\n            \"actionPath\": \"ullamco amet aute\",\n            \"iterationId\": 50398221,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"amet eiusmod id ullamc\",\n            \"url\": \"proident in fugiat incididunt\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          },\n          {\n            \"actionPath\": \"voluptate\",\n            \"iterationId\": 95162338,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"Duis cillum et sunt\",\n            \"url\": \"sed dolor et culpa\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          }\n        ],\n        \"attachments\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"durationInMs\": \"<double>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"outcome\": \"<string>\",\n        \"parameters\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"startedDate\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"lastUpdatedBy\": {\n      \"directoryAlias\": \"non nulla ullamco\",\n      \"id\": \"elit anim laborum\",\n      \"imageUrl\": \"tempor ipsum sit\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"fugiat pariatur\",\n      \"uniqueName\": \"laboris dolor\",\n      \"_links\": {\n        \"links\": {\n          \"nisie\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"lastUpdatedDate\": \"<dateTime>\",\n    \"outcome\": \"<string>\",\n    \"owner\": {\n      \"directoryAlias\": \"ut adipisicing ea\",\n      \"id\": \"veniam nisi\",\n      \"imageUrl\": \"aliquip commodo anim et\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"consectetur pariatur\",\n      \"uniqueName\": \"cillu\",\n      \"_links\": {\n        \"links\": {\n          \"exa\": {},\n          \"velitc9\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"priority\": \"<integer>\",\n    \"project\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"release\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"releaseReference\": {\n      \"attempt\": \"<integer>\",\n      \"creationDate\": \"<dateTime>\",\n      \"definitionId\": \"<integer>\",\n      \"environmentCreationDate\": \"<dateTime>\",\n      \"environmentDefinitionId\": \"<integer>\",\n      \"environmentDefinitionName\": \"<string>\",\n      \"environmentId\": \"<integer>\",\n      \"environmentName\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"resetCount\": \"<integer>\",\n    \"resolutionState\": \"<string>\",\n    \"resolutionStateId\": \"<integer>\",\n    \"resultGroupType\": \"dataDriven\",\n    \"revision\": \"<integer>\",\n    \"runBy\": {\n      \"directoryAlias\": \"consequat dolor sit\",\n      \"id\": \"quis labore\",\n      \"imageUrl\": \"enim cupidatat do cillum\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"ex consectetur\",\n      \"uniqueName\": \"occaecat est\",\n      \"_links\": {\n        \"links\": {\n          \"proident__\": {},\n          \"dolore_8\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"stackTrace\": \"<string>\",\n    \"startedDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"subResults\": [\n      {\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"computerName\": \"<string>\",\n        \"configuration\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"customFields\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          }\n        ],\n        \"displayName\": \"<string>\",\n        \"durationInMs\": \"<long>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"lastUpdatedDate\": \"<dateTime>\",\n        \"outcome\": \"<string>\",\n        \"parentId\": \"<integer>\",\n        \"resultGroupType\": \"none\",\n        \"sequenceId\": \"<integer>\",\n        \"stackTrace\": \"<string>\",\n        \"startedDate\": \"<dateTime>\",\n        \"subResults\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          }\n        ],\n        \"testResult\": {\n          \"testResultId\": \"<integer>\",\n          \"testRunId\": \"<integer>\"\n        },\n        \"url\": \"<string>\"\n      },\n      {\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"computerName\": \"<string>\",\n        \"configuration\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"customFields\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          }\n        ],\n        \"displayName\": \"<string>\",\n        \"durationInMs\": \"<long>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"lastUpdatedDate\": \"<dateTime>\",\n        \"outcome\": \"<string>\",\n        \"parentId\": \"<integer>\",\n        \"resultGroupType\": \"orderedTest\",\n        \"sequenceId\": \"<integer>\",\n        \"stackTrace\": \"<string>\",\n        \"startedDate\": \"<dateTime>\",\n        \"subResults\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          }\n        ],\n        \"testResult\": {\n          \"testResultId\": \"<integer>\",\n          \"testRunId\": \"<integer>\"\n        },\n        \"url\": \"<string>\"\n      }\n    ],\n    \"testCase\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testCaseReferenceId\": \"<integer>\",\n    \"testCaseRevision\": \"<integer>\",\n    \"testCaseTitle\": \"<string>\",\n    \"testPlan\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testPoint\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testRun\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testSuite\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  },\n  {\n    \"afnStripId\": \"<integer>\",\n    \"area\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"associatedBugs\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"automatedTestId\": \"<string>\",\n    \"automatedTestName\": \"<string>\",\n    \"automatedTestStorage\": \"<string>\",\n    \"automatedTestType\": \"<string>\",\n    \"automatedTestTypeId\": \"<string>\",\n    \"build\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"buildReference\": {\n      \"branchName\": \"<string>\",\n      \"buildSystem\": \"<string>\",\n      \"definitionId\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"number\": \"<string>\",\n      \"repositoryId\": \"<string>\",\n      \"uri\": \"<string>\"\n    },\n    \"comment\": \"<string>\",\n    \"completedDate\": \"<dateTime>\",\n    \"computerName\": \"<string>\",\n    \"configuration\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"createdDate\": \"<dateTime>\",\n    \"customFields\": [\n      {\n        \"fieldName\": \"<string>\",\n        \"value\": {}\n      },\n      {\n        \"fieldName\": \"<string>\",\n        \"value\": {}\n      }\n    ],\n    \"durationInMs\": \"<double>\",\n    \"errorMessage\": \"<string>\",\n    \"failingSince\": {\n      \"build\": {\n        \"branchName\": \"<string>\",\n        \"buildSystem\": \"<string>\",\n        \"definitionId\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"number\": \"<string>\",\n        \"repositoryId\": \"<string>\",\n        \"uri\": \"<string>\"\n      },\n      \"date\": \"<dateTime>\",\n      \"release\": {\n        \"attempt\": \"<integer>\",\n        \"creationDate\": \"<dateTime>\",\n        \"definitionId\": \"<integer>\",\n        \"environmentCreationDate\": \"<dateTime>\",\n        \"environmentDefinitionId\": \"<integer>\",\n        \"environmentDefinitionName\": \"<string>\",\n        \"environmentId\": \"<integer>\",\n        \"environmentName\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"failureType\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"iterationDetails\": [\n      {\n        \"actionResults\": [\n          {\n            \"actionPath\": \"commodo aliqu\",\n            \"iterationId\": 33257,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"proident fugiat occaecat\",\n            \"url\": \"enim pariatur laboris\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          },\n          {\n            \"actionPath\": \"nisi cupidatat\",\n            \"iterationId\": 89541459,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"Duis ut magna\",\n            \"url\": \"fugiat mollit et occaecat\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          }\n        ],\n        \"attachments\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"durationInMs\": \"<double>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"outcome\": \"<string>\",\n        \"parameters\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"startedDate\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"actionResults\": [\n          {\n            \"actionPath\": \"eu mollit sunt\",\n            \"iterationId\": 72515975,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"proident in\",\n            \"url\": \"occaecat\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          },\n          {\n            \"actionPath\": \"laborum\",\n            \"iterationId\": -27773683,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"labore ad aute\",\n            \"url\": \"commodo \",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          }\n        ],\n        \"attachments\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"durationInMs\": \"<double>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"outcome\": \"<string>\",\n        \"parameters\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"startedDate\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"lastUpdatedBy\": {\n      \"directoryAlias\": \"eu sunt est\",\n      \"id\": \"cillum ex aliquip\",\n      \"imageUrl\": \"incididunt officia culpa dolor voluptate\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"in\",\n      \"uniqueName\": \"irure mollit nostrud magna in\",\n      \"_links\": {\n        \"links\": {\n          \"aliquab7\": {},\n          \"sint_b\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"lastUpdatedDate\": \"<dateTime>\",\n    \"outcome\": \"<string>\",\n    \"owner\": {\n      \"directoryAlias\": \"ullamco enim laborum\",\n      \"id\": \"Excepteur pariatur mollit\",\n      \"imageUrl\": \"eu exercitation consequat sed\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"tempor anim cillum\",\n      \"uniqueName\": \"pariatur adipisicing\",\n      \"_links\": {\n        \"links\": {\n          \"eu_f00\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"priority\": \"<integer>\",\n    \"project\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"release\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"releaseReference\": {\n      \"attempt\": \"<integer>\",\n      \"creationDate\": \"<dateTime>\",\n      \"definitionId\": \"<integer>\",\n      \"environmentCreationDate\": \"<dateTime>\",\n      \"environmentDefinitionId\": \"<integer>\",\n      \"environmentDefinitionName\": \"<string>\",\n      \"environmentId\": \"<integer>\",\n      \"environmentName\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"resetCount\": \"<integer>\",\n    \"resolutionState\": \"<string>\",\n    \"resolutionStateId\": \"<integer>\",\n    \"resultGroupType\": \"none\",\n    \"revision\": \"<integer>\",\n    \"runBy\": {\n      \"directoryAlias\": \"consequat qui\",\n      \"id\": \"nisi aut\",\n      \"imageUrl\": \"officia sunt\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"laboris occaecat minim\",\n      \"uniqueName\": \"et velit culpa\",\n      \"_links\": {\n        \"links\": {\n          \"est_1\": {},\n          \"voluptatea4\": {},\n          \"enim_ecb\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"stackTrace\": \"<string>\",\n    \"startedDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"subResults\": [\n      {\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"computerName\": \"<string>\",\n        \"configuration\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"customFields\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          }\n        ],\n        \"displayName\": \"<string>\",\n        \"durationInMs\": \"<long>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"lastUpdatedDate\": \"<dateTime>\",\n        \"outcome\": \"<string>\",\n        \"parentId\": \"<integer>\",\n        \"resultGroupType\": \"generic\",\n        \"sequenceId\": \"<integer>\",\n        \"stackTrace\": \"<string>\",\n        \"startedDate\": \"<dateTime>\",\n        \"subResults\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          }\n        ],\n        \"testResult\": {\n          \"testResultId\": \"<integer>\",\n          \"testRunId\": \"<integer>\"\n        },\n        \"url\": \"<string>\"\n      },\n      {\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"computerName\": \"<string>\",\n        \"configuration\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"customFields\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          }\n        ],\n        \"displayName\": \"<string>\",\n        \"durationInMs\": \"<long>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"lastUpdatedDate\": \"<dateTime>\",\n        \"outcome\": \"<string>\",\n        \"parentId\": \"<integer>\",\n        \"resultGroupType\": \"orderedTest\",\n        \"sequenceId\": \"<integer>\",\n        \"stackTrace\": \"<string>\",\n        \"startedDate\": \"<dateTime>\",\n        \"subResults\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          }\n        ],\n        \"testResult\": {\n          \"testResultId\": \"<integer>\",\n          \"testRunId\": \"<integer>\"\n        },\n        \"url\": \"<string>\"\n      }\n    ],\n    \"testCase\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testCaseReferenceId\": \"<integer>\",\n    \"testCaseRevision\": \"<integer>\",\n    \"testCaseTitle\": \"<string>\",\n    \"testPlan\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testPoint\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testRun\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testSuite\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add test results to a test run.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Results Get",
              "filename": "Results Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/results/{{testCaseResultId}}?detailsToInclude=workItems&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "detailsToInclude",
                    "value": "workItems",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseResultId",
                    "value": "{{testCaseResultId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a test result for a test run.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Results List",
              "filename": "Results List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/results?detailsToInclude=workItems&$skip=<integer>&$top=<integer>&outcomes=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "detailsToInclude",
                    "value": "workItems",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "outcomes",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get test results for a test run.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Results Update",
              "filename": "Results Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Runs/{{runId}}/results?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"afnStripId\": \"<integer>\",\n    \"area\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"associatedBugs\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"automatedTestId\": \"<string>\",\n    \"automatedTestName\": \"<string>\",\n    \"automatedTestStorage\": \"<string>\",\n    \"automatedTestType\": \"<string>\",\n    \"automatedTestTypeId\": \"<string>\",\n    \"build\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"buildReference\": {\n      \"branchName\": \"<string>\",\n      \"buildSystem\": \"<string>\",\n      \"definitionId\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"number\": \"<string>\",\n      \"repositoryId\": \"<string>\",\n      \"uri\": \"<string>\"\n    },\n    \"comment\": \"<string>\",\n    \"completedDate\": \"<dateTime>\",\n    \"computerName\": \"<string>\",\n    \"configuration\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"createdDate\": \"<dateTime>\",\n    \"customFields\": [\n      {\n        \"fieldName\": \"<string>\",\n        \"value\": {}\n      },\n      {\n        \"fieldName\": \"<string>\",\n        \"value\": {}\n      }\n    ],\n    \"durationInMs\": \"<double>\",\n    \"errorMessage\": \"<string>\",\n    \"failingSince\": {\n      \"build\": {\n        \"branchName\": \"<string>\",\n        \"buildSystem\": \"<string>\",\n        \"definitionId\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"number\": \"<string>\",\n        \"repositoryId\": \"<string>\",\n        \"uri\": \"<string>\"\n      },\n      \"date\": \"<dateTime>\",\n      \"release\": {\n        \"attempt\": \"<integer>\",\n        \"creationDate\": \"<dateTime>\",\n        \"definitionId\": \"<integer>\",\n        \"environmentCreationDate\": \"<dateTime>\",\n        \"environmentDefinitionId\": \"<integer>\",\n        \"environmentDefinitionName\": \"<string>\",\n        \"environmentId\": \"<integer>\",\n        \"environmentName\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"failureType\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"iterationDetails\": [\n      {\n        \"actionResults\": [\n          {\n            \"actionPath\": \"nisi magna\",\n            \"iterationId\": 48440387,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"sit elit non et Duis\",\n            \"url\": \"eiusmod consequat\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          },\n          {\n            \"actionPath\": \"sint el\",\n            \"iterationId\": 90667034,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"nostrud ipsum occaecat reprehenderit\",\n            \"url\": \"in laboris\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          }\n        ],\n        \"attachments\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"durationInMs\": \"<double>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"outcome\": \"<string>\",\n        \"parameters\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"startedDate\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"actionResults\": [\n          {\n            \"actionPath\": \"ullamco amet aute\",\n            \"iterationId\": 50398221,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"amet eiusmod id ullamc\",\n            \"url\": \"proident in fugiat incididunt\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          },\n          {\n            \"actionPath\": \"voluptate\",\n            \"iterationId\": 95162338,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"Duis cillum et sunt\",\n            \"url\": \"sed dolor et culpa\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          }\n        ],\n        \"attachments\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"durationInMs\": \"<double>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"outcome\": \"<string>\",\n        \"parameters\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"startedDate\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"lastUpdatedBy\": {\n      \"directoryAlias\": \"non nulla ullamco\",\n      \"id\": \"elit anim laborum\",\n      \"imageUrl\": \"tempor ipsum sit\",\n      \"inactive\": false,\n      \"isAadIdentity\": true,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"fugiat pariatur\",\n      \"uniqueName\": \"laboris dolor\",\n      \"_links\": {\n        \"links\": {\n          \"nisie\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"lastUpdatedDate\": \"<dateTime>\",\n    \"outcome\": \"<string>\",\n    \"owner\": {\n      \"directoryAlias\": \"ut adipisicing ea\",\n      \"id\": \"veniam nisi\",\n      \"imageUrl\": \"aliquip commodo anim et\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"consectetur pariatur\",\n      \"uniqueName\": \"cillu\",\n      \"_links\": {\n        \"links\": {\n          \"exa\": {},\n          \"velitc9\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"priority\": \"<integer>\",\n    \"project\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"release\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"releaseReference\": {\n      \"attempt\": \"<integer>\",\n      \"creationDate\": \"<dateTime>\",\n      \"definitionId\": \"<integer>\",\n      \"environmentCreationDate\": \"<dateTime>\",\n      \"environmentDefinitionId\": \"<integer>\",\n      \"environmentDefinitionName\": \"<string>\",\n      \"environmentId\": \"<integer>\",\n      \"environmentName\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"resetCount\": \"<integer>\",\n    \"resolutionState\": \"<string>\",\n    \"resolutionStateId\": \"<integer>\",\n    \"resultGroupType\": \"dataDriven\",\n    \"revision\": \"<integer>\",\n    \"runBy\": {\n      \"directoryAlias\": \"consequat dolor sit\",\n      \"id\": \"quis labore\",\n      \"imageUrl\": \"enim cupidatat do cillum\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"ex consectetur\",\n      \"uniqueName\": \"occaecat est\",\n      \"_links\": {\n        \"links\": {\n          \"proident__\": {},\n          \"dolore_8\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"stackTrace\": \"<string>\",\n    \"startedDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"subResults\": [\n      {\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"computerName\": \"<string>\",\n        \"configuration\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"customFields\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          }\n        ],\n        \"displayName\": \"<string>\",\n        \"durationInMs\": \"<long>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"lastUpdatedDate\": \"<dateTime>\",\n        \"outcome\": \"<string>\",\n        \"parentId\": \"<integer>\",\n        \"resultGroupType\": \"none\",\n        \"sequenceId\": \"<integer>\",\n        \"stackTrace\": \"<string>\",\n        \"startedDate\": \"<dateTime>\",\n        \"subResults\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          }\n        ],\n        \"testResult\": {\n          \"testResultId\": \"<integer>\",\n          \"testRunId\": \"<integer>\"\n        },\n        \"url\": \"<string>\"\n      },\n      {\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"computerName\": \"<string>\",\n        \"configuration\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"customFields\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          }\n        ],\n        \"displayName\": \"<string>\",\n        \"durationInMs\": \"<long>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"lastUpdatedDate\": \"<dateTime>\",\n        \"outcome\": \"<string>\",\n        \"parentId\": \"<integer>\",\n        \"resultGroupType\": \"orderedTest\",\n        \"sequenceId\": \"<integer>\",\n        \"stackTrace\": \"<string>\",\n        \"startedDate\": \"<dateTime>\",\n        \"subResults\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          }\n        ],\n        \"testResult\": {\n          \"testResultId\": \"<integer>\",\n          \"testRunId\": \"<integer>\"\n        },\n        \"url\": \"<string>\"\n      }\n    ],\n    \"testCase\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testCaseReferenceId\": \"<integer>\",\n    \"testCaseRevision\": \"<integer>\",\n    \"testCaseTitle\": \"<string>\",\n    \"testPlan\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testPoint\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testRun\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testSuite\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  },\n  {\n    \"afnStripId\": \"<integer>\",\n    \"area\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"associatedBugs\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"automatedTestId\": \"<string>\",\n    \"automatedTestName\": \"<string>\",\n    \"automatedTestStorage\": \"<string>\",\n    \"automatedTestType\": \"<string>\",\n    \"automatedTestTypeId\": \"<string>\",\n    \"build\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"buildReference\": {\n      \"branchName\": \"<string>\",\n      \"buildSystem\": \"<string>\",\n      \"definitionId\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"number\": \"<string>\",\n      \"repositoryId\": \"<string>\",\n      \"uri\": \"<string>\"\n    },\n    \"comment\": \"<string>\",\n    \"completedDate\": \"<dateTime>\",\n    \"computerName\": \"<string>\",\n    \"configuration\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"createdDate\": \"<dateTime>\",\n    \"customFields\": [\n      {\n        \"fieldName\": \"<string>\",\n        \"value\": {}\n      },\n      {\n        \"fieldName\": \"<string>\",\n        \"value\": {}\n      }\n    ],\n    \"durationInMs\": \"<double>\",\n    \"errorMessage\": \"<string>\",\n    \"failingSince\": {\n      \"build\": {\n        \"branchName\": \"<string>\",\n        \"buildSystem\": \"<string>\",\n        \"definitionId\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"number\": \"<string>\",\n        \"repositoryId\": \"<string>\",\n        \"uri\": \"<string>\"\n      },\n      \"date\": \"<dateTime>\",\n      \"release\": {\n        \"attempt\": \"<integer>\",\n        \"creationDate\": \"<dateTime>\",\n        \"definitionId\": \"<integer>\",\n        \"environmentCreationDate\": \"<dateTime>\",\n        \"environmentDefinitionId\": \"<integer>\",\n        \"environmentDefinitionName\": \"<string>\",\n        \"environmentId\": \"<integer>\",\n        \"environmentName\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"failureType\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"iterationDetails\": [\n      {\n        \"actionResults\": [\n          {\n            \"actionPath\": \"commodo aliqu\",\n            \"iterationId\": 33257,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"proident fugiat occaecat\",\n            \"url\": \"enim pariatur laboris\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          },\n          {\n            \"actionPath\": \"nisi cupidatat\",\n            \"iterationId\": 89541459,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"Duis ut magna\",\n            \"url\": \"fugiat mollit et occaecat\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          }\n        ],\n        \"attachments\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"durationInMs\": \"<double>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"outcome\": \"<string>\",\n        \"parameters\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"startedDate\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"actionResults\": [\n          {\n            \"actionPath\": \"eu mollit sunt\",\n            \"iterationId\": 72515975,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"proident in\",\n            \"url\": \"occaecat\",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          },\n          {\n            \"actionPath\": \"laborum\",\n            \"iterationId\": -27773683,\n            \"sharedStepModel\": {},\n            \"stepIdentifier\": \"labore ad aute\",\n            \"url\": \"commodo \",\n            \"comment\": \"<string>\",\n            \"completedDate\": \"<dateTime>\",\n            \"durationInMs\": \"<double>\",\n            \"errorMessage\": \"<string>\",\n            \"outcome\": \"<string>\",\n            \"startedDate\": \"<dateTime>\"\n          }\n        ],\n        \"attachments\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"iterationId\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"size\": \"<long>\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"durationInMs\": \"<double>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"outcome\": \"<string>\",\n        \"parameters\": [\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"actionPath\": \"<string>\",\n            \"iterationId\": \"<integer>\",\n            \"parameterName\": \"<string>\",\n            \"stepIdentifier\": \"<string>\",\n            \"url\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"startedDate\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"lastUpdatedBy\": {\n      \"directoryAlias\": \"eu sunt est\",\n      \"id\": \"cillum ex aliquip\",\n      \"imageUrl\": \"incididunt officia culpa dolor voluptate\",\n      \"inactive\": false,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": false,\n      \"profileUrl\": \"in\",\n      \"uniqueName\": \"irure mollit nostrud magna in\",\n      \"_links\": {\n        \"links\": {\n          \"aliquab7\": {},\n          \"sint_b\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"lastUpdatedDate\": \"<dateTime>\",\n    \"outcome\": \"<string>\",\n    \"owner\": {\n      \"directoryAlias\": \"ullamco enim laborum\",\n      \"id\": \"Excepteur pariatur mollit\",\n      \"imageUrl\": \"eu exercitation consequat sed\",\n      \"inactive\": true,\n      \"isAadIdentity\": false,\n      \"isContainer\": false,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"tempor anim cillum\",\n      \"uniqueName\": \"pariatur adipisicing\",\n      \"_links\": {\n        \"links\": {\n          \"eu_f00\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"priority\": \"<integer>\",\n    \"project\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"release\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"releaseReference\": {\n      \"attempt\": \"<integer>\",\n      \"creationDate\": \"<dateTime>\",\n      \"definitionId\": \"<integer>\",\n      \"environmentCreationDate\": \"<dateTime>\",\n      \"environmentDefinitionId\": \"<integer>\",\n      \"environmentDefinitionName\": \"<string>\",\n      \"environmentId\": \"<integer>\",\n      \"environmentName\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"resetCount\": \"<integer>\",\n    \"resolutionState\": \"<string>\",\n    \"resolutionStateId\": \"<integer>\",\n    \"resultGroupType\": \"none\",\n    \"revision\": \"<integer>\",\n    \"runBy\": {\n      \"directoryAlias\": \"consequat qui\",\n      \"id\": \"nisi aut\",\n      \"imageUrl\": \"officia sunt\",\n      \"inactive\": true,\n      \"isAadIdentity\": true,\n      \"isContainer\": true,\n      \"isDeletedInOrigin\": true,\n      \"profileUrl\": \"laboris occaecat minim\",\n      \"uniqueName\": \"et velit culpa\",\n      \"_links\": {\n        \"links\": {\n          \"est_1\": {},\n          \"voluptatea4\": {},\n          \"enim_ecb\": {}\n        }\n      },\n      \"descriptor\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"stackTrace\": \"<string>\",\n    \"startedDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"subResults\": [\n      {\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"computerName\": \"<string>\",\n        \"configuration\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"customFields\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          }\n        ],\n        \"displayName\": \"<string>\",\n        \"durationInMs\": \"<long>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"lastUpdatedDate\": \"<dateTime>\",\n        \"outcome\": \"<string>\",\n        \"parentId\": \"<integer>\",\n        \"resultGroupType\": \"generic\",\n        \"sequenceId\": \"<integer>\",\n        \"stackTrace\": \"<string>\",\n        \"startedDate\": \"<dateTime>\",\n        \"subResults\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          }\n        ],\n        \"testResult\": {\n          \"testResultId\": \"<integer>\",\n          \"testRunId\": \"<integer>\"\n        },\n        \"url\": \"<string>\"\n      },\n      {\n        \"comment\": \"<string>\",\n        \"completedDate\": \"<dateTime>\",\n        \"computerName\": \"<string>\",\n        \"configuration\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"customFields\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"value\": {}\n          }\n        ],\n        \"displayName\": \"<string>\",\n        \"durationInMs\": \"<long>\",\n        \"errorMessage\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"lastUpdatedDate\": \"<dateTime>\",\n        \"outcome\": \"<string>\",\n        \"parentId\": \"<integer>\",\n        \"resultGroupType\": \"orderedTest\",\n        \"sequenceId\": \"<integer>\",\n        \"stackTrace\": \"<string>\",\n        \"startedDate\": \"<dateTime>\",\n        \"subResults\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n          }\n        ],\n        \"testResult\": {\n          \"testResultId\": \"<integer>\",\n          \"testRunId\": \"<integer>\"\n        },\n        \"url\": \"<string>\"\n      }\n    ],\n    \"testCase\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testCaseReferenceId\": \"<integer>\",\n    \"testCaseRevision\": \"<integer>\",\n    \"testCaseTitle\": \"<string>\",\n    \"testPlan\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testPoint\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testRun\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"testSuite\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update test results in a test run.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Session",
          "filename": "Session",
          "root": {
            "docs": "Test Sessions",
            "meta": {
              "name": "Session"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Session Create",
              "filename": "Session Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/test/session?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"area\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"comment\": \"<string>\",\n  \"endDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"lastUpdatedBy\": {\n    \"directoryAlias\": \"veniam commodo laborum dolor\",\n    \"id\": \"adipisicing dolor Lorem\",\n    \"imageUrl\": \"eu\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"commodo\",\n    \"uniqueName\": \"reprehenderit qui exercitation\",\n    \"_links\": {\n      \"links\": {\n        \"in_\": {},\n        \"est_2\": {},\n        \"id6\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastUpdatedDate\": \"<dateTime>\",\n  \"owner\": {\n    \"directoryAlias\": \"anim deserunt in ea\",\n    \"id\": \"amet enim aliqua\",\n    \"imageUrl\": \"velit exercitation\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"et anim voluptate nisi qui\",\n    \"uniqueName\": \"laborum magna ut\",\n    \"_links\": {\n      \"links\": {\n        \"sed_9d\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"project\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"propertyBag\": {\n    \"bag\": {\n      \"reprehenderit_4\": \"<string>\"\n    }\n  },\n  \"revision\": \"<integer>\",\n  \"source\": \"unknown\",\n  \"startDate\": \"<dateTime>\",\n  \"state\": \"declined\",\n  \"title\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a test session",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Session List",
              "filename": "Session List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/test/session?period=<integer>&allSessions=<boolean>&includeAllProperties=<boolean>&source=sessionInsightsForAll&includeOnlyCompletedSessions=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "period",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "allSessions",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeAllProperties",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "source",
                    "value": "sessionInsightsForAll",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeOnlyCompletedSessions",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of test sessions",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Session Update",
              "filename": "Session Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/test/session?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"area\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"comment\": \"<string>\",\n  \"endDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"lastUpdatedBy\": {\n    \"directoryAlias\": \"veniam commodo laborum dolor\",\n    \"id\": \"adipisicing dolor Lorem\",\n    \"imageUrl\": \"eu\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"commodo\",\n    \"uniqueName\": \"reprehenderit qui exercitation\",\n    \"_links\": {\n      \"links\": {\n        \"in_\": {},\n        \"est_2\": {},\n        \"id6\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastUpdatedDate\": \"<dateTime>\",\n  \"owner\": {\n    \"directoryAlias\": \"anim deserunt in ea\",\n    \"id\": \"amet enim aliqua\",\n    \"imageUrl\": \"velit exercitation\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"et anim voluptate nisi qui\",\n    \"uniqueName\": \"laborum magna ut\",\n    \"_links\": {\n      \"links\": {\n        \"sed_9d\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"project\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"propertyBag\": {\n    \"bag\": {\n      \"reprehenderit_4\": \"<string>\"\n    }\n  },\n  \"revision\": \"<integer>\",\n  \"source\": \"unknown\",\n  \"startDate\": \"<dateTime>\",\n  \"state\": \"declined\",\n  \"title\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a test session",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Result Retention Settings",
          "filename": "Result Retention Settings",
          "root": {
            "docs": "Work with test result retention settings programmatically using the REST APIs for Azure DevOps Services and Azure DevOps Server.",
            "meta": {
              "name": "Result Retention Settings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Result Retention Settings Get",
              "filename": "Result Retention Settings Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/resultretentionsettings?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get test result retention settings",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Result Retention Settings Update",
              "filename": "Result Retention Settings Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/resultretentionsettings?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"automatedResultsRetentionDuration\": \"<integer>\",\n  \"lastUpdatedBy\": {\n    \"directoryAlias\": \"incididunt in\",\n    \"id\": \"quis Duis officia incididunt\",\n    \"imageUrl\": \"nisi ad laboris\",\n    \"inactive\": false,\n    \"isAadIdentity\": false,\n    \"isContainer\": false,\n    \"isDeletedInOrigin\": false,\n    \"profileUrl\": \"aliqua\",\n    \"uniqueName\": \"exercitation mollit\",\n    \"_links\": {\n      \"links\": {\n        \"mollit2\": {},\n        \"proident_8\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"lastUpdatedDate\": \"<dateTime>\",\n  \"manualResultsRetentionDuration\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update test result retention settings",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Runs",
          "filename": "Runs",
          "root": {
            "meta": {
              "name": "Runs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Runs Create",
              "filename": "Runs Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/runs?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"automated\": \"<boolean>\",\n  \"build\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"buildDropLocation\": \"<string>\",\n  \"buildFlavor\": \"<string>\",\n  \"buildPlatform\": \"<string>\",\n  \"buildReference\": {\n    \"branchName\": \"<string>\",\n    \"buildDefinitionId\": \"<integer>\",\n    \"buildSystem\": \"<string>\",\n    \"creationDate\": \"<dateTime>\",\n    \"flavor\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"number\": \"<string>\",\n    \"platform\": \"<string>\",\n    \"project\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"repositoryGuid\": \"<string>\",\n    \"repositoryType\": \"<string>\",\n    \"sourceVersion\": \"<string>\",\n    \"targetBranchName\": \"<string>\",\n    \"uri\": \"<string>\"\n  },\n  \"comment\": \"<string>\",\n  \"completeDate\": \"<string>\",\n  \"configurationIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"controller\": \"<string>\",\n  \"customTestFields\": [\n    {\n      \"fieldName\": \"<string>\",\n      \"value\": {}\n    },\n    {\n      \"fieldName\": \"<string>\",\n      \"value\": {}\n    }\n  ],\n  \"dtlAutEnvironment\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"dtlTestEnvironment\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"dueDate\": \"<string>\",\n  \"environmentDetails\": {\n    \"csmContent\": \"<string>\",\n    \"csmParameters\": \"<string>\",\n    \"subscriptionName\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"filter\": {\n    \"sourceFilter\": \"<string>\",\n    \"testCaseFilter\": \"<string>\"\n  },\n  \"iteration\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"directoryAlias\": \"amet proident dolore\",\n    \"id\": \"laborum ut proident cillum\",\n    \"imageUrl\": \"cupidatat pariatur\",\n    \"inactive\": true,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"culpa ut enim\",\n    \"uniqueName\": \"sit occaecat amet\",\n    \"_links\": {\n      \"links\": {\n        \"aliquip_228\": {},\n        \"consequat25\": {},\n        \"ind\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"pipelineReference\": {\n    \"jobReference\": {\n      \"attempt\": \"<integer>\",\n      \"jobName\": \"<string>\"\n    },\n    \"phaseReference\": {\n      \"attempt\": \"<integer>\",\n      \"phaseName\": \"<string>\"\n    },\n    \"pipelineId\": \"<integer>\",\n    \"stageReference\": {\n      \"attempt\": \"<integer>\",\n      \"stageName\": \"<string>\"\n    }\n  },\n  \"plan\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"pointIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"releaseEnvironmentUri\": \"<string>\",\n  \"releaseReference\": {\n    \"attempt\": \"<integer>\",\n    \"creationDate\": \"<dateTime>\",\n    \"definitionId\": \"<integer>\",\n    \"environmentCreationDate\": \"<dateTime>\",\n    \"environmentDefinitionId\": \"<integer>\",\n    \"environmentDefinitionName\": \"<string>\",\n    \"environmentId\": \"<integer>\",\n    \"environmentName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"releaseUri\": \"<string>\",\n  \"runSummary\": [\n    {\n      \"duration\": \"<long>\",\n      \"resultCount\": \"<integer>\",\n      \"testOutcome\": \"inconclusive\"\n    },\n    {\n      \"duration\": \"<long>\",\n      \"resultCount\": \"<integer>\",\n      \"testOutcome\": \"aborted\"\n    }\n  ],\n  \"runTimeout\": \"<string>\",\n  \"sourceWorkflow\": \"<string>\",\n  \"startDate\": \"<string>\",\n  \"state\": \"<string>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"testConfigurationsMapping\": \"<string>\",\n  \"testEnvironmentId\": \"<string>\",\n  \"testSettings\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"type\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create new test run.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Runs Delete",
              "filename": "Runs Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/runs/{{runId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a test run by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Runs Get Test Run By Id",
              "filename": "Runs Get Test Run By Id.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/runs/{{runId}}?includeDetails=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a test run by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Runs Get Test Run Statistics",
              "filename": "Runs Get Test Run Statistics.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/runs/{{runId}}/Statistics?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get test run statistics , used when we want to get summary of a run by outcome.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Runs List",
              "filename": "Runs List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/runs?buildUri=<string>&owner=<string>&tmiRunId=<string>&planId={{planId}}&includeRunDetails=<boolean>&automated=<boolean>&$skip=<integer>&$top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "buildUri",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "owner",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "tmiRunId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeRunDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "automated",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of test runs.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Runs Update",
              "filename": "Runs Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/runs/{{runId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"build\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"buildDropLocation\": \"<string>\",\n  \"buildFlavor\": \"<string>\",\n  \"buildPlatform\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"completedDate\": \"<string>\",\n  \"controller\": \"<string>\",\n  \"deleteInProgressResults\": \"<boolean>\",\n  \"dtlAutEnvironment\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"dtlEnvironment\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"dtlEnvironmentDetails\": {\n    \"csmContent\": \"<string>\",\n    \"csmParameters\": \"<string>\",\n    \"subscriptionName\": \"<string>\"\n  },\n  \"dueDate\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"iteration\": \"<string>\",\n  \"logEntries\": [\n    {\n      \"dateCreated\": \"<dateTime>\",\n      \"entryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"dateCreated\": \"<dateTime>\",\n      \"entryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"releaseEnvironmentUri\": \"<string>\",\n  \"releaseUri\": \"<string>\",\n  \"runSummary\": [\n    {\n      \"duration\": \"<long>\",\n      \"resultCount\": \"<integer>\",\n      \"testOutcome\": \"error\"\n    },\n    {\n      \"duration\": \"<long>\",\n      \"resultCount\": \"<integer>\",\n      \"testOutcome\": \"notImpacted\"\n    }\n  ],\n  \"sourceWorkflow\": \"<string>\",\n  \"startedDate\": \"<string>\",\n  \"state\": \"<string>\",\n  \"substate\": \"abortedBySystem\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"testEnvironmentId\": \"<string>\",\n  \"testSettings\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update test run by its ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test  Suites",
          "filename": "Test  Suites",
          "root": {
            "docs": "Test suites help in organizing test cases in a test plan. A test suite can contain multiple child test suites, helping you build a folder structure under a test plan, or it can contain test cases. Last child test suites typically contain test cases, whereas intermediate suites represent a structure hierarchy. Intermediate suites can only be Static type, whereas last child suites can be of static suites, requirement-based suites, or query-based suites.",
            "meta": {
              "name": "Test  Suites"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test  Suites Add",
              "filename": "Test  Suites Add.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Plans/{{planId}}/suites/{{suiteId}}/testcases/{{testCaseIds}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseIds",
                    "value": "{{testCaseIds}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add test cases to suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites Get",
              "filename": "Test  Suites Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Plans/{{planId}}/suites/{{suiteId}}/testcases/{{testCaseIds}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseIds",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a specific test case in a test suite with test case id.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites List",
              "filename": "Test  Suites List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Plans/{{planId}}/suites/{{suiteId}}/testcases?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all test cases in a suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites Remove Test Cases From Suite Url",
              "filename": "Test  Suites Remove Test Cases From Suite Url.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Plans/{{planId}}/suites/{{suiteId}}/testcases/{{testCaseIds}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseIds",
                    "value": "{{testCaseIds}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "The test points associated with the test cases are removed from the test suite. The test case work item is not deleted from the system. See test cases resource to delete a test case permanently.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Test  Suites Update",
              "filename": "Test  Suites Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Plans/{{planId}}/suites/{{suiteId}}/testcases/{{testCaseIds}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "suiteId",
                    "value": "{{suiteId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseIds",
                    "value": "{{testCaseIds}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"configurations\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates the properties of the test case association in a suite.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test Cases",
          "filename": "Test Cases",
          "root": {
            "docs": "Controller to handle TestCase REST calls",
            "meta": {
              "name": "Test Cases"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test Cases Delete",
              "filename": "Test Cases Delete.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/testcases/{{testCaseId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a test case.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Test History",
          "filename": "Test History",
          "root": {
            "meta": {
              "name": "Test History"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Test History Query",
              "filename": "Test History Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/test/Results/testhistory?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"automatedTestName\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"buildDefinitionId\": \"<integer>\",\n  \"continuationToken\": \"<string>\",\n  \"groupBy\": \"environment\",\n  \"maxCompleteDate\": \"<dateTime>\",\n  \"releaseEnvDefinitionId\": \"<integer>\",\n  \"resultsForGroup\": [\n    {\n      \"displayName\": \"<string>\",\n      \"groupByValue\": \"<string>\",\n      \"results\": [\n        {\n          \"afnStripId\": \"<integer>\",\n          \"area\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"associatedBugs\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"automatedTestId\": \"<string>\",\n          \"automatedTestName\": \"<string>\",\n          \"automatedTestStorage\": \"<string>\",\n          \"automatedTestType\": \"<string>\",\n          \"automatedTestTypeId\": \"<string>\",\n          \"build\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"buildReference\": {\n            \"branchName\": \"<string>\",\n            \"buildSystem\": \"<string>\",\n            \"definitionId\": \"<integer>\",\n            \"id\": \"<integer>\",\n            \"number\": \"<string>\",\n            \"repositoryId\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          \"comment\": \"<string>\",\n          \"completedDate\": \"<dateTime>\",\n          \"computerName\": \"<string>\",\n          \"configuration\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"createdDate\": \"<dateTime>\",\n          \"customFields\": [\n            {\n              \"fieldName\": \"<string>\",\n              \"value\": {}\n            },\n            {\n              \"fieldName\": \"<string>\",\n              \"value\": {}\n            }\n          ],\n          \"durationInMs\": \"<double>\",\n          \"errorMessage\": \"<string>\",\n          \"failingSince\": {\n            \"build\": {\n              \"branchName\": \"<string>\",\n              \"buildSystem\": \"<string>\",\n              \"definitionId\": \"<integer>\",\n              \"id\": \"<integer>\",\n              \"number\": \"<string>\",\n              \"repositoryId\": \"<string>\",\n              \"uri\": \"<string>\"\n            },\n            \"date\": \"<dateTime>\",\n            \"release\": {\n              \"attempt\": \"<integer>\",\n              \"creationDate\": \"<dateTime>\",\n              \"definitionId\": \"<integer>\",\n              \"environmentCreationDate\": \"<dateTime>\",\n              \"environmentDefinitionId\": \"<integer>\",\n              \"environmentDefinitionName\": \"<string>\",\n              \"environmentId\": \"<integer>\",\n              \"environmentName\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\"\n            }\n          },\n          \"failureType\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"iterationDetails\": [\n            {\n              \"actionResults\": [\n                {\n                  \"actionPath\": \"of\",\n                  \"iterationId\": -14407548,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"officia ullamco ipsum\",\n                  \"url\": \"nulla consectetur\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                },\n                {\n                  \"actionPath\": \"Excepteur pariatur\",\n                  \"iterationId\": -67689147,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"cupidatat\",\n                  \"url\": \"Excepteur eu mollit\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                }\n              ],\n              \"attachments\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"durationInMs\": \"<double>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"outcome\": \"<string>\",\n              \"parameters\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ],\n              \"startedDate\": \"<dateTime>\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"actionResults\": [\n                {\n                  \"actionPath\": \"nostrud\",\n                  \"iterationId\": 8033150,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"nulla eu Duis id\",\n                  \"url\": \"pariatur\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                },\n                {\n                  \"actionPath\": \"irure dolor voluptate\",\n                  \"iterationId\": -28858054,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"id\",\n                  \"url\": \"esse qui\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                }\n              ],\n              \"attachments\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"durationInMs\": \"<double>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"outcome\": \"<string>\",\n              \"parameters\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ],\n              \"startedDate\": \"<dateTime>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"lastUpdatedBy\": {\n            \"directoryAlias\": \"dolore et dolor\",\n            \"id\": \"Excepteur ut\",\n            \"imageUrl\": \"tempor incididunt nostrud cup\",\n            \"inactive\": false,\n            \"isAadIdentity\": true,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"Duis aute adipisi\",\n            \"uniqueName\": \"\",\n            \"_links\": {\n              \"links\": {\n                \"eta81\": {},\n                \"sed4ce\": {},\n                \"sit418\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"lastUpdatedDate\": \"<dateTime>\",\n          \"outcome\": \"<string>\",\n          \"owner\": {\n            \"directoryAlias\": \"dolor incididunt\",\n            \"id\": \"ullamco\",\n            \"imageUrl\": \"ad incididunt deserunt\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"deserunt ex\",\n            \"uniqueName\": \"conseq\",\n            \"_links\": {\n              \"links\": {\n                \"incididunt_4aa\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"priority\": \"<integer>\",\n          \"project\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"release\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"releaseReference\": {\n            \"attempt\": \"<integer>\",\n            \"creationDate\": \"<dateTime>\",\n            \"definitionId\": \"<integer>\",\n            \"environmentCreationDate\": \"<dateTime>\",\n            \"environmentDefinitionId\": \"<integer>\",\n            \"environmentDefinitionName\": \"<string>\",\n            \"environmentId\": \"<integer>\",\n            \"environmentName\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          \"resetCount\": \"<integer>\",\n          \"resolutionState\": \"<string>\",\n          \"resolutionStateId\": \"<integer>\",\n          \"resultGroupType\": \"none\",\n          \"revision\": \"<integer>\",\n          \"runBy\": {\n            \"directoryAlias\": \"Excepteur amet enim anim nostrud\",\n            \"id\": \"incididunt\",\n            \"imageUrl\": \"te\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"sint voluptate ullamco consectetur\",\n            \"uniqueName\": \"in Duis nulla ullamco Ut\",\n            \"_links\": {\n              \"links\": {\n                \"eu_a\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"stackTrace\": \"<string>\",\n          \"startedDate\": \"<dateTime>\",\n          \"state\": \"<string>\",\n          \"subResults\": [\n            {\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"computerName\": \"<string>\",\n              \"configuration\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"customFields\": [\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                },\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                }\n              ],\n              \"displayName\": \"<string>\",\n              \"durationInMs\": \"<long>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"lastUpdatedDate\": \"<dateTime>\",\n              \"outcome\": \"<string>\",\n              \"parentId\": \"<integer>\",\n              \"resultGroupType\": \"generic\",\n              \"sequenceId\": \"<integer>\",\n              \"stackTrace\": \"<string>\",\n              \"startedDate\": \"<dateTime>\",\n              \"subResults\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                }\n              ],\n              \"testResult\": {\n                \"testResultId\": \"<integer>\",\n                \"testRunId\": \"<integer>\"\n              },\n              \"url\": \"<string>\"\n            },\n            {\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"computerName\": \"<string>\",\n              \"configuration\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"customFields\": [\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                },\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                }\n              ],\n              \"displayName\": \"<string>\",\n              \"durationInMs\": \"<long>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"lastUpdatedDate\": \"<dateTime>\",\n              \"outcome\": \"<string>\",\n              \"parentId\": \"<integer>\",\n              \"resultGroupType\": \"none\",\n              \"sequenceId\": \"<integer>\",\n              \"stackTrace\": \"<string>\",\n              \"startedDate\": \"<dateTime>\",\n              \"subResults\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                }\n              ],\n              \"testResult\": {\n                \"testResultId\": \"<integer>\",\n                \"testRunId\": \"<integer>\"\n              },\n              \"url\": \"<string>\"\n            }\n          ],\n          \"testCase\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testCaseReferenceId\": \"<integer>\",\n          \"testCaseRevision\": \"<integer>\",\n          \"testCaseTitle\": \"<string>\",\n          \"testPlan\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testPoint\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testRun\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testSuite\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"url\": \"<string>\"\n        },\n        {\n          \"afnStripId\": \"<integer>\",\n          \"area\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"associatedBugs\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"automatedTestId\": \"<string>\",\n          \"automatedTestName\": \"<string>\",\n          \"automatedTestStorage\": \"<string>\",\n          \"automatedTestType\": \"<string>\",\n          \"automatedTestTypeId\": \"<string>\",\n          \"build\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"buildReference\": {\n            \"branchName\": \"<string>\",\n            \"buildSystem\": \"<string>\",\n            \"definitionId\": \"<integer>\",\n            \"id\": \"<integer>\",\n            \"number\": \"<string>\",\n            \"repositoryId\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          \"comment\": \"<string>\",\n          \"completedDate\": \"<dateTime>\",\n          \"computerName\": \"<string>\",\n          \"configuration\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"createdDate\": \"<dateTime>\",\n          \"customFields\": [\n            {\n              \"fieldName\": \"<string>\",\n              \"value\": {}\n            },\n            {\n              \"fieldName\": \"<string>\",\n              \"value\": {}\n            }\n          ],\n          \"durationInMs\": \"<double>\",\n          \"errorMessage\": \"<string>\",\n          \"failingSince\": {\n            \"build\": {\n              \"branchName\": \"<string>\",\n              \"buildSystem\": \"<string>\",\n              \"definitionId\": \"<integer>\",\n              \"id\": \"<integer>\",\n              \"number\": \"<string>\",\n              \"repositoryId\": \"<string>\",\n              \"uri\": \"<string>\"\n            },\n            \"date\": \"<dateTime>\",\n            \"release\": {\n              \"attempt\": \"<integer>\",\n              \"creationDate\": \"<dateTime>\",\n              \"definitionId\": \"<integer>\",\n              \"environmentCreationDate\": \"<dateTime>\",\n              \"environmentDefinitionId\": \"<integer>\",\n              \"environmentDefinitionName\": \"<string>\",\n              \"environmentId\": \"<integer>\",\n              \"environmentName\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\"\n            }\n          },\n          \"failureType\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"iterationDetails\": [\n            {\n              \"actionResults\": [\n                {\n                  \"actionPath\": \"cupidatat\",\n                  \"iterationId\": -21433257,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"sit\",\n                  \"url\": \"eiusmod laborum aute\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                },\n                {\n                  \"actionPath\": \"in laborum ut\",\n                  \"iterationId\": 42202516,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"eu \",\n                  \"url\": \"fugiat incididunt dolor\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                }\n              ],\n              \"attachments\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"durationInMs\": \"<double>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"outcome\": \"<string>\",\n              \"parameters\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ],\n              \"startedDate\": \"<dateTime>\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"actionResults\": [\n                {\n                  \"actionPath\": \"Lorem ullamco\",\n                  \"iterationId\": 18260214,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"velit ad\",\n                  \"url\": \"sed dolore do\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                },\n                {\n                  \"actionPath\": \"labore sit ullamco est\",\n                  \"iterationId\": -2474980,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"incididunt enim\",\n                  \"url\": \"ut officia anim exercitation\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                }\n              ],\n              \"attachments\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"durationInMs\": \"<double>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"outcome\": \"<string>\",\n              \"parameters\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ],\n              \"startedDate\": \"<dateTime>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"lastUpdatedBy\": {\n            \"directoryAlias\": \"ut quis\",\n            \"id\": \"Ut dolore consectetur\",\n            \"imageUrl\": \"et\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"dolor elit eni\",\n            \"uniqueName\": \"elit\",\n            \"_links\": {\n              \"links\": {\n                \"ullamcoc\": {},\n                \"Excepteur_6\": {},\n                \"sunt_ebf\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"lastUpdatedDate\": \"<dateTime>\",\n          \"outcome\": \"<string>\",\n          \"owner\": {\n            \"directoryAlias\": \"aliqua dolor esse amet ut\",\n            \"id\": \"irure Lorem veniam proident ea\",\n            \"imageUrl\": \"eiusmod irure\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"irure eu nostrud velit\",\n            \"uniqueName\": \"ipsum sint\",\n            \"_links\": {\n              \"links\": {\n                \"nostrud15\": {},\n                \"amet6\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"priority\": \"<integer>\",\n          \"project\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"release\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"releaseReference\": {\n            \"attempt\": \"<integer>\",\n            \"creationDate\": \"<dateTime>\",\n            \"definitionId\": \"<integer>\",\n            \"environmentCreationDate\": \"<dateTime>\",\n            \"environmentDefinitionId\": \"<integer>\",\n            \"environmentDefinitionName\": \"<string>\",\n            \"environmentId\": \"<integer>\",\n            \"environmentName\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          \"resetCount\": \"<integer>\",\n          \"resolutionState\": \"<string>\",\n          \"resolutionStateId\": \"<integer>\",\n          \"resultGroupType\": \"dataDriven\",\n          \"revision\": \"<integer>\",\n          \"runBy\": {\n            \"directoryAlias\": \"voluptate\",\n            \"id\": \"occaecat aliqua\",\n            \"imageUrl\": \"ullamco\",\n            \"inactive\": true,\n            \"isAadIdentity\": false,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"amet eiusmod\",\n            \"uniqueName\": \"amet officia ullamco Lorem deserunt\",\n            \"_links\": {\n              \"links\": {\n                \"incididunt_6\": {},\n                \"in7\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"stackTrace\": \"<string>\",\n          \"startedDate\": \"<dateTime>\",\n          \"state\": \"<string>\",\n          \"subResults\": [\n            {\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"computerName\": \"<string>\",\n              \"configuration\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"customFields\": [\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                },\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                }\n              ],\n              \"displayName\": \"<string>\",\n              \"durationInMs\": \"<long>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"lastUpdatedDate\": \"<dateTime>\",\n              \"outcome\": \"<string>\",\n              \"parentId\": \"<integer>\",\n              \"resultGroupType\": \"dataDriven\",\n              \"sequenceId\": \"<integer>\",\n              \"stackTrace\": \"<string>\",\n              \"startedDate\": \"<dateTime>\",\n              \"subResults\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                }\n              ],\n              \"testResult\": {\n                \"testResultId\": \"<integer>\",\n                \"testRunId\": \"<integer>\"\n              },\n              \"url\": \"<string>\"\n            },\n            {\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"computerName\": \"<string>\",\n              \"configuration\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"customFields\": [\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                },\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                }\n              ],\n              \"displayName\": \"<string>\",\n              \"durationInMs\": \"<long>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"lastUpdatedDate\": \"<dateTime>\",\n              \"outcome\": \"<string>\",\n              \"parentId\": \"<integer>\",\n              \"resultGroupType\": \"orderedTest\",\n              \"sequenceId\": \"<integer>\",\n              \"stackTrace\": \"<string>\",\n              \"startedDate\": \"<dateTime>\",\n              \"subResults\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                }\n              ],\n              \"testResult\": {\n                \"testResultId\": \"<integer>\",\n                \"testRunId\": \"<integer>\"\n              },\n              \"url\": \"<string>\"\n            }\n          ],\n          \"testCase\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testCaseReferenceId\": \"<integer>\",\n          \"testCaseRevision\": \"<integer>\",\n          \"testCaseTitle\": \"<string>\",\n          \"testPlan\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testPoint\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testRun\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testSuite\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"url\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"displayName\": \"<string>\",\n      \"groupByValue\": \"<string>\",\n      \"results\": [\n        {\n          \"afnStripId\": \"<integer>\",\n          \"area\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"associatedBugs\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"automatedTestId\": \"<string>\",\n          \"automatedTestName\": \"<string>\",\n          \"automatedTestStorage\": \"<string>\",\n          \"automatedTestType\": \"<string>\",\n          \"automatedTestTypeId\": \"<string>\",\n          \"build\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"buildReference\": {\n            \"branchName\": \"<string>\",\n            \"buildSystem\": \"<string>\",\n            \"definitionId\": \"<integer>\",\n            \"id\": \"<integer>\",\n            \"number\": \"<string>\",\n            \"repositoryId\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          \"comment\": \"<string>\",\n          \"completedDate\": \"<dateTime>\",\n          \"computerName\": \"<string>\",\n          \"configuration\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"createdDate\": \"<dateTime>\",\n          \"customFields\": [\n            {\n              \"fieldName\": \"<string>\",\n              \"value\": {}\n            },\n            {\n              \"fieldName\": \"<string>\",\n              \"value\": {}\n            }\n          ],\n          \"durationInMs\": \"<double>\",\n          \"errorMessage\": \"<string>\",\n          \"failingSince\": {\n            \"build\": {\n              \"branchName\": \"<string>\",\n              \"buildSystem\": \"<string>\",\n              \"definitionId\": \"<integer>\",\n              \"id\": \"<integer>\",\n              \"number\": \"<string>\",\n              \"repositoryId\": \"<string>\",\n              \"uri\": \"<string>\"\n            },\n            \"date\": \"<dateTime>\",\n            \"release\": {\n              \"attempt\": \"<integer>\",\n              \"creationDate\": \"<dateTime>\",\n              \"definitionId\": \"<integer>\",\n              \"environmentCreationDate\": \"<dateTime>\",\n              \"environmentDefinitionId\": \"<integer>\",\n              \"environmentDefinitionName\": \"<string>\",\n              \"environmentId\": \"<integer>\",\n              \"environmentName\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\"\n            }\n          },\n          \"failureType\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"iterationDetails\": [\n            {\n              \"actionResults\": [\n                {\n                  \"actionPath\": \"ipsum exercitation amet dolor\",\n                  \"iterationId\": -33609930,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"quis in\",\n                  \"url\": \"labore adipisicing\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                },\n                {\n                  \"actionPath\": \"sed Ut ullamco\",\n                  \"iterationId\": -37558459,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"incididunt quis Duis ex officia\",\n                  \"url\": \"irure deserunt u\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                }\n              ],\n              \"attachments\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"durationInMs\": \"<double>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"outcome\": \"<string>\",\n              \"parameters\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ],\n              \"startedDate\": \"<dateTime>\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"actionResults\": [\n                {\n                  \"actionPath\": \"sed aute pariatur\",\n                  \"iterationId\": 90493095,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"laborum amet Ut sunt\",\n                  \"url\": \"eu\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                },\n                {\n                  \"actionPath\": \"elit sed in proident esse\",\n                  \"iterationId\": -86549927,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"laborum occaecat\",\n                  \"url\": \"cillum tempor\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                }\n              ],\n              \"attachments\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"durationInMs\": \"<double>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"outcome\": \"<string>\",\n              \"parameters\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ],\n              \"startedDate\": \"<dateTime>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"lastUpdatedBy\": {\n            \"directoryAlias\": \"nostrud ut\",\n            \"id\": \"laborum veniam incididunt\",\n            \"imageUrl\": \"id aliquip nisi ea sit\",\n            \"inactive\": true,\n            \"isAadIdentity\": true,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"Ut\",\n            \"uniqueName\": \"cupidatat quis qui Duis\",\n            \"_links\": {\n              \"links\": {\n                \"Excepteur_0bf\": {},\n                \"reprehenderit1b\": {},\n                \"aliqua8\": {},\n                \"ullamco_67\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"lastUpdatedDate\": \"<dateTime>\",\n          \"outcome\": \"<string>\",\n          \"owner\": {\n            \"directoryAlias\": \"Ut\",\n            \"id\": \"et Duis ad tempor pariatur\",\n            \"imageUrl\": \"labore amet elit dolor pariatur\",\n            \"inactive\": false,\n            \"isAadIdentity\": true,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"aute fugiat\",\n            \"uniqueName\": \"exercitation mollit dolor\",\n            \"_links\": {\n              \"links\": {\n                \"consectetur__38\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"priority\": \"<integer>\",\n          \"project\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"release\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"releaseReference\": {\n            \"attempt\": \"<integer>\",\n            \"creationDate\": \"<dateTime>\",\n            \"definitionId\": \"<integer>\",\n            \"environmentCreationDate\": \"<dateTime>\",\n            \"environmentDefinitionId\": \"<integer>\",\n            \"environmentDefinitionName\": \"<string>\",\n            \"environmentId\": \"<integer>\",\n            \"environmentName\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          \"resetCount\": \"<integer>\",\n          \"resolutionState\": \"<string>\",\n          \"resolutionStateId\": \"<integer>\",\n          \"resultGroupType\": \"none\",\n          \"revision\": \"<integer>\",\n          \"runBy\": {\n            \"directoryAlias\": \"aliqua eiusmod ex ut in\",\n            \"id\": \"amet nostrud eu do est\",\n            \"imageUrl\": \"officia ullamco\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": true,\n            \"profileUrl\": \"sint cupidatat elit\",\n            \"uniqueName\": \"exercitation\",\n            \"_links\": {\n              \"links\": {\n                \"adipisicing_4a\": {},\n                \"Excepteur_41a\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"stackTrace\": \"<string>\",\n          \"startedDate\": \"<dateTime>\",\n          \"state\": \"<string>\",\n          \"subResults\": [\n            {\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"computerName\": \"<string>\",\n              \"configuration\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"customFields\": [\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                },\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                }\n              ],\n              \"displayName\": \"<string>\",\n              \"durationInMs\": \"<long>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"lastUpdatedDate\": \"<dateTime>\",\n              \"outcome\": \"<string>\",\n              \"parentId\": \"<integer>\",\n              \"resultGroupType\": \"generic\",\n              \"sequenceId\": \"<integer>\",\n              \"stackTrace\": \"<string>\",\n              \"startedDate\": \"<dateTime>\",\n              \"subResults\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                }\n              ],\n              \"testResult\": {\n                \"testResultId\": \"<integer>\",\n                \"testRunId\": \"<integer>\"\n              },\n              \"url\": \"<string>\"\n            },\n            {\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"computerName\": \"<string>\",\n              \"configuration\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"customFields\": [\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                },\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                }\n              ],\n              \"displayName\": \"<string>\",\n              \"durationInMs\": \"<long>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"lastUpdatedDate\": \"<dateTime>\",\n              \"outcome\": \"<string>\",\n              \"parentId\": \"<integer>\",\n              \"resultGroupType\": \"dataDriven\",\n              \"sequenceId\": \"<integer>\",\n              \"stackTrace\": \"<string>\",\n              \"startedDate\": \"<dateTime>\",\n              \"subResults\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                }\n              ],\n              \"testResult\": {\n                \"testResultId\": \"<integer>\",\n                \"testRunId\": \"<integer>\"\n              },\n              \"url\": \"<string>\"\n            }\n          ],\n          \"testCase\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testCaseReferenceId\": \"<integer>\",\n          \"testCaseRevision\": \"<integer>\",\n          \"testCaseTitle\": \"<string>\",\n          \"testPlan\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testPoint\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testRun\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testSuite\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"url\": \"<string>\"\n        },\n        {\n          \"afnStripId\": \"<integer>\",\n          \"area\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"associatedBugs\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"automatedTestId\": \"<string>\",\n          \"automatedTestName\": \"<string>\",\n          \"automatedTestStorage\": \"<string>\",\n          \"automatedTestType\": \"<string>\",\n          \"automatedTestTypeId\": \"<string>\",\n          \"build\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"buildReference\": {\n            \"branchName\": \"<string>\",\n            \"buildSystem\": \"<string>\",\n            \"definitionId\": \"<integer>\",\n            \"id\": \"<integer>\",\n            \"number\": \"<string>\",\n            \"repositoryId\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          \"comment\": \"<string>\",\n          \"completedDate\": \"<dateTime>\",\n          \"computerName\": \"<string>\",\n          \"configuration\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"createdDate\": \"<dateTime>\",\n          \"customFields\": [\n            {\n              \"fieldName\": \"<string>\",\n              \"value\": {}\n            },\n            {\n              \"fieldName\": \"<string>\",\n              \"value\": {}\n            }\n          ],\n          \"durationInMs\": \"<double>\",\n          \"errorMessage\": \"<string>\",\n          \"failingSince\": {\n            \"build\": {\n              \"branchName\": \"<string>\",\n              \"buildSystem\": \"<string>\",\n              \"definitionId\": \"<integer>\",\n              \"id\": \"<integer>\",\n              \"number\": \"<string>\",\n              \"repositoryId\": \"<string>\",\n              \"uri\": \"<string>\"\n            },\n            \"date\": \"<dateTime>\",\n            \"release\": {\n              \"attempt\": \"<integer>\",\n              \"creationDate\": \"<dateTime>\",\n              \"definitionId\": \"<integer>\",\n              \"environmentCreationDate\": \"<dateTime>\",\n              \"environmentDefinitionId\": \"<integer>\",\n              \"environmentDefinitionName\": \"<string>\",\n              \"environmentId\": \"<integer>\",\n              \"environmentName\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\"\n            }\n          },\n          \"failureType\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"iterationDetails\": [\n            {\n              \"actionResults\": [\n                {\n                  \"actionPath\": \"ullamco do\",\n                  \"iterationId\": 35308499,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"enim pariatur ullamco\",\n                  \"url\": \"proident et sint ipsum\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                },\n                {\n                  \"actionPath\": \"enim pariatur adipisici\",\n                  \"iterationId\": -15637850,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"elit ex dolore\",\n                  \"url\": \"Excepteur ullamco in\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                }\n              ],\n              \"attachments\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"durationInMs\": \"<double>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"outcome\": \"<string>\",\n              \"parameters\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ],\n              \"startedDate\": \"<dateTime>\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"actionResults\": [\n                {\n                  \"actionPath\": \"aliquip ut magna laboris\",\n                  \"iterationId\": 26044512,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"adipisic\",\n                  \"url\": \"culpa minim\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                },\n                {\n                  \"actionPath\": \"consequat Duis eu Ut al\",\n                  \"iterationId\": 63179782,\n                  \"sharedStepModel\": {},\n                  \"stepIdentifier\": \"commodo \",\n                  \"url\": \"ea voluptate veniam sunt\",\n                  \"comment\": \"<string>\",\n                  \"completedDate\": \"<dateTime>\",\n                  \"durationInMs\": \"<double>\",\n                  \"errorMessage\": \"<string>\",\n                  \"outcome\": \"<string>\",\n                  \"startedDate\": \"<dateTime>\"\n                }\n              ],\n              \"attachments\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"iterationId\": \"<integer>\",\n                  \"name\": \"<string>\",\n                  \"size\": \"<long>\",\n                  \"url\": \"<string>\"\n                }\n              ],\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"durationInMs\": \"<double>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"outcome\": \"<string>\",\n              \"parameters\": [\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"actionPath\": \"<string>\",\n                  \"iterationId\": \"<integer>\",\n                  \"parameterName\": \"<string>\",\n                  \"stepIdentifier\": \"<string>\",\n                  \"url\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ],\n              \"startedDate\": \"<dateTime>\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"lastUpdatedBy\": {\n            \"directoryAlias\": \"veniam laborum quis qui\",\n            \"id\": \"consectetur veniam ali\",\n            \"imageUrl\": \"ea Excepteur labor\",\n            \"inactive\": true,\n            \"isAadIdentity\": true,\n            \"isContainer\": true,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"ut proident\",\n            \"uniqueName\": \"et occaecat voluptate ex consequat\",\n            \"_links\": {\n              \"links\": {\n                \"dolor_e\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"lastUpdatedDate\": \"<dateTime>\",\n          \"outcome\": \"<string>\",\n          \"owner\": {\n            \"directoryAlias\": \"Excepteur laboris au\",\n            \"id\": \"Duis laborum in\",\n            \"imageUrl\": \"ullamco culpa in occaecat dolor\",\n            \"inactive\": false,\n            \"isAadIdentity\": false,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"amet culpa\",\n            \"uniqueName\": \"dolore sunt cupidatat pariatur\",\n            \"_links\": {\n              \"links\": {\n                \"dolore26b\": {},\n                \"Ut_1fc\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"priority\": \"<integer>\",\n          \"project\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"release\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"releaseReference\": {\n            \"attempt\": \"<integer>\",\n            \"creationDate\": \"<dateTime>\",\n            \"definitionId\": \"<integer>\",\n            \"environmentCreationDate\": \"<dateTime>\",\n            \"environmentDefinitionId\": \"<integer>\",\n            \"environmentDefinitionName\": \"<string>\",\n            \"environmentId\": \"<integer>\",\n            \"environmentName\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          \"resetCount\": \"<integer>\",\n          \"resolutionState\": \"<string>\",\n          \"resolutionStateId\": \"<integer>\",\n          \"resultGroupType\": \"orderedTest\",\n          \"revision\": \"<integer>\",\n          \"runBy\": {\n            \"directoryAlias\": \"molli\",\n            \"id\": \"ad reprehenderit nulla consequat\",\n            \"imageUrl\": \"nulla ut eu commodo minim\",\n            \"inactive\": false,\n            \"isAadIdentity\": true,\n            \"isContainer\": false,\n            \"isDeletedInOrigin\": false,\n            \"profileUrl\": \"reprehenderit\",\n            \"uniqueName\": \"dolor\",\n            \"_links\": {\n              \"links\": {\n                \"sint14f\": {}\n              }\n            },\n            \"descriptor\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"stackTrace\": \"<string>\",\n          \"startedDate\": \"<dateTime>\",\n          \"state\": \"<string>\",\n          \"subResults\": [\n            {\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"computerName\": \"<string>\",\n              \"configuration\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"customFields\": [\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                },\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                }\n              ],\n              \"displayName\": \"<string>\",\n              \"durationInMs\": \"<long>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"lastUpdatedDate\": \"<dateTime>\",\n              \"outcome\": \"<string>\",\n              \"parentId\": \"<integer>\",\n              \"resultGroupType\": \"dataDriven\",\n              \"sequenceId\": \"<integer>\",\n              \"stackTrace\": \"<string>\",\n              \"startedDate\": \"<dateTime>\",\n              \"subResults\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                }\n              ],\n              \"testResult\": {\n                \"testResultId\": \"<integer>\",\n                \"testRunId\": \"<integer>\"\n              },\n              \"url\": \"<string>\"\n            },\n            {\n              \"comment\": \"<string>\",\n              \"completedDate\": \"<dateTime>\",\n              \"computerName\": \"<string>\",\n              \"configuration\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"url\": \"<string>\"\n              },\n              \"customFields\": [\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                },\n                {\n                  \"fieldName\": \"<string>\",\n                  \"value\": {}\n                }\n              ],\n              \"displayName\": \"<string>\",\n              \"durationInMs\": \"<long>\",\n              \"errorMessage\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"lastUpdatedDate\": \"<dateTime>\",\n              \"outcome\": \"<string>\",\n              \"parentId\": \"<integer>\",\n              \"resultGroupType\": \"generic\",\n              \"sequenceId\": \"<integer>\",\n              \"stackTrace\": \"<string>\",\n              \"startedDate\": \"<dateTime>\",\n              \"subResults\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/TestSubResult detected>\"\n                }\n              ],\n              \"testResult\": {\n                \"testResultId\": \"<integer>\",\n                \"testRunId\": \"<integer>\"\n              },\n              \"url\": \"<string>\"\n            }\n          ],\n          \"testCase\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testCaseReferenceId\": \"<integer>\",\n          \"testCaseRevision\": \"<integer>\",\n          \"testCaseTitle\": \"<string>\",\n          \"testPlan\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testPoint\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testRun\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"testSuite\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"url\": \"<string>\"\n          },\n          \"url\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"testCaseId\": \"<integer>\",\n  \"trendDays\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get history of a test method using TestHistoryQuery",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Test Results",
      "filename": "Test Results",
      "root": {
        "docs": "[Result Meta Data - REST API (Azure DevOps Test Results) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/testresults/result-meta-data?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Test Results"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Result Meta Data",
          "filename": "Result Meta Data",
          "root": {
            "docs": "Work with test results MetaData programmatically using the REST APIs for Azure dev ops and Team Foundation Server.",
            "meta": {
              "name": "Result Meta Data"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Result Meta Data Query",
              "filename": "Result Meta Data Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/results/resultmetadata?detailsToInclude=flakyIdentifiers&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "detailsToInclude",
                    "value": "flakyIdentifiers",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get list of test Result meta data details for corresponding testcasereferenceId",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Result Meta Data Update",
              "filename": "Result Meta Data Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/results/resultmetadata/{{testCaseReferenceId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "testCaseReferenceId",
                    "value": "{{testCaseReferenceId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"flakyIdentifiers\": [\n    {\n      \"branchName\": \"<string>\",\n      \"isFlaky\": \"<boolean>\"\n    },\n    {\n      \"branchName\": \"<string>\",\n      \"isFlaky\": \"<boolean>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update properties of test result meta data",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Testfailuretype",
          "filename": "Testfailuretype",
          "root": {
            "meta": {
              "name": "Testfailuretype"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Testfailuretype Create",
              "filename": "Testfailuretype Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/testfailuretype?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a new test failure type",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testfailuretype Delete",
              "filename": "Testfailuretype Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/testfailuretype/{{failureTypeId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "failureTypeId",
                    "value": "{{failureTypeId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a test failure type with specified failureTypeId",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testfailuretype List",
              "filename": "Testfailuretype List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/testfailuretype?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns the list of test failure types.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Testlog",
          "filename": "Testlog",
          "root": {
            "meta": {
              "name": "Testlog"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Testlog Get Test Result Logs",
              "filename": "Testlog Get Test Result Logs.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/results/{{resultId}}/testlog?type=generalAttachment&directoryPath=<string>&fileNamePrefix=<string>&fetchMetaData=<boolean>&top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "type",
                    "value": "generalAttachment",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "directoryPath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "fileNamePrefix",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "fetchMetaData",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resultId",
                    "value": "{{resultId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get list of test result attachments reference",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testlog Get Test Run Logs",
              "filename": "Testlog Get Test Run Logs.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/testlog?type=generalAttachment&directoryPath=<string>&fileNamePrefix=<string>&fetchMetaData=<boolean>&top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "type",
                    "value": "generalAttachment",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "directoryPath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "fileNamePrefix",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "fetchMetaData",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get list of test run attachments reference",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Testattachments",
          "filename": "Testattachments",
          "root": {
            "meta": {
              "name": "Testattachments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Testattachments Create Build Attachment In Log Store",
              "filename": "Testattachments Create Build Attachment In Log Store.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/uploadbuildattachments/{{buildId}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "buildId",
                    "value": "{{buildId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"attachmentType\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"stream\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates an attachment in the LogStore for the specified buildId.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testattachments Create Test Run Log Store Attachment",
              "filename": "Testattachments Create Test Run Log Store Attachment.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/testattachments?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"attachmentType\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"stream\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates an attachment in the LogStore for the specified runId.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testattachments Delete",
              "filename": "Testattachments Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/testattachments?fileName={{fileName}}&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes the attachment with the specified filename for the specified runId from the LogStore.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testattachments List",
              "filename": "Testattachments List.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/testattachments?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a list of attachments for the specified runId from the LogStore.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Testlogstoreendpoint",
          "filename": "Testlogstoreendpoint",
          "root": {
            "meta": {
              "name": "Testlogstoreendpoint"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Testlogstoreendpoint Get Test Log Store Endpoint Details For Result Log",
              "filename": "Testlogstoreendpoint Get Test Log Store Endpoint Details For Result Log.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/results/{{resultId}}/testlogstoreendpoint?type=generalAttachment&filePath=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "type",
                    "value": "generalAttachment",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "filePath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resultId",
                    "value": "{{resultId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get SAS Uri of a test results attachment",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testlogstoreendpoint Get Test Log Store Endpoint Details For Run Log",
              "filename": "Testlogstoreendpoint Get Test Log Store Endpoint Details For Run Log.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/testlogstoreendpoint?type=generalAttachment&filePath=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "type",
                    "value": "generalAttachment",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "filePath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get SAS Uri of a test run attachment",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testlogstoreendpoint Test Log Store Endpoint Details For Result",
              "filename": "Testlogstoreendpoint Test Log Store Endpoint Details For Result.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/results/{{resultId}}/testlogstoreendpoint?subResultId=<integer>&filePath=<string>&type=generalAttachment&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "subResultId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "filePath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "type",
                    "value": "generalAttachment",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "resultId",
                    "value": "{{resultId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create empty file for a result and Get Sas uri for the file",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Testlogstoreendpoint Test Log Store Endpoint Details For Run",
              "filename": "Testlogstoreendpoint Test Log Store Endpoint Details For Run.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/testresults/runs/{{runId}}/testlogstoreendpoint?testLogStoreOperationType=read&filePath=<string>&type=generalAttachment&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "testLogStoreOperationType",
                    "value": "read",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "filePath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "type",
                    "value": "generalAttachment",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "runId",
                    "value": "{{runId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create empty file for a run and Get Sas uri for the file",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "WIKI",
      "filename": "WIKI",
      "root": {
        "docs": "[Wikis - REST API (Azure DevOps Wiki) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/wiki/wikis?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "WIKI"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Page Stats",
          "filename": "Page Stats",
          "root": {
            "docs": "Controller to handle all REST calls related to  Wiki page stats.",
            "meta": {
              "name": "Page Stats"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Page Stats Get",
              "filename": "Page Stats Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pages/{{pageId}}/stats?pageViewsForDays=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pageViewsForDays",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pageId",
                    "value": "{{pageId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns page detail corresponding to Page ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Attachments",
          "filename": "Attachments",
          "root": {
            "docs": "Wiki attachments are files that can be attached to wiki pages using MD links.",
            "meta": {
              "name": "Attachments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Attachments Create",
              "filename": "Attachments Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/attachments?name=<string>&versionDescriptor.version=<string>&versionDescriptor.versionOptions=none&versionDescriptor.versionType=branch&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/octet-stream",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionOptions",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionType",
                    "value": "branch",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "text",
                  "text": "<string>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates an attachment in the wiki.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pages",
          "filename": "Pages",
          "root": {
            "docs": "Wiki pages are the MD files that are stored in a Git repository in the backend.",
            "meta": {
              "name": "Pages"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pages Create Or Update",
              "filename": "Pages Create Or Update.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pages?path={{path}}&comment=<string>&versionDescriptor.version=<string>&versionDescriptor.versionOptions=none&versionDescriptor.versionType=branch&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Version",
                    "value": "<string>",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "comment",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionOptions",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionType",
                    "value": "branch",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"content\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates or edits a wiki page.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pages Delete Page By Id",
              "filename": "Pages Delete Page By Id.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pages/{{pageId}}?comment=<string>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "comment",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pageId",
                    "value": "{{pageId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a wiki page.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pages Delete Page",
              "filename": "Pages Delete Page.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pages?path={{path}}&comment=<string>&versionDescriptor.version=<string>&versionDescriptor.versionOptions=none&versionDescriptor.versionType=branch&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "comment",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionOptions",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionType",
                    "value": "branch",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes a wiki page.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pages Get Page By Id",
              "filename": "Pages Get Page By Id.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pages/{{pageId}}?recursionLevel=oneLevel&includeContent=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "recursionLevel",
                    "value": "oneLevel",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeContent",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pageId",
                    "value": "{{pageId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets metadata or content of the wiki page for the provided page id. Content negotiation is done based on the `Accept` header sent in the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pages Get Page",
              "filename": "Pages Get Page.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pages?path={{path}}&recursionLevel=oneLevel&versionDescriptor.version=<string>&versionDescriptor.versionOptions=none&versionDescriptor.versionType=branch&includeContent=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "recursionLevel",
                    "value": "oneLevel",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionOptions",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionType",
                    "value": "branch",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeContent",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets metadata or content of the wiki page for the provided path. Content negotiation is done based on the `Accept` header sent in the request.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pages Update",
              "filename": "Pages Update.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pages/{{pageId}}?comment=<string>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Version",
                    "value": "<string>",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "comment",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "pageId",
                    "value": "{{pageId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"content\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Edits a wiki page.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pages Batch",
          "filename": "Pages Batch",
          "root": {
            "docs": "Controller to handle all Batch REST calls against Wiki pages.",
            "meta": {
              "name": "Pages Batch"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pages Batch Get",
              "filename": "Pages Batch Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pagesbatch?versionDescriptor.version=<string>&versionDescriptor.versionOptions=none&versionDescriptor.versionType=branch&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "versionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionOptions",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionType",
                    "value": "branch",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"continuationToken\": \"<string>\",\n  \"pageViewsForDays\": \"<integer>\",\n  \"top\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns pageable list of Wiki Pages",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Page Moves",
          "filename": "Page Moves",
          "root": {
            "docs": "Wiki page moves are operations to move wiki pages to new path or new order in the pages hierarchy.",
            "meta": {
              "name": "Page Moves"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Page Moves Create",
              "filename": "Page Moves Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}/pagemoves?comment=<string>&versionDescriptor.version=<string>&versionDescriptor.versionOptions=none&versionDescriptor.versionType=branch&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "comment",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionOptions",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionType",
                    "value": "branch",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"newOrder\": \"<integer>\",\n  \"newPath\": \"<string>\",\n  \"path\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a page move operation that updates the path and order of the page as provided in the parameters.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Wikis",
          "filename": "Wikis",
          "root": {
            "docs": "Wiki is a collection of pages maintained in a particular hierarchy. Every wiki is backed up by a Git repository.",
            "meta": {
              "name": "Wikis"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Wikis Create",
              "filename": "Wikis Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"version\": {},\n  \"mappedPath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectId\": \"<uuid>\",\n  \"repositoryId\": \"<uuid>\",\n  \"type\": \"projectWiki\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates the wiki resource.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Wikis Delete",
              "filename": "Wikis Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes the wiki corresponding to the wiki ID or wiki name provided.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Wikis Get",
              "filename": "Wikis Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the wiki corresponding to the wiki ID or wiki name provided.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Wikis List",
              "filename": "Wikis List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets all wikis in a project or collection.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Wikis Update",
              "filename": "Wikis Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wiki/wikis/{{wikiIdentifier}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wikiIdentifier",
                    "value": "{{wikiIdentifier}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"name\": \"<string>\",\n  \"versions\": [\n    {\n      \"version\": \"<string>\",\n      \"versionOptions\": \"firstParent\",\n      \"versionType\": \"branch\"\n    },\n    {\n      \"version\": \"<string>\",\n      \"versionOptions\": \"firstParent\",\n      \"versionType\": \"branch\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates the wiki corresponding to the wiki ID or wiki name provided using the update parameters.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Tfvc",
      "filename": "Tfvc",
      "root": {
        "docs": "[TFVC REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/tfvc/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Tfvc"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Branches",
          "filename": "Branches",
          "root": {
            "meta": {
              "name": "Branches"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Branches Get Branch Refs",
              "filename": "Branches Get Branch Refs.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/tfvc/branches?scopePath=<string>&includeDeleted=<boolean>&includeLinks=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "scopePath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get branch hierarchies below the specified scopePath",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Labels",
          "filename": "Labels",
          "root": {
            "meta": {
              "name": "Labels"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Labels Get Label Items",
              "filename": "Labels Get Label Items.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tfvc/labels/{{labelId}}/items?$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "labelId",
                    "value": "{{labelId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get items under a label.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Labels Get",
              "filename": "Labels Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/tfvc/labels/{{labelId}}?requestData.includeLinks=<boolean>&requestData.itemLabelFilter=<string>&requestData.labelScope=<string>&requestData.maxItemCount=<integer>&requestData.name=<string>&requestData.owner=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "requestData.includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.itemLabelFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.labelScope",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.maxItemCount",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.owner",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "labelId",
                    "value": "{{labelId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a single deep label.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Labels List",
              "filename": "Labels List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/tfvc/labels?requestData.includeLinks=<boolean>&requestData.itemLabelFilter=<string>&requestData.labelScope=<string>&requestData.maxItemCount=<integer>&requestData.name=<string>&requestData.owner=<string>&$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "requestData.includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.itemLabelFilter",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.labelScope",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.maxItemCount",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.owner",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a collection of shallow label references.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Changesets",
          "filename": "Changesets",
          "root": {
            "docs": "Controller to handle all Rest Calls for Changeset Changes",
            "meta": {
              "name": "Changesets"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Changesets Create",
              "filename": "Changesets Create.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/tfvc/changesets?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"accountId\": \"e2aea079-0b25-3062-dcf3-0313bb858ba2\",\n  \"collectionId\": \"urn:uuid:5c9fa103-e228-5f48-86d1-f984ae754845\",\n  \"hasMoreChanges\": true,\n  \"policyOverride\": {},\n  \"teamProjectIds\": [\n    \"urn:uuid:45e3376f-976c-9072-145a-4ca95a6a43f1\",\n    \"urn:uuid:5a71d023-c4e4-6323-a506-b0e1f32777a0\"\n  ],\n  \"_links\": {\n    \"links\": {\n      \"inc\": {},\n      \"nulla_0_\": {}\n    }\n  },\n  \"author\": {\n    \"directoryAlias\": \"et voluptate commodo quis minim\",\n    \"id\": \"nostrud par\",\n    \"imageUrl\": \"commodo\",\n    \"inactive\": true,\n    \"isAadIdentity\": false,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"culpa Lorem sint\",\n    \"uniqueName\": \"et in sunt ea\",\n    \"_links\": {\n      \"links\": {\n        \"ex__\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"changesetId\": \"<integer>\",\n  \"checkedInBy\": {\n    \"directoryAlias\": \"mollit\",\n    \"id\": \"et exercitation do eu est\",\n    \"imageUrl\": \"elit cillum culpa exercitation\",\n    \"inactive\": false,\n    \"isAadIdentity\": true,\n    \"isContainer\": true,\n    \"isDeletedInOrigin\": true,\n    \"profileUrl\": \"commodo\",\n    \"uniqueName\": \"eiusmod deseru\",\n    \"_links\": {\n      \"links\": {\n        \"do_4_\": {},\n        \"ullamco_2\": {}\n      }\n    },\n    \"descriptor\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"comment\": \"<string>\",\n  \"commentTruncated\": \"<boolean>\",\n  \"createdDate\": \"<dateTime>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new changeset.\n\nAccepts TfvcChangeset as JSON body",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Changesets Get Batched Changesets",
              "filename": "Changesets Get Batched Changesets.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tfvc/changesetsbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"changesetIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"commentLength\": \"<integer>\",\n  \"includeLinks\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns changesets for a given list of changeset Ids.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Changesets Get Changeset Changes",
              "filename": "Changesets Get Changeset Changes.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tfvc/changesets/{{changesetId}}/changes?$skip=<integer>&$top=<integer>&continuationToken=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "changesetId",
                    "value": "{{changesetId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve Tfvc changes for a given changeset.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Changesets Get Changeset Work Items",
              "filename": "Changesets Get Changeset Work Items.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tfvc/changesets/{{changesetId}}/workItems?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "changesetId",
                    "value": "{{changesetId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieves the work items associated with a particular changeset.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Changesets Get Changesets",
              "filename": "Changesets Get Changesets.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/tfvc/changesets?maxCommentLength=<integer>&$skip=<integer>&$top=<integer>&$orderby=<string>&searchCriteria.author=<string>&searchCriteria.followRenames=<boolean>&searchCriteria.fromDate=<string>&searchCriteria.fromId=<integer>&searchCriteria.includeLinks=<boolean>&searchCriteria.itemPath=<string>&searchCriteria.mappings=<string>&searchCriteria.toDate=<string>&searchCriteria.toId=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "maxCommentLength",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$orderby",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.author",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.followRenames",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.fromDate",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.fromId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.itemPath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.mappings",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.toDate",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.toId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve Tfvc Changesets\n\nNote: This is a new version of the GetChangesets API that doesn't expose the unneeded queryParams\npresent in the 1.0 version of the API.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Changesets Get",
              "filename": "Changesets Get.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/tfvc/changesets/{{changesetId}}?maxChangeCount=<integer>&includeDetails=<boolean>&includeWorkItems=<boolean>&maxCommentLength=<integer>&includeSourceRename=<boolean>&$skip=<integer>&$top=<integer>&$orderby=<string>&searchCriteria.author=<string>&searchCriteria.followRenames=<boolean>&searchCriteria.fromDate=<string>&searchCriteria.fromId=<integer>&searchCriteria.includeLinks=<boolean>&searchCriteria.itemPath=<string>&searchCriteria.mappings=<string>&searchCriteria.toDate=<string>&searchCriteria.toId=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "maxChangeCount",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeWorkItems",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "maxCommentLength",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeSourceRename",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$orderby",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.author",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.followRenames",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.fromDate",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.fromId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.itemPath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.mappings",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.toDate",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "searchCriteria.toId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "changesetId",
                    "value": "{{changesetId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieve a Tfvc Changeset",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Items",
          "filename": "Items",
          "root": {
            "docs": "Controller that handles REST API calls for Tfvc Items",
            "meta": {
              "name": "Items"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Items Get Items Batch",
              "filename": "Items Get Items Batch.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/tfvc/itembatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"includeContentMetadata\": \"<boolean>\",\n  \"includeLinks\": \"<boolean>\",\n  \"itemDescriptors\": [\n    {\n      \"path\": \"<string>\",\n      \"recursionLevel\": \"full\",\n      \"version\": \"<string>\",\n      \"versionOption\": \"useRename\",\n      \"versionType\": \"tip\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"recursionLevel\": \"none\",\n      \"version\": \"<string>\",\n      \"versionOption\": \"none\",\n      \"versionType\": \"changeset\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Items List",
              "filename": "Items List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/tfvc/items?scopePath=<string>&recursionLevel=none&includeLinks=<boolean>&versionDescriptor.version=<string>&versionDescriptor.versionOption=previous&versionDescriptor.versionType=shelveset&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "scopePath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "recursionLevel",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.version",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionOption",
                    "value": "previous",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "versionDescriptor.versionType",
                    "value": "shelveset",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of Tfvc items",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Shelvesets",
          "filename": "Shelvesets",
          "root": {
            "meta": {
              "name": "Shelvesets"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Shelvesets Get Shelveset Changes",
              "filename": "Shelvesets Get Shelveset Changes.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tfvc/shelvesets/changes?shelvesetId=<string>&$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "shelvesetId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get changes included in a shelveset.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Shelvesets Get Shelveset Work Items",
              "filename": "Shelvesets Get Shelveset Work Items.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tfvc/shelvesets/workitems?shelvesetId=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "shelvesetId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get work items associated with a shelveset.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Shelvesets Get",
              "filename": "Shelvesets Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tfvc/shelvesets?shelvesetId=<string>&requestData.includeDetails=<boolean>&requestData.includeLinks=<boolean>&requestData.includeWorkItems=<boolean>&requestData.maxChangeCount=<integer>&requestData.maxCommentLength=<integer>&requestData.name=<string>&requestData.owner=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "shelvesetId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.includeDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.includeLinks",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.includeWorkItems",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.maxChangeCount",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.maxCommentLength",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.name",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "requestData.owner",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a single deep shelveset.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Token Admin",
      "filename": "Token Admin",
      "root": {
        "docs": "[Token Administration REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/tokenadmin/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Token Admin"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Personal Access Tokens",
          "filename": "Personal Access Tokens",
          "root": {
            "docs": "This resource allows token administrators to retrieve personal access token (PAT) details for their organization's users.",
            "meta": {
              "name": "Personal Access Tokens"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Personal Access Tokens List",
              "filename": "Personal Access Tokens List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tokenadmin/personalaccesstokens/{{subjectDescriptor}}?pageSize=<integer>&continuationToken=<string>&isPublic=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pageSize",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isPublic",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Lists of all the session token details of the personal access tokens (PATs) for a particular user.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Revocations",
          "filename": "Revocations",
          "root": {
            "docs": "This resource allows token administrators to revoke the OAuth authorizations,\nincluding personal access tokens (PATs), for their organization's users.",
            "meta": {
              "name": "Revocations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Revocations Revoke Authorizations",
              "filename": "Revocations Revoke Authorizations.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tokenadmin/revocations?isPublic=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "isPublic",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"authorizationId\": \"<uuid>\"\n  },\n  {\n    \"authorizationId\": \"<uuid>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Revokes the listed OAuth authorizations.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Revocation Rules",
          "filename": "Revocation Rules",
          "root": {
            "docs": "This resource allows token administrators to create revocation rules\nthat prevent the usage of OAuth authorizations that cannot be revoked directly.",
            "meta": {
              "name": "Revocation Rules"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Revocation Rules Create",
              "filename": "Revocation Rules Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tokenadmin/revocationrules?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"createdBefore\": \"<dateTime>\",\n  \"scopes\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a revocation rule to prevent the further usage of any OAuth authorizations that were created before the current point in time and which match the conditions in the rule.\n\nNot all kinds of OAuth authorizations can be revoked directly.\nSome, such as self-describing session tokens, must instead by revoked by creating a rule\nwhich will be evaluated and used to reject matching OAuth credentials at authentication time.\nRevocation rules created through this endpoint will apply to all credentials that were issued\nbefore the datetime at which the rule was created and which match one or more additional conditions.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Token List Global Identities",
          "filename": "Token List Global Identities",
          "root": {
            "meta": {
              "name": "Token List Global Identities"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "List",
              "filename": "List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/_apis/tokenadministration/tokenlistglobalidentities?isPublic=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "isPublic",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"authorizationId\": \"<uuid>\"\n  },\n  {\n    \"authorizationId\": \"<uuid>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Revokes the listed OAuth authorizations.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Token Personal Access Tokens",
          "filename": "Token Personal Access Tokens",
          "root": {
            "docs": "This resource allows token administrators to retrieve personal access token (PAT) details for their organization's users.",
            "meta": {
              "name": "Token Personal Access Tokens"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "List",
              "filename": "List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/_apis/tokenadministration/tokenpersonalaccesstokens/{{subjectDescriptor}}?pageSize=<integer>&continuationToken=<string>&isPublic=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "pageSize",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isPublic",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "subjectDescriptor",
                    "value": "{{subjectDescriptor}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Lists of all the session token details of the personal access tokens (PATs) for a particular user.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Token Revocations",
          "filename": "Token Revocations",
          "root": {
            "docs": "This resource allows token administrators to revoke the OAuth authorizations,\nincluding personal access tokens (PATs), for their organization's users.",
            "meta": {
              "name": "Token Revocations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Revoke Authorizations",
              "filename": "Revoke Authorizations.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/_apis/tokenadministration/tokenrevocations?hostId=<uuid>&isPublic=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "hostId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "isPublic",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"authorizationIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Revokes the listed OAuth authorizations.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Tokens",
      "filename": "Tokens",
      "root": {
        "docs": "[Token Lifecycle Management REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/tokens/?view=azure-devops-rest-7.1&tabs=powershell)",
        "meta": {
          "name": "Tokens"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Pats",
          "filename": "Pats",
          "root": {
            "docs": "The PAT Lifecycle Management API allows users to manage the lifecycle of their personal access tokens (PATs), which can be used as an alternate method to authenticate into Azure DevOps.",
            "meta": {
              "name": "Pats"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Pats Create",
              "filename": "Pats Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tokens/pats?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"allOrgs\": \"<boolean>\",\n  \"displayName\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"validTo\": \"<dateTime>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a new personal access token (PAT) for the requesting user.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pats Get",
              "filename": "Pats Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tokens/pats?authorizationId=<uuid>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "authorizationId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a single personal access token (PAT).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pats Revoke",
              "filename": "Pats Revoke.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tokens/pats?authorizationId=<uuid>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "authorizationId",
                    "value": "<uuid>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Revokes a personal access token (PAT) by authorizationId.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Pats Update",
              "filename": "Pats Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/tokens/pats?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"allOrgs\": \"<boolean>\",\n  \"authorizationId\": \"<uuid>\",\n  \"displayName\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"validTo\": \"<dateTime>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates an existing personal access token (PAT) with the new parameters. To update a token, it must be valid (has not been revoked).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Work",
      "filename": "Work",
      "root": {
        "docs": "[Work REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/work/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Work"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Backlogconfiguration",
          "filename": "Backlogconfiguration",
          "root": {
            "meta": {
              "name": "Backlogconfiguration"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Backlogconfiguration Get",
              "filename": "Backlogconfiguration Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/backlogconfiguration?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets backlog configuration for a team",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Boardparents",
          "filename": "Boardparents",
          "root": {
            "meta": {
              "name": "Boardparents"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Boardparents List",
              "filename": "Boardparents List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/boardparents?childBacklogContextCategoryRefName=<string>&workitemIds=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "childBacklogContextCategoryRefName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "workitemIds",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns the list of parent field filter model for the given list of workitem ids",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Backlogs",
          "filename": "Backlogs",
          "root": {
            "meta": {
              "name": "Backlogs"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Backlogs Get Backlog Level Work Items",
              "filename": "Backlogs Get Backlog Level Work Items.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/backlogs/{{backlogId}}/workItems?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "backlogId",
                    "value": "{{backlogId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of work items within a backlog level",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Backlogs Get Backlog",
              "filename": "Backlogs Get Backlog.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/backlogs/{{backlogId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "backlogId",
                    "value": "{{backlogId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a backlog level",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Backlogs List",
              "filename": "Backlogs List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/backlogs?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "List all backlog levels",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Boardcolumns",
          "filename": "Boardcolumns",
          "root": {
            "meta": {
              "name": "Boardcolumns"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Boardcolumns List",
              "filename": "Boardcolumns List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/boardcolumns?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get available board columns in a project",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Boards",
          "filename": "Boards",
          "root": {
            "meta": {
              "name": "Boards"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Boards Get",
              "filename": "Boards Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{boardId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "boardId",
                    "value": "{{boardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get board",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Boards List",
              "filename": "Boards List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get boards",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Boards Set Board Options",
              "filename": "Boards Set Board Options.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{boardId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "boardId",
                    "value": "{{boardId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"esse_ff\": \"<string>\",\n  \"eu_ed\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update board options",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Boardrows",
          "filename": "Boardrows",
          "root": {
            "meta": {
              "name": "Boardrows"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Boardrows List",
              "filename": "Boardrows List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/boardrows?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get available board rows in a project",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Cardrulesettings",
          "filename": "Cardrulesettings",
          "root": {
            "meta": {
              "name": "Cardrulesettings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Cardrulesettings Get",
              "filename": "Cardrulesettings Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/cardrulesettings?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get board card Rule settings for the board id or board by name",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Cardrulesettings Update Board Card Rule Settings",
              "filename": "Cardrulesettings Update Board Card Rule Settings.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/cardrulesettings?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"pariatur_31\": {}\n    }\n  },\n  \"rules\": {\n    \"dolor7fc\": [\n      {\n        \"clauses\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"filter\": \"<string>\",\n        \"isEnabled\": \"<string>\",\n        \"name\": \"<string>\",\n        \"settings\": {\n          \"Excepteurd9_\": \"<string>\",\n          \"cillum_57\": \"<string>\",\n          \"et_f\": \"<string>\",\n          \"veniam_6\": \"<string>\"\n        }\n      },\n      {\n        \"clauses\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"filter\": \"<string>\",\n        \"isEnabled\": \"<string>\",\n        \"name\": \"<string>\",\n        \"settings\": {\n          \"aliquip_fa7\": \"<string>\",\n          \"aliquip_fc\": \"<string>\"\n        }\n      }\n    ],\n    \"esse_59\": [\n      {\n        \"clauses\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"filter\": \"<string>\",\n        \"isEnabled\": \"<string>\",\n        \"name\": \"<string>\",\n        \"settings\": {\n          \"dolor_263\": \"<string>\",\n          \"sunt_f7\": \"<string>\"\n        }\n      },\n      {\n        \"clauses\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"filter\": \"<string>\",\n        \"isEnabled\": \"<string>\",\n        \"name\": \"<string>\",\n        \"settings\": {\n          \"consectetur_d_5\": \"<string>\",\n          \"dolore_2\": \"<string>\"\n        }\n      }\n    ]\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update board card Rule settings for the board id or board by name",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Cardrulesettings Update Taskboard Card Rule Settings",
              "filename": "Cardrulesettings Update Taskboard Card Rule Settings.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/taskboard/cardrulesettings?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {\n    \"links\": {\n      \"pariatur_31\": {}\n    }\n  },\n  \"rules\": {\n    \"dolor7fc\": [\n      {\n        \"clauses\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"filter\": \"<string>\",\n        \"isEnabled\": \"<string>\",\n        \"name\": \"<string>\",\n        \"settings\": {\n          \"Excepteurd9_\": \"<string>\",\n          \"cillum_57\": \"<string>\",\n          \"et_f\": \"<string>\",\n          \"veniam_6\": \"<string>\"\n        }\n      },\n      {\n        \"clauses\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"filter\": \"<string>\",\n        \"isEnabled\": \"<string>\",\n        \"name\": \"<string>\",\n        \"settings\": {\n          \"aliquip_fa7\": \"<string>\",\n          \"aliquip_fc\": \"<string>\"\n        }\n      }\n    ],\n    \"esse_59\": [\n      {\n        \"clauses\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"filter\": \"<string>\",\n        \"isEnabled\": \"<string>\",\n        \"name\": \"<string>\",\n        \"settings\": {\n          \"dolor_263\": \"<string>\",\n          \"sunt_f7\": \"<string>\"\n        }\n      },\n      {\n        \"clauses\": [\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"fieldName\": \"<string>\",\n            \"index\": \"<integer>\",\n            \"logicalOperator\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"filter\": \"<string>\",\n        \"isEnabled\": \"<string>\",\n        \"name\": \"<string>\",\n        \"settings\": {\n          \"consectetur_d_5\": \"<string>\",\n          \"dolore_2\": \"<string>\"\n        }\n      }\n    ]\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update taskboard card Rule settings",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Boardusersettings",
          "filename": "Boardusersettings",
          "root": {
            "meta": {
              "name": "Boardusersettings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Boardusersettings Get",
              "filename": "Boardusersettings Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/boardusersettings?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get board user settings for a board id",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Boardusersettings Update",
              "filename": "Boardusersettings Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/boardusersettings?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"esse_ff\": \"<string>\",\n  \"eu_ed\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update board user settings for the board id\n\nWe don't want stakeholders to update board settings (currently just autorefresh). The BacklogManagement feature check validates this.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Cardsettings",
          "filename": "Cardsettings",
          "root": {
            "meta": {
              "name": "Cardsettings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Cardsettings Get",
              "filename": "Cardsettings Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/cardsettings?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get board card settings for the board id or board by name",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Cardsettings Update Board Card Settings",
              "filename": "Cardsettings Update Board Card Settings.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/cardsettings?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"cards\": {\n    \"fugiat81\": [\n      {\n        \"proident_24\": \"<string>\",\n        \"Ut8bb\": \"<string>\"\n      },\n      {\n        \"quie_\": \"<string>\",\n        \"Lorem22a\": \"<string>\"\n      }\n    ],\n    \"sed_e\": [\n      {\n        \"proident84\": \"<string>\",\n        \"minim_b\": \"<string>\"\n      },\n      {\n        \"quis_ec\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update board card settings for the board id or board by name",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Cardsettings Update Taskboard Card Settings",
              "filename": "Cardsettings Update Taskboard Card Settings.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/taskboard/cardsettings?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"cards\": {\n    \"fugiat81\": [\n      {\n        \"proident_24\": \"<string>\",\n        \"Ut8bb\": \"<string>\"\n      },\n      {\n        \"quie_\": \"<string>\",\n        \"Lorem22a\": \"<string>\"\n      }\n    ],\n    \"sed_e\": [\n      {\n        \"proident84\": \"<string>\",\n        \"minim_b\": \"<string>\"\n      },\n      {\n        \"quis_ec\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update taskboard card settings",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Chartimages",
          "filename": "Chartimages",
          "root": {
            "meta": {
              "name": "Chartimages"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Chartimages Get Board Chart Image",
              "filename": "Chartimages Get Board Chart Image.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/chartimages/{{chartimageName}}?width=<integer>&height=<integer>&showDetails=<boolean>&title=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "width",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "height",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "showDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "title",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "chartimageName",
                    "value": "{{chartimageName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a board chart image.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Chartimages Get Iteration Chart Image",
              "filename": "Chartimages Get Iteration Chart Image.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/iterations/{{iterationId}}/chartimages/{{chartimagesName}}?width=<integer>&height=<integer>&showDetails=<boolean>&title=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "width",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "height",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "showDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "title",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "chartimagesName",
                    "value": "{{chartimagesName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get an iteration chart image.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Chartimages Get Iterations Chart Image",
              "filename": "Chartimages Get Iterations Chart Image.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/iterations/chartimages/{{chartimagesName}}?iterationsNumber=<integer>&width=<integer>&height=<integer>&showDetails=<boolean>&title=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "iterationsNumber",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "width",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "height",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "showDetails",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "title",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "chartimagesName",
                    "value": "{{chartimagesName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get an iterations chart image.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Columns",
          "filename": "Columns",
          "root": {
            "meta": {
              "name": "Columns"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Columns List",
              "filename": "Columns List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/columns?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get columns on a board",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Columns Update",
              "filename": "Columns Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/columns?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"columnType\": \"outgoing\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isSplit\": \"<boolean>\",\n    \"itemLimit\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"stateMappings\": {\n      \"seda53\": \"<string>\",\n      \"aliquip0a1\": \"<string>\",\n      \"nisi__\": \"<string>\",\n      \"tempor_1dd\": \"<string>\"\n    }\n  },\n  {\n    \"columnType\": \"inProgress\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"isSplit\": \"<boolean>\",\n    \"itemLimit\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"stateMappings\": {\n      \"exercitation_2\": \"<string>\",\n      \"Excepteur_8\": \"<string>\"\n    }\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update columns on a board",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Charts",
          "filename": "Charts",
          "root": {
            "meta": {
              "name": "Charts"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Charts Get",
              "filename": "Charts Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/charts/{{chartName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "chartName",
                    "value": "{{chartName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a board chart",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Charts List",
              "filename": "Charts List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/charts?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get board charts",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Charts Update",
              "filename": "Charts Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/charts/{{chartName}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "chartName",
                    "value": "{{chartName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"_links\": {},\n  \"settings\": {\n    \"aliquip__2\": {}\n  },\n  \"name\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a board chart",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Iterations",
          "filename": "Iterations",
          "root": {
            "meta": {
              "name": "Iterations"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Iterations Delete",
              "filename": "Iterations Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a team's iteration by iterationId",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Iterations Get Iteration Work Items",
              "filename": "Iterations Get Iteration Work Items.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}/workitems?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get work items for iteration",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Iterations Get",
              "filename": "Iterations Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "{{iterationId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get team's iteration by iterationId",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Iterations List",
              "filename": "Iterations List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations?$timeframe=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$timeframe",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a team's iterations using timeframe filter",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Iterations Post Team Iteration",
              "filename": "Iterations Post Team Iteration.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"attributes\": {},\n  \"id\": \"urn:uuid:b8b28f79-d9aa-a31e-047e-344de2ee61d2\",\n  \"name\": \"ullamco velit aute esse\",\n  \"path\": \"culpa magna consequat\",\n  \"_links\": {\n    \"links\": {\n      \"cillume\": {}\n    }\n  },\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add an iteration to the team",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Deliverytimeline",
          "filename": "Deliverytimeline",
          "root": {
            "meta": {
              "name": "Deliverytimeline"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Deliverytimeline Get",
              "filename": "Deliverytimeline Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/plans/{{planId}}/deliverytimeline?revision={{revision}}&startDate=<dateTime>&endDate=<dateTime>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "revision",
                    "value": "{{revision}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "startDate",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "endDate",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get Delivery View Data",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Iterationcapacities",
          "filename": "Iterationcapacities",
          "root": {
            "meta": {
              "name": "Iterationcapacities"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Iterationcapacities Get",
              "filename": "Iterationcapacities Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/iterations/{{iterationId}}/iterationcapacities?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get an iteration's capacity for all teams in iteration",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Capacities",
          "filename": "Capacities",
          "root": {
            "meta": {
              "name": "Capacities"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Capacities Get Capacities With Identity Ref And Totals",
              "filename": "Capacities Get Capacities With Identity Ref And Totals.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}/capacities?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a team's capacity including total capacity and days off",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Capacities Replace Capacities With Identity Ref",
              "filename": "Capacities Replace Capacities With Identity Ref.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}/capacities?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"teamMember\": {},\n    \"_links\": {\n      \"links\": {\n        \"non_9\": {},\n        \"nostrud83\": {}\n      }\n    },\n    \"url\": \"<string>\"\n  },\n  {\n    \"teamMember\": {},\n    \"_links\": {\n      \"links\": {\n        \"culpa5\": {},\n        \"pariatur8fb\": {}\n      }\n    },\n    \"url\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Replace a team's capacity",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Capacities Get Capacity With Identity Ref",
              "filename": "Capacities Get Capacity With Identity Ref.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}/capacities/{{teamMemberId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "teamMemberId",
                    "value": "{{teamMemberId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a team member's capacity",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Capacities Update",
              "filename": "Capacities Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}/capacities/{{teamMemberId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "teamMemberId",
                    "value": "{{teamMemberId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"activities\": [\n    {\n      \"capacityPerDay\": \"<float>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"capacityPerDay\": \"<float>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"daysOff\": [\n    {\n      \"end\": \"<dateTime>\",\n      \"start\": \"<dateTime>\"\n    },\n    {\n      \"end\": \"<dateTime>\",\n      \"start\": \"<dateTime>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a team member's capacity",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Processconfiguration",
          "filename": "Processconfiguration",
          "root": {
            "meta": {
              "name": "Processconfiguration"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Processconfiguration Get",
              "filename": "Processconfiguration Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/processconfiguration?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get process configuration",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Plans",
          "filename": "Plans",
          "root": {
            "docs": "Controller for the Scaled Agile plans REST API",
            "meta": {
              "name": "Plans"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Plans Create",
              "filename": "Plans Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/plans?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"properties\": {},\n  \"type\": \"deliveryTimelineView\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a new plan for the team",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Plans Delete",
              "filename": "Plans Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/plans/{{planId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete the specified plan",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Plans Get",
              "filename": "Plans Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/plans/{{planId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "{{planId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the information for the specified plan",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Plans List",
              "filename": "Plans List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/plans?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the information for all the plans configured for the given team",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Plans Update",
              "filename": "Plans Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/plans/{{planId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "planId",
                    "value": "planId",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"properties\": {},\n  \"revision\": \"<integer>\",\n  \"type\": \"deliveryTimelineView\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the information for the specified plan",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Rows",
          "filename": "Rows",
          "root": {
            "meta": {
              "name": "Rows"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Rows List",
              "filename": "Rows List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/rows?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get rows on a board",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Rows Update",
              "filename": "Rows Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/boards/{{board}}/rows?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "board",
                    "value": "{{board}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"color\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"color\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update rows on a board",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Taskboard Work Items",
          "filename": "Taskboard Work Items",
          "root": {
            "meta": {
              "name": "Taskboard Work Items"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Taskboard Work Items List",
              "filename": "Taskboard Work Items List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/taskboardworkitems/{{iterationId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Taskboard Work Items Update",
              "filename": "Taskboard Work Items Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/taskboardworkitems/{{iterationId}}/{{workItemId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"newColumn\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Taskboard Columns",
          "filename": "Taskboard Columns",
          "root": {
            "meta": {
              "name": "Taskboard Columns"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Taskboard Columns Get",
              "filename": "Taskboard Columns Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/taskboardcolumns?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Taskboard Columns Update",
              "filename": "Taskboard Columns Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/taskboardcolumns?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "[\n  {\n    \"id\": \"<uuid>\",\n    \"mappings\": [\n      {\n        \"state\": \"<string>\",\n        \"workItemType\": \"<string>\"\n      },\n      {\n        \"state\": \"<string>\",\n        \"workItemType\": \"<string>\"\n      }\n    ],\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"mappings\": [\n      {\n        \"state\": \"<string>\",\n        \"workItemType\": \"<string>\"\n      },\n      {\n        \"state\": \"<string>\",\n        \"workItemType\": \"<string>\"\n      }\n    ],\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\"\n  }\n]",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Teamdaysoff",
          "filename": "Teamdaysoff",
          "root": {
            "meta": {
              "name": "Teamdaysoff"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Teamdaysoff Get",
              "filename": "Teamdaysoff Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}/teamdaysoff?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get team's days off for an iteration",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teamdaysoff Update",
              "filename": "Teamdaysoff Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/iterations/{{iterationId}}/teamdaysoff?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"daysOff\": [\n    {\n      \"end\": \"<dateTime>\",\n      \"start\": \"<dateTime>\"\n    },\n    {\n      \"end\": \"<dateTime>\",\n      \"start\": \"<dateTime>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Set a team's days off for an iteration",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Teamsettings",
          "filename": "Teamsettings",
          "root": {
            "meta": {
              "name": "Teamsettings"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Teamsettings Get",
              "filename": "Teamsettings Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a team's settings",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teamsettings Update",
              "filename": "Teamsettings Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"backlogIteration\": \"<uuid>\",\n  \"backlogVisibilities\": {\n    \"culpa_cc_\": \"<boolean>\",\n    \"eiusmod_3\": \"<boolean>\"\n  },\n  \"bugsBehavior\": \"asRequirements\",\n  \"defaultIteration\": \"<uuid>\",\n  \"defaultIterationMacro\": \"<string>\",\n  \"workingDays\": [\n    \"tuesday\",\n    \"saturday\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a team's settings",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Teamfieldvalues",
          "filename": "Teamfieldvalues",
          "root": {
            "meta": {
              "name": "Teamfieldvalues"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Teamfieldvalues Get",
              "filename": "Teamfieldvalues Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/teamfieldvalues?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a collection of team field values",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Teamfieldvalues Update",
              "filename": "Teamfieldvalues Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/teamsettings/teamfieldvalues?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"defaultValue\": \"<string>\",\n  \"values\": [\n    {\n      \"includeChildren\": \"<boolean>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"includeChildren\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update team field values",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Workitemsorder",
          "filename": "Workitemsorder",
          "root": {
            "meta": {
              "name": "Workitemsorder"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Workitemsorder Reorder Backlog Work Items",
              "filename": "Workitemsorder Reorder Backlog Work Items.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/workitemsorder?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"iterationPath\": \"<string>\",\n  \"nextId\": \"<integer>\",\n  \"parentId\": \"<integer>\",\n  \"previousId\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Reorder Product Backlog/Boards Work Items",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Workitemsorder Reorder Iteration Work Items",
              "filename": "Workitemsorder Reorder Iteration Work Items.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/work/iterations/{{iterationId}}/workitemsorder?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "iterationId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"iterationPath\": \"<string>\",\n  \"nextId\": \"<integer>\",\n  \"parentId\": \"<integer>\",\n  \"previousId\": \"<integer>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Reorder Sprint Backlog/Taskboard Work Items",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "WorkItem Tracking Process Template",
      "filename": "WorkItem Tracking Process Template",
      "root": {
        "docs": "[Processes - REST API (Azure DevOps Work Item Tracking Process Template) | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/processadmin/processes?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "WorkItem Tracking Process Template"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Processes",
          "filename": "Processes",
          "root": {
            "docs": "Exposes APIs for ProcessTemplate imports and exports",
            "meta": {
              "name": "Processes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Processes Export Process Template",
              "filename": "Processes Export Process Template.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processadmin/processes/export/{{processId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/zip",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns requested process template.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Processes Import Process Template Status",
              "filename": "Processes Import Process Template Status.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processadmin/processes/status/{{processesstatusId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Tells whether promote has completed for the specified promote job ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Processes Import Process Template",
              "filename": "Processes Import Process Template.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processadmin/processes/import?ignoreWarnings=false&replaceExistingTemplate=false&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/octet-stream",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "ignoreWarnings",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "replaceExistingTemplate",
                    "value": "false",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "text",
                  "text": "<string>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Imports a process from zip file.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Behaviors",
          "filename": "Behaviors",
          "root": {
            "meta": {
              "name": "Behaviors"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Behaviors List",
              "filename": "Behaviors List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processadmin/{{processId}}/behaviors?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 200\", function () {\n  expect(res.getStatus()).to.equal(200);\n});\n\n\ntest(\"Value array is present and contains the expected number of elements\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData).to.be.an('object');\n    expect(responseData.value).to.exist.and.to.be.an('array');\n    expect(responseData.value).to.have.lengthOf(1);\n});\n\n\ntest(\"Fields array within the response should have required properties\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.value).to.be.an('array');\n    responseData.value.forEach(function(behavior) {\n        expect(behavior.fields).to.be.an('array');\n        behavior.fields.forEach(function(field) {\n            expect(field).to.have.property('behaviorFieldId');\n            expect(field).to.have.property('id');\n            expect(field).to.have.property('name');\n        });\n    });\n});\n\n",
                "docs": "Returns a list of behaviors for the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Work Item Tracking",
      "filename": "Work Item Tracking",
      "root": {
        "docs": "[Work item tracking REST API for Azure DevOps Services - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/wit/?view=azure-devops-rest-7.1)",
        "meta": {
          "name": "Work Item Tracking"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Account My Work Recent Activity",
          "filename": "Account My Work Recent Activity",
          "root": {
            "meta": {
              "name": "Account My Work Recent Activity"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Account My Work Recent Activity List",
              "filename": "Account My Work Recent Activity List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/accountmyworkrecentactivity?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets recent work item activities",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Artifact Link Types",
          "filename": "Artifact Link Types",
          "root": {
            "meta": {
              "name": "Artifact Link Types"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Artifact Link Types List",
              "filename": "Artifact Link Types List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/wit/artifactlinktypes?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the list of work item tracking outbound artifact link types.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Attachments",
          "filename": "Attachments",
          "root": {
            "docs": "Project specific Work Item attachments API",
            "meta": {
              "name": "Attachments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Attachments Create",
              "filename": "Attachments Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/attachments?fileName={{fileName}}&uploadType=<string>&areaPath=<string>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/octet-stream",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "uploadType",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "areaPath",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "text",
                  "text": "<string>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Uploads an attachment.\n\nOn accounts with higher attachment upload limits (>130MB), you will need to use chunked upload.\nTo upload an attachment in multiple chunks, you first need to [**Start a Chunked Upload**](#start_a_chunked_upload) and then follow the example from the **Upload Chunk** section.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Get",
              "filename": "Attachments Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/attachments/{{attachmentId}}?fileName={{fileName}}&download=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/octet-stream",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "fileName",
                    "value": "{{fileName}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "download",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attachmentId",
                    "value": "{{attachmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Downloads an attachment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Attachments Upload Chunk",
              "filename": "Attachments Upload Chunk.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/attachments/{{attachmentId}}?fileName=<string>&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "contentRangeHeader",
                    "value": "<string>",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/octet-stream",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "fileName",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "attachmentId",
                    "value": "{{attachmentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "text",
                  "text": "<string>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Uploads an attachment chunk.\n\nBefore performing [**Upload a Chunk**](#upload-a-chunk), make sure to have an attachment id returned in **Start a Chunked Upload** example on **Create** section. Specify the byte range of the chunk using Content-Length. For example: \"Content - Length\": \"bytes 0 - 39999 / 50000\" for the first 40000 bytes of a 50000 byte file.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Artifact Uri Query",
          "filename": "Artifact Uri Query",
          "root": {
            "meta": {
              "name": "Artifact Uri Query"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Artifact Uri Query Query",
              "filename": "Artifact Uri Query Query.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/artifacturiquery?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"artifactUris\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Queries work items linked to a given list of artifact URI.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Classification Nodes",
          "filename": "Classification Nodes",
          "root": {
            "meta": {
              "name": "Classification Nodes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Classification Nodes Create Or Update",
              "filename": "Classification Nodes Create Or Update.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/classificationnodes/{{structureGroup}}/{{path}}?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "structureGroup",
                    "value": "iterations",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"attributes\": {\n    \"do35\": {}\n  },\n  \"hasChildren\": true,\n  \"id\": 87864188,\n  \"identifier\": \"10c647a6-45d0-f715-0cd5-b22146cb52a4\",\n  \"name\": \"cupidatat consectetur sint\",\n  \"path\": \"dolore ea\",\n  \"structureType\": \"area\",\n  \"_links\": {},\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create new or update an existing classification node.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Classification Nodes Delete",
              "filename": "Classification Nodes Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/classificationnodes/{{structureGroup}}/{{path}}?$reclassifyId=<integer>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "$reclassifyId",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "structureGroup",
                    "value": "iterations",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete an existing classification node.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Classification Nodes Get Root Nodes",
              "filename": "Classification Nodes Get Root Nodes.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/classificationnodes?$depth=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$depth",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets root classification nodes under the project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Classification Nodes Get",
              "filename": "Classification Nodes Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/classificationnodes/{{structureGroup}}/{{path}}?$depth=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$depth",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "structureGroup",
                    "value": "iterations",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the classification node for a given node path.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Classification Nodes Update",
              "filename": "Classification Nodes Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/classificationnodes/{{structureGroup}}/{{path}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "structureGroup",
                    "value": "iterations",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "path",
                    "value": "{{path}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"attributes\": {\n    \"do35\": {}\n  },\n  \"hasChildren\": true,\n  \"id\": 87864188,\n  \"identifier\": \"10c647a6-45d0-f715-0cd5-b22146cb52a4\",\n  \"name\": \"cupidatat consectetur sint\",\n  \"path\": \"dolore ea\",\n  \"structureType\": \"area\",\n  \"_links\": {},\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update an existing classification node.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Behaviors",
          "filename": "Behaviors",
          "root": {
            "meta": {
              "name": "Behaviors"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Create",
              "filename": "Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/behaviors?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"color\": \"<string>\",\n  \"inherits\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a single behavior in the given process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Delete",
              "filename": "Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/behaviors/{{behaviorId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "behaviorId",
                    "value": "{{behaviorId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a behavior in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Get",
              "filename": "Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/behaviors/{{behaviorId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "behaviorId",
                    "value": "{{behaviorId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a single behavior in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "List",
              "filename": "List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/behaviors?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a list of all behaviors in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Replace Behavior",
              "filename": "Replace Behavior.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/behaviors/{{behaviorId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "behaviorId",
                    "value": "{{behaviorId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Replaces a behavior in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Comment Reactions Engaged Users",
          "filename": "Comment Reactions Engaged Users",
          "root": {
            "meta": {
              "name": "Comment Reactions Engaged Users"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Comment Reactions Engaged Users List",
              "filename": "Comment Reactions Engaged Users List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}/reactions/{{reactionType}}/users?$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "reactionType",
                    "value": "like",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get users who reacted on the comment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Comments Reactions",
          "filename": "Comments Reactions",
          "root": {
            "meta": {
              "name": "Comments Reactions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Comments Reactions Create",
              "filename": "Comments Reactions Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}/reactions/{{reactionType}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "reactionType",
                    "value": "like",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds a new reaction to a comment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Comments Reactions Delete",
              "filename": "Comments Reactions Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}/reactions/{{reactionType}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "reactionType",
                    "value": "like",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes an existing reaction on a comment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Comments Reactions List",
              "filename": "Comments Reactions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}/reactions?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets reactions of a comment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Comments",
          "filename": "Comments",
          "root": {
            "meta": {
              "name": "Comments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Comments Add Comment",
              "filename": "Comments Add Comment.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"text\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Add a comment on a work item.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Comments Delete",
              "filename": "Comments Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a comment on a work item.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Comments Get Comment",
              "filename": "Comments Get Comment.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}?includeDeleted=<boolean>&$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "includeDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a work item comment.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Comments Get Comments Batch",
              "filename": "Comments Get Comments Batch.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments?ids=<string>&includeDeleted=<boolean>&$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "ids",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a list of work item comments by ids.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Comments Update Comment",
              "filename": "Comments Update Comment.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"text\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a comment on a work item.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Controls",
          "filename": "Controls",
          "root": {
            "docs": "Manage the controls in the work item form layout for a process using inherited customization",
            "meta": {
              "name": "Controls"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Add",
              "filename": "Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/groups/{{groupId}}/controls?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"ad_1\": {},\n      \"ullamco_956\": {},\n      \"dolor_0\": {},\n      \"tempord2a\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"controlType\": \"<string>\",\n  \"height\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"metadata\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"readOnly\": \"<boolean>\",\n  \"visible\": \"<boolean>\",\n  \"watermark\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a control in a group",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Edit Control",
              "filename": "Edit Control.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/groups/{{groupId}}/controls/{{controlId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"ad_1\": {},\n      \"ullamco_956\": {},\n      \"dolor_0\": {},\n      \"tempord2a\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"controlType\": \"<string>\",\n  \"height\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"metadata\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"readOnly\": \"<boolean>\",\n  \"visible\": \"<boolean>\",\n  \"watermark\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a control on the work item form",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Remove Control From Group",
              "filename": "Remove Control From Group.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/groups/{{groupId}}/controls/{{controlId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a control from the work item form",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Set Control In Group",
              "filename": "Set Control In Group.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/groups/{{groupId}}/controls/{{controlId}}?removeFromGroupId=<string>&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "removeFromGroupId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"ad_1\": {},\n      \"ullamco_956\": {},\n      \"dolor_0\": {},\n      \"tempord2a\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"controlType\": \"<string>\",\n  \"height\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"metadata\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"readOnly\": \"<boolean>\",\n  \"visible\": \"<boolean>\",\n  \"watermark\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Moves a control to a new group",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Comments Versions",
          "filename": "Comments Versions",
          "root": {
            "meta": {
              "name": "Comments Versions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Comments Versions Get",
              "filename": "Comments Versions Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}/versions/{{version}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "version",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Comments Versions List",
              "filename": "Comments Versions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/comments/{{commentId}}/versions?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "<integer>",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "commentId",
                    "value": "{{commentId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Fields",
          "filename": "Fields",
          "root": {
            "meta": {
              "name": "Fields"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Fields Create",
              "filename": "Fields Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/fields?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"isLocked\": false,\n  \"canSortBy\": false,\n  \"description\": \"aliqua qui laborum exercitation\",\n  \"isDeleted\": true,\n  \"isIdentity\": false,\n  \"isPicklist\": true,\n  \"isPicklistSuggested\": true,\n  \"isQueryable\": false,\n  \"name\": \"id exercitation non ad\",\n  \"picklistId\": \"a401a4c8-20a9-9fa2-397f-8b8be5636199\",\n  \"readOnly\": true,\n  \"referenceName\": \"consequat veniam anim nisi do\",\n  \"type\": \"dateTime\",\n  \"usage\": \"workItemLink\",\n  \"_links\": {},\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Create a new field.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Fields Delete",
              "filename": "Fields Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/fields/{{fieldNameOrRefName}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "fieldNameOrRefName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes the field. To undelete a filed, see \"Update Field\" API.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Fields Get",
              "filename": "Fields Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/fields/{{fieldNameOrRefName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "fieldNameOrRefName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets information on a specific field.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Fields List",
              "filename": "Fields List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/fields?$expand=extensionFields&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "extensionFields",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Value array is present and contains at least one element\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.exist.and.to.be.an('array').that.is.not.empty;\r\n});\r\n\r\n\r\ntest(\"Supported operations array contains at least one element with non-empty referenceName\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.value).to.be.an('array');\r\n    \r\n    responseData.value.forEach(function(field) {\r\n        expect(field.supportedOperations).to.be.an('array').that.is.not.empty;\r\n        \r\n        field.supportedOperations.forEach(function(operation) {\r\n            expect(operation.referenceName).to.be.a('string').and.to.have.lengthOf.at.least(1);\r\n        });\r\n    });\r\n});\r\n\r\n",
                "docs": "Returns information for all fields. The project ID/name parameter is optional.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Fields Update",
              "filename": "Fields Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/fields/{{fieldNameOrRefName}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "fieldNameOrRefName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"isDeleted\": \"<boolean>\",\n  \"isLocked\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a field.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Groups",
          "filename": "Groups",
          "root": {
            "docs": "Manage the groups in the work item form layout for a process using inherited customization",
            "meta": {
              "name": "Groups"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Add",
              "filename": "Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/pages/{{pageId}}/sections/{{sectionId}}/groups?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"consequat__\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"controls\": [\n    {\n      \"contribution\": {\n        \"contributionId\": \"<string>\",\n        \"height\": \"<integer>\",\n        \"inputs\": {\n          \"minim20\": {},\n          \"Excepteur_\": {},\n          \"Lorem_1e\": {},\n          \"seda81\": {}\n        },\n        \"showOnDeletedWorkItem\": \"<boolean>\"\n      },\n      \"controlType\": \"<string>\",\n      \"height\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"inherited\": \"<boolean>\",\n      \"isContribution\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"metadata\": \"<string>\",\n      \"order\": \"<integer>\",\n      \"overridden\": \"<boolean>\",\n      \"readOnly\": \"<boolean>\",\n      \"visible\": \"<boolean>\",\n      \"watermark\": \"<string>\"\n    },\n    {\n      \"contribution\": {\n        \"contributionId\": \"<string>\",\n        \"height\": \"<integer>\",\n        \"inputs\": {\n          \"laborum_c\": {}\n        },\n        \"showOnDeletedWorkItem\": \"<boolean>\"\n      },\n      \"controlType\": \"<string>\",\n      \"height\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"inherited\": \"<boolean>\",\n      \"isContribution\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"metadata\": \"<string>\",\n      \"order\": \"<integer>\",\n      \"overridden\": \"<boolean>\",\n      \"readOnly\": \"<boolean>\",\n      \"visible\": \"<boolean>\",\n      \"watermark\": \"<string>\"\n    }\n  ],\n  \"height\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds a group to the work item form",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Edit Group",
              "filename": "Edit Group.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/pages/{{pageId}}/sections/{{sectionId}}/groups/{{groupId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"consequat__\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"controls\": [\n    {\n      \"contribution\": {\n        \"contributionId\": \"<string>\",\n        \"height\": \"<integer>\",\n        \"inputs\": {\n          \"minim20\": {},\n          \"Excepteur_\": {},\n          \"Lorem_1e\": {},\n          \"seda81\": {}\n        },\n        \"showOnDeletedWorkItem\": \"<boolean>\"\n      },\n      \"controlType\": \"<string>\",\n      \"height\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"inherited\": \"<boolean>\",\n      \"isContribution\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"metadata\": \"<string>\",\n      \"order\": \"<integer>\",\n      \"overridden\": \"<boolean>\",\n      \"readOnly\": \"<boolean>\",\n      \"visible\": \"<boolean>\",\n      \"watermark\": \"<string>\"\n    },\n    {\n      \"contribution\": {\n        \"contributionId\": \"<string>\",\n        \"height\": \"<integer>\",\n        \"inputs\": {\n          \"laborum_c\": {}\n        },\n        \"showOnDeletedWorkItem\": \"<boolean>\"\n      },\n      \"controlType\": \"<string>\",\n      \"height\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"inherited\": \"<boolean>\",\n      \"isContribution\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"metadata\": \"<string>\",\n      \"order\": \"<integer>\",\n      \"overridden\": \"<boolean>\",\n      \"readOnly\": \"<boolean>\",\n      \"visible\": \"<boolean>\",\n      \"watermark\": \"<string>\"\n    }\n  ],\n  \"height\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a group in the work item form",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Remove Group",
              "filename": "Remove Group.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/pages/{{pageId}}/sections/{{sectionId}}/groups/{{groupId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a group from the work item form",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Set Group In Section",
              "filename": "Set Group In Section.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/pages/{{pageId}}/sections/{{sectionId}}/groups/{{groupId}}?removeFromSectionId=<string>&api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "removeFromSectionId",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"consequat__\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"controls\": [\n    {\n      \"contribution\": {\n        \"contributionId\": \"<string>\",\n        \"height\": \"<integer>\",\n        \"inputs\": {\n          \"minim20\": {},\n          \"Excepteur_\": {},\n          \"Lorem_1e\": {},\n          \"seda81\": {}\n        },\n        \"showOnDeletedWorkItem\": \"<boolean>\"\n      },\n      \"controlType\": \"<string>\",\n      \"height\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"inherited\": \"<boolean>\",\n      \"isContribution\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"metadata\": \"<string>\",\n      \"order\": \"<integer>\",\n      \"overridden\": \"<boolean>\",\n      \"readOnly\": \"<boolean>\",\n      \"visible\": \"<boolean>\",\n      \"watermark\": \"<string>\"\n    },\n    {\n      \"contribution\": {\n        \"contributionId\": \"<string>\",\n        \"height\": \"<integer>\",\n        \"inputs\": {\n          \"laborum_c\": {}\n        },\n        \"showOnDeletedWorkItem\": \"<boolean>\"\n      },\n      \"controlType\": \"<string>\",\n      \"height\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"inherited\": \"<boolean>\",\n      \"isContribution\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"metadata\": \"<string>\",\n      \"order\": \"<integer>\",\n      \"overridden\": \"<boolean>\",\n      \"readOnly\": \"<boolean>\",\n      \"visible\": \"<boolean>\",\n      \"watermark\": \"<string>\"\n    }\n  ],\n  \"height\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Moves a group to a different section",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Layout",
          "filename": "Layout",
          "root": {
            "docs": "Gets the full work item form layout for a process using inherited customization",
            "meta": {
              "name": "Layout"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Get",
              "filename": "Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the form layout",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Lists",
          "filename": "Lists",
          "root": {
            "meta": {
              "name": "Lists"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Create",
              "filename": "Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/lists?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"id\": \"<uuid>\",\n  \"isSuggested\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a picklist.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Delete",
              "filename": "Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/lists/{{listId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "listId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a picklist.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Get",
              "filename": "Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/lists/{{listId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "listId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a picklist.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "List",
              "filename": "List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/lists?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns meta data of the picklist.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Update",
              "filename": "Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/lists/{{listId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "listId",
                    "value": "{{listId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"id\": \"<uuid>\",\n  \"isSuggested\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a list.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Pages",
          "filename": "Pages",
          "root": {
            "docs": "Manage the pages in the work item form layout for a process using inherited customization",
            "meta": {
              "name": "Pages"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Add",
              "filename": "Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/pages?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"sinte\": {},\n      \"qui_\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"locked\": \"<boolean>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"pageType\": \"attachments\",\n  \"sections\": [\n    {\n      \"groups\": [\n        {\n          \"contribution\": {\n            \"contributionId\": \"<string>\",\n            \"height\": \"<integer>\",\n            \"inputs\": {\n              \"sit7\": {},\n              \"tempor6b\": {}\n            },\n            \"showOnDeletedWorkItem\": \"<boolean>\"\n          },\n          \"controls\": [\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"velit_289\": {},\n                  \"dolor_b75\": {},\n                  \"enim42\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            },\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"laboris_6\": {},\n                  \"ut9\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            }\n          ],\n          \"height\": \"<integer>\",\n          \"id\": \"<string>\",\n          \"inherited\": \"<boolean>\",\n          \"isContribution\": \"<boolean>\",\n          \"label\": \"<string>\",\n          \"order\": \"<integer>\",\n          \"overridden\": \"<boolean>\",\n          \"visible\": \"<boolean>\"\n        },\n        {\n          \"contribution\": {\n            \"contributionId\": \"<string>\",\n            \"height\": \"<integer>\",\n            \"inputs\": {\n              \"inba\": {},\n              \"ipsum_5a\": {},\n              \"incididunt0\": {}\n            },\n            \"showOnDeletedWorkItem\": \"<boolean>\"\n          },\n          \"controls\": [\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"sedaf\": {},\n                  \"elit_c9e\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            },\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"eiusmod380\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            }\n          ],\n          \"height\": \"<integer>\",\n          \"id\": \"<string>\",\n          \"inherited\": \"<boolean>\",\n          \"isContribution\": \"<boolean>\",\n          \"label\": \"<string>\",\n          \"order\": \"<integer>\",\n          \"overridden\": \"<boolean>\",\n          \"visible\": \"<boolean>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"overridden\": \"<boolean>\"\n    },\n    {\n      \"groups\": [\n        {\n          \"contribution\": {\n            \"contributionId\": \"<string>\",\n            \"height\": \"<integer>\",\n            \"inputs\": {\n              \"ex_a28\": {},\n              \"dolor_1\": {}\n            },\n            \"showOnDeletedWorkItem\": \"<boolean>\"\n          },\n          \"controls\": [\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"reprehenderit_13\": {},\n                  \"cillum_5\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            },\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"nostrud_5\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            }\n          ],\n          \"height\": \"<integer>\",\n          \"id\": \"<string>\",\n          \"inherited\": \"<boolean>\",\n          \"isContribution\": \"<boolean>\",\n          \"label\": \"<string>\",\n          \"order\": \"<integer>\",\n          \"overridden\": \"<boolean>\",\n          \"visible\": \"<boolean>\"\n        },\n        {\n          \"contribution\": {\n            \"contributionId\": \"<string>\",\n            \"height\": \"<integer>\",\n            \"inputs\": {\n              \"essee6\": {}\n            },\n            \"showOnDeletedWorkItem\": \"<boolean>\"\n          },\n          \"controls\": [\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"Lorem_e8\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            },\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"Lorem_5\": {},\n                  \"dolore8\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            }\n          ],\n          \"height\": \"<integer>\",\n          \"id\": \"<string>\",\n          \"inherited\": \"<boolean>\",\n          \"isContribution\": \"<boolean>\",\n          \"label\": \"<string>\",\n          \"order\": \"<integer>\",\n          \"overridden\": \"<boolean>\",\n          \"visible\": \"<boolean>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"overridden\": \"<boolean>\"\n    }\n  ],\n  \"visible\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds a page to the work item form",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Edit Page",
              "filename": "Edit Page.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/pages?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"sinte\": {},\n      \"qui_\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"locked\": \"<boolean>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"pageType\": \"attachments\",\n  \"sections\": [\n    {\n      \"groups\": [\n        {\n          \"contribution\": {\n            \"contributionId\": \"<string>\",\n            \"height\": \"<integer>\",\n            \"inputs\": {\n              \"sit7\": {},\n              \"tempor6b\": {}\n            },\n            \"showOnDeletedWorkItem\": \"<boolean>\"\n          },\n          \"controls\": [\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"velit_289\": {},\n                  \"dolor_b75\": {},\n                  \"enim42\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            },\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"laboris_6\": {},\n                  \"ut9\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            }\n          ],\n          \"height\": \"<integer>\",\n          \"id\": \"<string>\",\n          \"inherited\": \"<boolean>\",\n          \"isContribution\": \"<boolean>\",\n          \"label\": \"<string>\",\n          \"order\": \"<integer>\",\n          \"overridden\": \"<boolean>\",\n          \"visible\": \"<boolean>\"\n        },\n        {\n          \"contribution\": {\n            \"contributionId\": \"<string>\",\n            \"height\": \"<integer>\",\n            \"inputs\": {\n              \"inba\": {},\n              \"ipsum_5a\": {},\n              \"incididunt0\": {}\n            },\n            \"showOnDeletedWorkItem\": \"<boolean>\"\n          },\n          \"controls\": [\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"sedaf\": {},\n                  \"elit_c9e\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            },\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"eiusmod380\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            }\n          ],\n          \"height\": \"<integer>\",\n          \"id\": \"<string>\",\n          \"inherited\": \"<boolean>\",\n          \"isContribution\": \"<boolean>\",\n          \"label\": \"<string>\",\n          \"order\": \"<integer>\",\n          \"overridden\": \"<boolean>\",\n          \"visible\": \"<boolean>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"overridden\": \"<boolean>\"\n    },\n    {\n      \"groups\": [\n        {\n          \"contribution\": {\n            \"contributionId\": \"<string>\",\n            \"height\": \"<integer>\",\n            \"inputs\": {\n              \"ex_a28\": {},\n              \"dolor_1\": {}\n            },\n            \"showOnDeletedWorkItem\": \"<boolean>\"\n          },\n          \"controls\": [\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"reprehenderit_13\": {},\n                  \"cillum_5\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            },\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"nostrud_5\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            }\n          ],\n          \"height\": \"<integer>\",\n          \"id\": \"<string>\",\n          \"inherited\": \"<boolean>\",\n          \"isContribution\": \"<boolean>\",\n          \"label\": \"<string>\",\n          \"order\": \"<integer>\",\n          \"overridden\": \"<boolean>\",\n          \"visible\": \"<boolean>\"\n        },\n        {\n          \"contribution\": {\n            \"contributionId\": \"<string>\",\n            \"height\": \"<integer>\",\n            \"inputs\": {\n              \"essee6\": {}\n            },\n            \"showOnDeletedWorkItem\": \"<boolean>\"\n          },\n          \"controls\": [\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"Lorem_e8\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            },\n            {\n              \"contribution\": {\n                \"contributionId\": \"<string>\",\n                \"height\": \"<integer>\",\n                \"inputs\": {\n                  \"Lorem_5\": {},\n                  \"dolore8\": {}\n                },\n                \"showOnDeletedWorkItem\": \"<boolean>\"\n              },\n              \"controlType\": \"<string>\",\n              \"height\": \"<integer>\",\n              \"id\": \"<string>\",\n              \"inherited\": \"<boolean>\",\n              \"isContribution\": \"<boolean>\",\n              \"label\": \"<string>\",\n              \"metadata\": \"<string>\",\n              \"order\": \"<integer>\",\n              \"overridden\": \"<boolean>\",\n              \"readOnly\": \"<boolean>\",\n              \"visible\": \"<boolean>\",\n              \"watermark\": \"<string>\"\n            }\n          ],\n          \"height\": \"<integer>\",\n          \"id\": \"<string>\",\n          \"inherited\": \"<boolean>\",\n          \"isContribution\": \"<boolean>\",\n          \"label\": \"<string>\",\n          \"order\": \"<integer>\",\n          \"overridden\": \"<boolean>\",\n          \"visible\": \"<boolean>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"overridden\": \"<boolean>\"\n    }\n  ],\n  \"visible\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a page on the work item form",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Remove Page",
              "filename": "Remove Page.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/layout/pages/{{pageId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a page from the work item form",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Processes",
          "filename": "Processes",
          "root": {
            "meta": {
              "name": "Processes"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Processes Create",
              "filename": "Processes Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentProcessTypeId\": \"<uuid>\",\n  \"referenceName\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Processes Delete",
              "filename": "Processes Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processTypeId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processTypeId",
                    "value": "{{processTypeId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a process of a specific ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Processes Edit Process",
              "filename": "Processes Edit Process.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processTypeId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processTypeId",
                    "value": "{{processTypeId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"description\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Edit a process of a specific ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Processes Get",
              "filename": "Processes Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processTypeId}}?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processTypeId",
                    "value": "{{processTypeId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 200\", function () {\n  expect(res.getStatus()).to.equal(200);\n});\n\n\ntest(\"Content-Type header is application/json\", function () {\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\n});\n\n\ntest(\"Projects array in the response contains expected properties\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.projects).to.be.an('array');\n    responseData.projects.forEach(project => {\n        expect(project).to.have.property('description').that.is.a('string');\n        expect(project).to.have.property('id').that.is.a('string');\n        expect(project).to.have.property('name').that.is.a('string');\n        expect(project).to.have.property('url').that.is.a('string');\n    });\n\ntest(\"CustomizationType is not null or empty\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData.customizationType).to.exist.and.to.not.be.null;\n    expect(responseData.customizationType).to.not.be.empty;\n});\n\n",
                "docs": "Get a single process of a specified ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Processes List",
              "filename": "Processes List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response Content-Type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Count value is 0\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.count).to.equal(0);\r\n});\r\n\r\n\r\ntest(\"Projects array is present and contains expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.be.an('array');\r\n    \r\n    responseData.value.forEach(function(process) {\r\n        expect(process.projects).to.exist;\r\n        expect(process.projects).to.be.an('array');\r\n        expect(process.projects).to.have.lengthOf.at.least(1);\r\n    });\r\n});\r\n\r\n\r\ntest(\"Description of the request is 'Get list of all processes including system and inherited.'\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.description).to.eql(\"Get list of all processes including system and inherited.\");\r\n});\r\n\r\n",
                "docs": "Get list of all processes including system and inherited.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Project Process Migration",
          "filename": "Project Process Migration",
          "root": {
            "meta": {
              "name": "Project Process Migration"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Project Process Migration Migrate Projects Process",
              "filename": "Project Process Migration Migrate Projects Process.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/projectprocessmigration?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"typeId\": \"<uuid>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Migrates a project to a different process within the same OOB type. For example, you can only migrate a project from agile/custom-agile to agile/custom-agile.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Queries",
          "filename": "Queries",
          "root": {
            "docs": "The queries in a team project are organized in folders.\n\nA sample structure of queries and folders might appear as shown here.\n\n* **My Queries**\n* **Shared Queries**\n  * Feedback (Query)\n    * **Current Sprint**\n      * Blocked Tasks (Query)\n      * Open Impediments (Query)\n      * Test Cases (Query)\n      * Unfinished Work (Query)\n      * Work in Progress (Query)",
            "meta": {
              "name": "Queries"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Queries Create",
              "filename": "Queries Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/queries/{{query}}?validateWiqlOnly=<boolean>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "validateWiqlOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "query",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"clauses\": {},\n  \"createdBy\": {},\n  \"createdDate\": \"1951-11-12T03:09:01.389Z\",\n  \"filterOptions\": \"linksRecursiveMayContain\",\n  \"hasChildren\": true,\n  \"id\": \"39a1b40d-9679-4991-ac0c-6646f9e55e79\",\n  \"isDeleted\": true,\n  \"isFolder\": true,\n  \"isInvalidSyntax\": false,\n  \"isPublic\": true,\n  \"lastExecutedBy\": {},\n  \"lastExecutedDate\": \"1980-05-16T12:04:51.175Z\",\n  \"lastModifiedBy\": {},\n  \"lastModifiedDate\": \"1985-06-24T06:24:06.578Z\",\n  \"linkClauses\": {},\n  \"name\": \"dolore\",\n  \"path\": \"ex i\",\n  \"queryRecursionOption\": \"childFirst\",\n  \"queryType\": \"oneHop\",\n  \"sourceClauses\": {},\n  \"targetClauses\": {},\n  \"wiql\": \"ex magna deserunt\",\n  \"_links\": {},\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a query, or moves a query.\n\nLearn more about Work Item Query Language (WIQL) syntax [here](https://docs.microsoft.com/en-us/vsts/collaborate/wiql-syntax?toc=/vsts/work/track/toc.json&bc=/vsts/work/track/breadcrumb/toc.json&view=vsts).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Queries Delete",
              "filename": "Queries Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/queries/{{query}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "query",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete a query or a folder. This deletes any permission change on the deleted query or folder and any of its descendants if it is a folder. It is important to note that the deleted permission changes cannot be recovered upon undeleting the query or folder.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Queries Get Queries Batch",
              "filename": "Queries Get Queries Batch.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/queriesbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"$expand\": \"wiql\",\n  \"errorPolicy\": \"omit\",\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of queries by ids (Maximum 1000)",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Queries Get",
              "filename": "Queries Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/queries/{{query}}?$expand=wiql&$depth=<integer>&$includeDeleted=<boolean>&$useIsoDateFormat=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "wiql",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$depth",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$includeDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$useIsoDateFormat",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "query",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Retrieves an individual query and its children",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Queries List",
              "filename": "Queries List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/queries?$expand=wiql&$depth=<integer>&$includeDeleted=<boolean>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "wiql",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$depth",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$includeDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the root queries and their children",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Queries Update",
              "filename": "Queries Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/queries/{{query}}?$undeleteDescendants=<boolean>&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$undeleteDescendants",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "query",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"clauses\": {},\n  \"createdBy\": {},\n  \"createdDate\": \"1951-11-12T03:09:01.389Z\",\n  \"filterOptions\": \"linksRecursiveMayContain\",\n  \"hasChildren\": true,\n  \"id\": \"39a1b40d-9679-4991-ac0c-6646f9e55e79\",\n  \"isDeleted\": true,\n  \"isFolder\": true,\n  \"isInvalidSyntax\": false,\n  \"isPublic\": true,\n  \"lastExecutedBy\": {},\n  \"lastExecutedDate\": \"1980-05-16T12:04:51.175Z\",\n  \"lastModifiedBy\": {},\n  \"lastModifiedDate\": \"1985-06-24T06:24:06.578Z\",\n  \"linkClauses\": {},\n  \"name\": \"dolore\",\n  \"path\": \"ex i\",\n  \"queryRecursionOption\": \"childFirst\",\n  \"queryType\": \"oneHop\",\n  \"sourceClauses\": {},\n  \"targetClauses\": {},\n  \"wiql\": \"ex magna deserunt\",\n  \"_links\": {},\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update a query or a folder. This allows you to update, rename and move queries and folders.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Recyclebin",
          "filename": "Recyclebin",
          "root": {
            "meta": {
              "name": "Recyclebin"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Recyclebin Destroy Work Item",
              "filename": "Recyclebin Destroy Work Item.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/recyclebin/{{recyclebinId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "recyclebinId",
                    "value": "{{recyclebinId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Destroys the specified work item permanently from the Recycle Bin. This action can not be undone.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Recyclebin Get Deleted Work Item Shallow References",
              "filename": "Recyclebin Get Deleted Work Item Shallow References.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/recyclebin?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of the IDs and the URLs of the deleted the work items in the Recycle Bin.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Recyclebin Get",
              "filename": "Recyclebin Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/recyclebin/{{recyclebinId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "recyclebinId",
                    "value": "{{recyclebinId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a deleted work item from Recycle Bin.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Recyclebin Restore Work Item",
              "filename": "Recyclebin Restore Work Item.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/recyclebin/{{recyclebinId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "recyclebinId",
                    "value": "{{recyclebinId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"isDeleted\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Restores the deleted work item from Recycle Bin.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Revisions",
          "filename": "Revisions",
          "root": {
            "docs": "This controller version exists to support returning identity values and project scoped urls for work items",
            "meta": {
              "name": "Revisions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Revisions Get",
              "filename": "Revisions Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/revisions/{{revisionNumber}}?$expand=fields&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "fields",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "{{workItemId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "revisionNumber",
                    "value": "{{revisionNumber}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a fully hydrated work item for the requested revision",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Revisions List",
              "filename": "Revisions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/revisions?$top=<integer>&$skip=<integer>&$expand=fields&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "fields",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "{{workItemId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns the list of fully hydrated work item revisions, paged.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Reporting Work Item Revisions",
          "filename": "Reporting Work Item Revisions",
          "root": {
            "docs": "This API provides access to all work item revisions in your project or collection and allows you to build a warehouse.\n\n The response of the API contains a batch of work item revisions(\"values\"), a URL to the next batch of work item revisions(\"nextLink\") and a boolean that tells you whether you have read all currently available work item revisions(\"isLastBatch\").\n\n The workflow for building your warehouse is as follows:\n 1. Make a request to the API without providing a continuationToken parameter\n 2. Process the work item revisions returned by the API\n 3. Persist \"nextLink\" and check \"isLastBatch\"\n     * If \"isLastBatch\" is true, pause for a period of time(varies depending on your target latency)\n 4. Make the next request using the URL from \"nextLink\"\n 5. Go to step 2\n\n ## Note\n The results of this API are impacted when using Move Work Item and/or Change Work Item Type features in conjunction with \"project\" in the url and/or \"types\" in the query string.<br />\n  - Project-scoped requests will only return work item revisions from the specified project.\n  - Types-scoped requests will only return work item revisions of the specified type(s)\n\n ## Sample Projects\n [C# Example](https://github.com/sferg-msft/vsts-wit-reporting-example)",
            "meta": {
              "name": "Reporting Work Item Revisions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Reporting Work Item Revisions Read Reporting Revisions Get",
              "filename": "Reporting Work Item Revisions Read Reporting Revisions Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/reporting/workitemrevisions?fields=<string>&types=<string>&continuationToken=<string>&startDateTime=<dateTime>&includeIdentityRef=<boolean>&includeDeleted=<boolean>&includeTagRef=<boolean>&includeLatestOnly=<boolean>&$expand=fields&includeDiscussionChangesOnly=<boolean>&$maxPageSize=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "fields",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "types",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "startDateTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeIdentityRef",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDeleted",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeTagRef",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeLatestOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "fields",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "includeDiscussionChangesOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$maxPageSize",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a batch of work item revisions with the option of including deleted items",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Reporting Work Item Revisions Read Reporting Revisions Post",
              "filename": "Reporting Work Item Revisions Read Reporting Revisions Post.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/reporting/workitemrevisions?continuationToken=<string>&startDateTime=<dateTime>&$expand=fields&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "startDateTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "fields",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeDeleted\": \"<boolean>\",\n  \"includeIdentityRef\": \"<boolean>\",\n  \"includeLatestOnly\": \"<boolean>\",\n  \"includeTagRef\": \"<boolean>\",\n  \"types\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a batch of work item revisions. This request may be used if your list of fields is large enough that it may run the URL over the length limit.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Reporting Work Item Links",
          "filename": "Reporting Work Item Links",
          "root": {
            "docs": "This API provides access to all work item links in your project or collection and allows you to build a warehouse.\n\nThe response of the API contains a batch of work item links (\"values\"), a URL to the next batch of work item links (\"nextLink\") and a boolean that tells you whether you have read all currently available work item links (\"isLastBatch\").\n\nThe workflow for building your warehouse is as follows:\n  1. Make a request to the API without providing a watermark parameter\n  2. Process the work item links returned by the API\n  3. Persist \"nextLink\" and check \"isLastBatch\"\n    * If \"isLastBatch\" is true, pause for a period of time (varies depending on your target latency)\n  4. Make the next request using the URL from \"nextLink\"\n  5. Go to step 2",
            "meta": {
              "name": "Reporting Work Item Links"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Reporting Work Item Links Get",
              "filename": "Reporting Work Item Links Get.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/reporting/workitemlinks?linkTypes=<string>&types=<string>&continuationToken=<string>&startDateTime=<dateTime>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "linkTypes",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "types",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "startDateTime",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a batch of work item links",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Rules",
          "filename": "Rules",
          "root": {
            "meta": {
              "name": "Rules"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Rules Add",
              "filename": "Rules Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workItemTypes/{{witrefname}}/rules?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"actions\": [\n    {\n      \"actionType\": \"disallowValue\",\n      \"targetField\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"actionType\": \"setDefaultFromField\",\n      \"targetField\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"conditions\": [\n    {\n      \"conditionType\": \"whenWas\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"conditionType\": \"whenChanged\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"isDisabled\": \"<boolean>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 401\", function () {\r\n  expect(res.getStatus()).to.equal(401);\r\n});\r\n\r\n\r\ntest(\"Response Content-Type is text/xml\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"text/xml\");\r\n});\r\n\r\n\r\ntest(\"Response body is not null\", function () {\r\n    const responseData = xml2Json(res.getBody()?.toString());\r\n    \r\n    expect(responseData).to.not.be.null;\r\n});\r\n\r\n\r\ntest(\"Actions array in the response should exist\", function () {\r\n    const responseData = xml2Json(res.getBody()?.toString());\r\n    \r\n    expect(responseData.actions).to.exist;\r\n});\r\n\r\n",
                "docs": "Adds a rule to work item type in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Rules Delete",
              "filename": "Rules Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workItemTypes/{{witrefname}}/rules/{{ruleId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a rule from the work item type in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Rules Get",
              "filename": "Rules Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workItemTypes/{{witrefname}}/rules/{{ruleid}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response Content-Type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Presence of all required fields\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.id).to.exist;\r\n    expect(responseData.customizationType).to.exist;\r\n    expect(responseData.url).to.exist;\r\n    expect(responseData.name).to.exist;\r\n    expect(responseData.conditions).to.exist;\r\n    expect(responseData.actions).to.exist;\r\n    expect(responseData.isDisabled).to.exist;\r\n});\r\n\r\n\r\ntest(\"Conditions array is present and contains expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.conditions).to.exist.and.to.be.an('array');\r\n    expect(responseData.conditions).to.have.lengthOf(1);\r\n});\r\n\r\n\r\ntest(\"Actions array is present and contains expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.actions).to.exist.and.to.be.an('array');\r\n    expect(responseData.actions).to.have.lengthOf(2);\r\n});\r\n\r\n",
                "docs": "Returns a single rule in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Rules List",
              "filename": "Rules List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workItemTypes/{{witrefname}}/rules?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Value array is present and contains at least one element\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.be.an('array').and.to.have.lengthOf.at.least(1);\r\n});\r\n\r\n\r\ntest(\"Response time is less than 200ms\", function () {\r\n  expect(res.getResponseTime()).to.be.below(200);\r\n});\r\n\r\ntest(\"Conditions and actions arrays within value array elements are not empty\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.value).to.be.an('array');\r\n\r\n    responseData.value.forEach(function(element) {\r\n        expect(element.conditions).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Conditions array should not be empty\");\r\n        expect(element.actions).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Actions array should not be empty\");\r\n    });\r\n});\r\n",
                "docs": "Returns a list of all rules in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Rules Update",
              "filename": "Rules Update.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workItemTypes/{{witrefname}}/rules/{{ruleId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"id\": \"15e6a602-7def-82c0-e4a0-8fd119c09965\",\n  \"actions\": [\n    {\n      \"actionType\": \"makeRequired\",\n      \"targetField\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"actionType\": \"setDefaultFromClock\",\n      \"targetField\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"conditions\": [\n    {\n      \"conditionType\": \"whenWas\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"conditionType\": \"whenStateChangedTo\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"isDisabled\": \"<boolean>\",\n  \"name\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a rule in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "System Controls",
          "filename": "System Controls",
          "root": {
            "docs": "System controls like Area Path, Iteration Path and Reason can be hidden from work item form using these API(s). In additon to hide them, lables to these controls can also be edited.",
            "meta": {
              "name": "System Controls"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "System Controls Delete",
              "filename": "System Controls Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workItemTypes/{{witrefname}}/layout/systemcontrols/{{controlid}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 401\", function () {\r\n    expect(res.getStatus()).to.equal(401);\r\n});\r\n\r\n\r\ntest(\"Response Content-Type is 'text/xml'\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include('text/xml');\r\n});\r\n\r\n\r\ntest(\"Response is not null\", function () {\r\n    const responseData = xml2Json(res.getBody()?.toString());\r\n    \r\n    expect(responseData).to.not.be.null;\r\n});\r\n\r\n\r\ntest(\"Response time is less than 200ms\", function () {\r\n    expect(res.getResponseTime()).to.be.below(200);\r\n});\r\n\r\ntest(\"Ensure that the description of the request is present in the response\", function () {\r\n    const responseData = xml2Json(res.getBody()?.toString());\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData).to.have.property('description');\r\n});\r\n\r\n",
                "docs": "Deletes a system control modification on the work item form.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "System Controls List",
              "filename": "System Controls List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workItemTypes/{{witrefname}}/layout/systemcontrols?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 500\", function () {\r\n    expect(res.getStatus()).to.equal(500);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.errorCode).to.exist;\r\n    expect(responseData.eventId).to.exist;\r\n    expect(responseData.message).to.exist;\r\n});\r\n\r\n\r\ntest(\"Contribution array is present and not empty\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('array').that.is.not.empty;\r\n    responseData.forEach(function(control) {\r\n        expect(control.contribution).to.exist.and.to.be.an('object');\r\n    });\r\n});\r\n\r\n\r\ntest(\"ControlType is a non-empty string\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData).to.be.an('array');\r\n  responseData.forEach(function(control) {\r\n    expect(control.controlType).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ControlType should not be empty\");\r\n  });\r\n});\r\n\r\n\r\ntest(\"Height is in a valid format\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.be.an('array');\r\n    responseData.forEach(function(item) {\r\n        expect(item.height).to.match(/^\\d+px$/);\r\n    });\r\n});\r\n\r\n",
                "docs": "Gets edited system controls for a work item type in a process. To get all system controls (base + edited) use layout API(s)",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "System Controls Update",
              "filename": "System Controls Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workItemTypes/{{witrefname}}/layout/systemcontrols/{{controlId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"contribution\": {\n    \"contributionId\": \"<string>\",\n    \"height\": \"<integer>\",\n    \"inputs\": {\n      \"veniamd0\": {},\n      \"reprehenderit_04\": {},\n      \"consectetur50\": {}\n    },\n    \"showOnDeletedWorkItem\": \"<boolean>\"\n  },\n  \"controlType\": \"<string>\",\n  \"height\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"inherited\": \"<boolean>\",\n  \"isContribution\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"metadata\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"overridden\": \"<boolean>\",\n  \"readOnly\": \"<boolean>\",\n  \"visible\": \"<boolean>\",\n  \"watermark\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates/adds a system control on the work item form.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "States",
          "filename": "States",
          "root": {
            "meta": {
              "name": "States"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Create",
              "filename": "Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/states?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"stateCategory\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a state definition in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Delete",
              "filename": "Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/states/{{stateId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a state definition in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Get",
              "filename": "Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/states/{{stateId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a state definition in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Hide State Definition",
              "filename": "Hide State Definition.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/states/{{stateId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"hidden\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Hides a state definition in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "List",
              "filename": "List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/states?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a list of all state definitions in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Update",
              "filename": "Update.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefname}}/states/{{stateId}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"stateCategory\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a given state definition in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Send Mail",
          "filename": "Send Mail",
          "root": {
            "meta": {
              "name": "Send Mail"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Send Mail Send Mail",
              "filename": "Send Mail Send Mail.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/sendmail?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"message\": {\n    \"body\": \"<string>\",\n    \"cc\": {\n      \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tfIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"unresolvedEntityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    },\n    \"inReplyTo\": \"<string>\",\n    \"messageId\": \"<string>\",\n    \"replyTo\": {\n      \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tfIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"unresolvedEntityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    },\n    \"subject\": \"<string>\",\n    \"to\": {\n      \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tfIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"unresolvedEntityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    }\n  },\n  \"persistenceId\": \"<uuid>\",\n  \"projectId\": \"<string>\",\n  \"sortFields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tempQueryId\": \"<string>\",\n  \"wiql\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "RESTful method to send mail for selected/queried work items.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Tags",
          "filename": "Tags",
          "root": {
            "docs": "Tags provide ability to manage the tags for the project. \nThird party services or users with read or write permission in the work item can\nlist, get, update and delete tags. The tags are shared between Work Items and Pull Requests\nand are used to provide quick insights into both, an example\ncan be labelling a Pull Request as \"WIP\", \"Feature\", or \"Bug\" to let others\nknow the state and purpose of the Pull Request.\n\nAs the tags are shared betweek Work Items and Pull Requests, then any change (update or delete) is reflected\nin both. Deleting the tag will remove the tag from all Work Items as well as remove the label (tag) from the Pull Request.",
            "meta": {
              "name": "Tags"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Tags Delete",
              "filename": "Tags Delete.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/tags/{{tagIdOrName}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "tagIdOrName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Delete the tag for the project. Please note, that the deleted tag will be removed from all Work Items as well as Pull Requests.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Get",
              "filename": "Tags Get.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/tags/{{tagIdOrName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "tagIdOrName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get the tag for the project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags List",
              "filename": "Tags List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/tags?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all the tags for the project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Tags Update",
              "filename": "Tags Update.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/tags/{{tagIdOrName}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "tagIdOrName",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"id\": \"<uuid>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Update the tag for the project.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Templates",
          "filename": "Templates",
          "root": {
            "meta": {
              "name": "Templates"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Templates Create",
              "filename": "Templates Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/wit/templates?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"fields\": {\n    \"eiusmodf\": \"qui Excepteur ut\",\n    \"amet316\": \"cupidatat\",\n    \"consectetur5\": \"aliqua dolore\"\n  },\n  \"description\": \"sed commodo ad pariatur\",\n  \"id\": \"urn:uuid:5d1d8a4b-c3e7-70d7-f612-b6d8547fb75a\",\n  \"name\": \"occaecat minim non\",\n  \"workItemTypeName\": \"dolore sed\",\n  \"_links\": {},\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a template",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Templates Delete",
              "filename": "Templates Delete.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/wit/templates/{{templateId}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "templateId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes the template with given id",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Templates Get",
              "filename": "Templates Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/wit/templates/{{templateId}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "templateId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the template with specified id",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Templates List",
              "filename": "Templates List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/wit/templates?workitemtypename=<string>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "workitemtypename",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets template",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Templates Replace Template",
              "filename": "Templates Replace Template.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/wit/templates/{{templateId}}?api-version={{api-version}}",
                "method": "PUT",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "templateId",
                    "value": "<uuid>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"fields\": {\n    \"eiusmodf\": \"qui Excepteur ut\",\n    \"amet316\": \"cupidatat\",\n    \"consectetur5\": \"aliqua dolore\"\n  },\n  \"description\": \"sed commodo ad pariatur\",\n  \"id\": \"urn:uuid:5d1d8a4b-c3e7-70d7-f612-b6d8547fb75a\",\n  \"name\": \"occaecat minim non\",\n  \"workItemTypeName\": \"dolore sed\",\n  \"_links\": {},\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Replace template contents",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Temp Queries",
          "filename": "Temp Queries",
          "root": {
            "docs": "Temporary query API. Temporary queries are used to save a specific wiql for a short time",
            "meta": {
              "name": "Temp Queries"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Temp Queries Create",
              "filename": "Temp Queries Create.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/tempqueries?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"wiql\": \"est\",\n  \"_links\": {},\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a temporary query\n\nLearn more about Work Item Query Language (WIQL) syntax [here](https://docs.microsoft.com/en-us/vsts/collaborate/wiql-syntax?toc=/vsts/work/track/toc.json&bc=/vsts/work/track/breadcrumb/toc.json&view=vsts).",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Wiql",
          "filename": "Wiql",
          "root": {
            "docs": "The WIQL API is used to run a query given the WIQL text or a saved query ID.\n\nLearn more about Work Item Query Language (WIQL) syntax [here](https://docs.microsoft.com/en-us/vsts/collaborate/wiql-syntax?toc=/vsts/work/track/toc.json&bc=/vsts/work/track/breadcrumb/toc.json&view=vsts).",
            "meta": {
              "name": "Wiql"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Wiql Get",
              "filename": "Wiql Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/wit/wiql/{{wiqlId}}?timePrecision=<boolean>&$top=<integer>&api-version={{api-version}}",
                "method": "HEAD",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "timePrecision",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wiqlId",
                    "value": "{{wiqlId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the results of the query given the query ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Wiql Query By Id",
              "filename": "Wiql Query By Id.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/wit/wiql/{{wiqlId}}?timePrecision=<boolean>&$top=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "timePrecision",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "wiqlId",
                    "value": "{{wiqlId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the results of the query given the query ID.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Wiql Query By Wiql",
              "filename": "Wiql Query By Wiql.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/{{team}}/_apis/wit/wiql?timePrecision=<boolean>&$top=<integer>&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "timePrecision",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "team",
                    "value": "{{team}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"query\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the results of the query given its WIQL.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Updates",
          "filename": "Updates",
          "root": {
            "docs": "This controller version exists to support returning identity values and project scoped urls for work items",
            "meta": {
              "name": "Updates"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Updates Get",
              "filename": "Updates Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/updates/{{updateNumber}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "{{workItemId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "updateNumber",
                    "value": "{{updateNumber}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a single update for a work item",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Updates List",
              "filename": "Updates List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workItems/{{workItemId}}/updates?$top=<integer>&$skip=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$top",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$skip",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "{{workItemId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a the deltas between work item revisions",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Icons",
          "filename": "Work Item Icons",
          "root": {
            "docs": "Discover the list of work item icons and view individual icons.",
            "meta": {
              "name": "Work Item Icons"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Item Icons Get",
              "filename": "Work Item Icons Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/wit/workitemicons/{{icon}}?color=<string>&v=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "image/svg+xml",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "color",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "v",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "icon",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a work item icon given the friendly name and icon color.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Icons List",
              "filename": "Work Item Icons List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/wit/workitemicons?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get a list of all work item icons.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Revisions Discussions",
          "filename": "Work Item Revisions Discussions",
          "root": {
            "meta": {
              "name": "Work Item Revisions Discussions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Item Revisions Discussions Read Reporting Discussions",
              "filename": "Work Item Revisions Discussions Read Reporting Discussions.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/reporting/workItemRevisions/discussions?continuationToken=<string>&$maxPageSize=<integer>&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "continuationToken",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$maxPageSize",
                    "value": "<integer>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Relation Types",
          "filename": "Work Item Relation Types",
          "root": {
            "meta": {
              "name": "Work Item Relation Types"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Item Relation Types Get",
              "filename": "Work Item Relation Types Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/wit/workitemrelationtypes/{{relation}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "relation",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the work item relation type definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Relation Types List",
              "filename": "Work Item Relation Types List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/wit/workitemrelationtypes?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets the work item relation types.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Transitions",
          "filename": "Work Item Transitions",
          "root": {
            "docs": "Currently only for the single GetWorkItemNextStatesOnCheckinAction that returns the next state if the work item is checked in.",
            "meta": {
              "name": "Work Item Transitions"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Item Transitions List",
              "filename": "Work Item Transitions List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/wit/workitemtransitions?ids=1&action=checkin&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "ids",
                    "value": "1",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "action",
                    "value": "checkin",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Count field is present and has a numeric value\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData).to.be.an('object');\r\n  expect(responseData).to.have.property('count').that.is.a('number');\r\n});\r\n\r\n\r\ntest(\"Value array is present and not empty\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData).to.be.an('object');\r\n  expect(responseData.value).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1);\r\n});\r\n\r\n\r\ntest(\"Each object in the 'value' array contains 'id' and 'stateOnTransition' fields\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData.value).to.be.an('array');\r\n    responseData.value.forEach(function(item) {\r\n        expect(item).to.have.property('id');\r\n        expect(item).to.have.property('stateOnTransition');\r\n    });\r\n});\r\n\r\n",
                "docs": "Returns the next state on the given work item IDs.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Type Categories",
          "filename": "Work Item Type Categories",
          "root": {
            "docs": "The controller that services the requests for Work Item Type Categories.",
            "meta": {
              "name": "Work Item Type Categories"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Item Type Categories Get",
              "filename": "Work Item Type Categories Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemtypecategories/{{category}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "category",
                    "value": "<string>",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get specific work item type category by name.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Type Categories List",
              "filename": "Work Item Type Categories List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemtypecategories?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Get all work item type categories.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Type States",
          "filename": "Work Item Type States",
          "root": {
            "docs": "The controller that services the requests for states of Work Item Types.",
            "meta": {
              "name": "Work Item Type States"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Item Type States List",
              "filename": "Work Item Type States List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemtypes/{{witrefname}}/states?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response has the required fields - count and value\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData).to.have.property('count');\r\n    expect(responseData).to.have.property('value');\r\n});\r\n\r\n\r\ntest(\"Value array is present and is an empty array\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.be.an('array').that.is.empty;\r\n});\r\n\r\n\r\ntest(\"Count is a non-negative integer\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData).to.be.an('object');\r\n  expect(responseData.count).to.be.a('number');\r\n  expect(responseData.count).to.satisfy((count) => count >= 0, \"Count should be a non-negative integer\");\r\n});\r\n\r\n\r\ntest(\"Content type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n",
                "docs": "Returns the state names and colors for a work item type.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Types",
          "filename": "Work Item Types",
          "root": {
            "docs": "The controller that services the requests for Work Item Types",
            "meta": {
              "name": "Work Item Types"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Add",
              "filename": "Add.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes/{{witRefNameForBehaviors}}/behaviors?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "witRefNameForBehaviors",
                    "value": "{{witRefNameForBehaviors}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"behavior\": {\n    \"id\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"isDefault\": \"<boolean>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds a behavior to the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Create",
              "filename": "Create.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"behaviors\": [\n    {\n      \"behavior\": {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"isDefault\": \"<boolean>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"behavior\": {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"isDefault\": \"<boolean>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"class\": \"system\",\n  \"color\": \"<string>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"id\": \"<string>\",\n  \"inherits\": \"<string>\",\n  \"isDisabled\": \"<boolean>\",\n  \"layout\": {\n    \"extensions\": [\n      {\n        \"id\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\"\n      }\n    ],\n    \"pages\": [\n      {\n        \"contribution\": {\n          \"contributionId\": \"<string>\",\n          \"height\": \"<integer>\",\n          \"inputs\": {\n            \"Excepteurfe5\": {},\n            \"mollit_d15\": {}\n          },\n          \"showOnDeletedWorkItem\": \"<boolean>\"\n        },\n        \"id\": \"<string>\",\n        \"inherited\": \"<boolean>\",\n        \"isContribution\": \"<boolean>\",\n        \"label\": \"<string>\",\n        \"locked\": \"<boolean>\",\n        \"order\": \"<integer>\",\n        \"overridden\": \"<boolean>\",\n        \"pageType\": \"custom\",\n        \"sections\": [\n          {\n            \"groups\": [\n              {\n                \"contribution\": {\n                  \"contributionId\": \"<string>\",\n                  \"height\": \"<integer>\",\n                  \"inputs\": {\n                    \"Duisffb\": {},\n                    \"ut_\": {}\n                  },\n                  \"showOnDeletedWorkItem\": \"<boolean>\"\n                },\n                \"controls\": [\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"cillumb\": {},\n                        \"consequat_62\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  },\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"velit_ab6\": {},\n                        \"voluptate_7\": {},\n                        \"eiusmod_c8\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  }\n                ],\n                \"height\": \"<integer>\",\n                \"id\": \"<string>\",\n                \"inherited\": \"<boolean>\",\n                \"isContribution\": \"<boolean>\",\n                \"label\": \"<string>\",\n                \"order\": \"<integer>\",\n                \"overridden\": \"<boolean>\",\n                \"visible\": \"<boolean>\"\n              },\n              {\n                \"contribution\": {\n                  \"contributionId\": \"<string>\",\n                  \"height\": \"<integer>\",\n                  \"inputs\": {\n                    \"amet8\": {},\n                    \"adab9\": {},\n                    \"dolor66\": {}\n                  },\n                  \"showOnDeletedWorkItem\": \"<boolean>\"\n                },\n                \"controls\": [\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"ipsum_c\": {},\n                        \"non_edb\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  },\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"magna3\": {},\n                        \"laboris6e\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  }\n                ],\n                \"height\": \"<integer>\",\n                \"id\": \"<string>\",\n                \"inherited\": \"<boolean>\",\n                \"isContribution\": \"<boolean>\",\n                \"label\": \"<string>\",\n                \"order\": \"<integer>\",\n                \"overridden\": \"<boolean>\",\n                \"visible\": \"<boolean>\"\n              }\n            ],\n            \"id\": \"<string>\",\n            \"overridden\": \"<boolean>\"\n          },\n          {\n            \"groups\": [\n              {\n                \"contribution\": {\n                  \"contributionId\": \"<string>\",\n                  \"height\": \"<integer>\",\n                  \"inputs\": {\n                    \"irure3\": {},\n                    \"ade8\": {}\n                  },\n                  \"showOnDeletedWorkItem\": \"<boolean>\"\n                },\n                \"controls\": [\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"voluptate_0\": {},\n                        \"pariatur9\": {},\n                        \"sinte\": {},\n                        \"mollit01\": {},\n                        \"et79\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  },\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"ullamco_96\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  }\n                ],\n                \"height\": \"<integer>\",\n                \"id\": \"<string>\",\n                \"inherited\": \"<boolean>\",\n                \"isContribution\": \"<boolean>\",\n                \"label\": \"<string>\",\n                \"order\": \"<integer>\",\n                \"overridden\": \"<boolean>\",\n                \"visible\": \"<boolean>\"\n              },\n              {\n                \"contribution\": {\n                  \"contributionId\": \"<string>\",\n                  \"height\": \"<integer>\",\n                  \"inputs\": {\n                    \"sintea\": {}\n                  },\n                  \"showOnDeletedWorkItem\": \"<boolean>\"\n                },\n                \"controls\": [\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"sed_7\": {},\n                        \"qui_6cd\": {},\n                        \"exercitation_45\": {},\n                        \"Ut_b2f\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  },\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"do_1\": {},\n                        \"labore_\": {},\n                        \"ut_90e\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  }\n                ],\n                \"height\": \"<integer>\",\n                \"id\": \"<string>\",\n                \"inherited\": \"<boolean>\",\n                \"isContribution\": \"<boolean>\",\n                \"label\": \"<string>\",\n                \"order\": \"<integer>\",\n                \"overridden\": \"<boolean>\",\n                \"visible\": \"<boolean>\"\n              }\n            ],\n            \"id\": \"<string>\",\n            \"overridden\": \"<boolean>\"\n          }\n        ],\n        \"visible\": \"<boolean>\"\n      },\n      {\n        \"contribution\": {\n          \"contributionId\": \"<string>\",\n          \"height\": \"<integer>\",\n          \"inputs\": {\n            \"tempor_da\": {},\n            \"culpa_6b\": {},\n            \"commodo9\": {}\n          },\n          \"showOnDeletedWorkItem\": \"<boolean>\"\n        },\n        \"id\": \"<string>\",\n        \"inherited\": \"<boolean>\",\n        \"isContribution\": \"<boolean>\",\n        \"label\": \"<string>\",\n        \"locked\": \"<boolean>\",\n        \"order\": \"<integer>\",\n        \"overridden\": \"<boolean>\",\n        \"pageType\": \"history\",\n        \"sections\": [\n          {\n            \"groups\": [\n              {\n                \"contribution\": {\n                  \"contributionId\": \"<string>\",\n                  \"height\": \"<integer>\",\n                  \"inputs\": {\n                    \"consectetur606\": {},\n                    \"dolor_a6\": {},\n                    \"quideb\": {},\n                    \"irure839\": {}\n                  },\n                  \"showOnDeletedWorkItem\": \"<boolean>\"\n                },\n                \"controls\": [\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"irure_c1a\": {},\n                        \"anim_c10\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  },\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"eiusmod_100\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  }\n                ],\n                \"height\": \"<integer>\",\n                \"id\": \"<string>\",\n                \"inherited\": \"<boolean>\",\n                \"isContribution\": \"<boolean>\",\n                \"label\": \"<string>\",\n                \"order\": \"<integer>\",\n                \"overridden\": \"<boolean>\",\n                \"visible\": \"<boolean>\"\n              },\n              {\n                \"contribution\": {\n                  \"contributionId\": \"<string>\",\n                  \"height\": \"<integer>\",\n                  \"inputs\": {\n                    \"minim_06c\": {},\n                    \"tempor8\": {},\n                    \"occaecat_488\": {},\n                    \"eiusmod32\": {}\n                  },\n                  \"showOnDeletedWorkItem\": \"<boolean>\"\n                },\n                \"controls\": [\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"doloraa5\": {},\n                        \"cupidatat268\": {},\n                        \"tempord_7\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  },\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"mollitb5a\": {},\n                        \"dolore_6\": {},\n                        \"fugiat_64\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  }\n                ],\n                \"height\": \"<integer>\",\n                \"id\": \"<string>\",\n                \"inherited\": \"<boolean>\",\n                \"isContribution\": \"<boolean>\",\n                \"label\": \"<string>\",\n                \"order\": \"<integer>\",\n                \"overridden\": \"<boolean>\",\n                \"visible\": \"<boolean>\"\n              }\n            ],\n            \"id\": \"<string>\",\n            \"overridden\": \"<boolean>\"\n          },\n          {\n            \"groups\": [\n              {\n                \"contribution\": {\n                  \"contributionId\": \"<string>\",\n                  \"height\": \"<integer>\",\n                  \"inputs\": {\n                    \"dolor_3d\": {},\n                    \"nullae\": {},\n                    \"animb\": {},\n                    \"ut_4a0\": {}\n                  },\n                  \"showOnDeletedWorkItem\": \"<boolean>\"\n                },\n                \"controls\": [\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"proident_569\": {},\n                        \"anim_48\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  },\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"velit_cb\": {},\n                        \"nostrud_a_7\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  }\n                ],\n                \"height\": \"<integer>\",\n                \"id\": \"<string>\",\n                \"inherited\": \"<boolean>\",\n                \"isContribution\": \"<boolean>\",\n                \"label\": \"<string>\",\n                \"order\": \"<integer>\",\n                \"overridden\": \"<boolean>\",\n                \"visible\": \"<boolean>\"\n              },\n              {\n                \"contribution\": {\n                  \"contributionId\": \"<string>\",\n                  \"height\": \"<integer>\",\n                  \"inputs\": {\n                    \"etd4\": {}\n                  },\n                  \"showOnDeletedWorkItem\": \"<boolean>\"\n                },\n                \"controls\": [\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"voluptate_4\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  },\n                  {\n                    \"contribution\": {\n                      \"contributionId\": \"<string>\",\n                      \"height\": \"<integer>\",\n                      \"inputs\": {\n                        \"in6\": {}\n                      },\n                      \"showOnDeletedWorkItem\": \"<boolean>\"\n                    },\n                    \"controlType\": \"<string>\",\n                    \"height\": \"<integer>\",\n                    \"id\": \"<string>\",\n                    \"inherited\": \"<boolean>\",\n                    \"isContribution\": \"<boolean>\",\n                    \"label\": \"<string>\",\n                    \"metadata\": \"<string>\",\n                    \"order\": \"<integer>\",\n                    \"overridden\": \"<boolean>\",\n                    \"readOnly\": \"<boolean>\",\n                    \"visible\": \"<boolean>\",\n                    \"watermark\": \"<string>\"\n                  }\n                ],\n                \"height\": \"<integer>\",\n                \"id\": \"<string>\",\n                \"inherited\": \"<boolean>\",\n                \"isContribution\": \"<boolean>\",\n                \"label\": \"<string>\",\n                \"order\": \"<integer>\",\n                \"overridden\": \"<boolean>\",\n                \"visible\": \"<boolean>\"\n              }\n            ],\n            \"id\": \"<string>\",\n            \"overridden\": \"<boolean>\"\n          }\n        ],\n        \"visible\": \"<boolean>\"\n      }\n    ],\n    \"systemControls\": [\n      {\n        \"contribution\": {\n          \"contributionId\": \"<string>\",\n          \"height\": \"<integer>\",\n          \"inputs\": {\n            \"Excepteur__a3\": {}\n          },\n          \"showOnDeletedWorkItem\": \"<boolean>\"\n        },\n        \"controlType\": \"<string>\",\n        \"height\": \"<integer>\",\n        \"id\": \"<string>\",\n        \"inherited\": \"<boolean>\",\n        \"isContribution\": \"<boolean>\",\n        \"label\": \"<string>\",\n        \"metadata\": \"<string>\",\n        \"order\": \"<integer>\",\n        \"overridden\": \"<boolean>\",\n        \"readOnly\": \"<boolean>\",\n        \"visible\": \"<boolean>\",\n        \"watermark\": \"<string>\"\n      },\n      {\n        \"contribution\": {\n          \"contributionId\": \"<string>\",\n          \"height\": \"<integer>\",\n          \"inputs\": {\n            \"incididunt_\": {}\n          },\n          \"showOnDeletedWorkItem\": \"<boolean>\"\n        },\n        \"controlType\": \"<string>\",\n        \"height\": \"<integer>\",\n        \"id\": \"<string>\",\n        \"inherited\": \"<boolean>\",\n        \"isContribution\": \"<boolean>\",\n        \"label\": \"<string>\",\n        \"metadata\": \"<string>\",\n        \"order\": \"<integer>\",\n        \"overridden\": \"<boolean>\",\n        \"readOnly\": \"<boolean>\",\n        \"visible\": \"<boolean>\",\n        \"watermark\": \"<string>\"\n      }\n    ]\n  },\n  \"name\": \"<string>\",\n  \"states\": [\n    {\n      \"color\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"order\": \"<integer>\",\n      \"stateCategory\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"color\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"order\": \"<integer>\",\n      \"stateCategory\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a work item type in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Delete",
              "filename": "Delete.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes/{{witRefName}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "witRefName",
                    "value": "{{witRefName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a work itewm type in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Get Behavior For Work Item Type",
              "filename": "Get Behavior For Work Item Type.bru",
              "seq": 11,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes/{{witRefNameForBehaviors}}/behaviors/{{behaviorRefName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "witRefNameForBehaviors",
                    "value": "{{witRefNameForBehaviors}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "behaviorRefName",
                    "value": "{{behaviorRefName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a behavior for the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Get Behaviors For Work Item Type",
              "filename": "Get Behaviors For Work Item Type.bru",
              "seq": 9,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes/{{witRefNameForBehaviors}}/behaviors?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "witRefNameForBehaviors",
                    "value": "{{witRefNameForBehaviors}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a list of all behaviors for the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Get Work Item Type",
              "filename": "Get Work Item Type.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes/{{witrefname}}?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Url should be in a valid format\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData.url).to.match(/^https?:\\/\\/[\\w\\-]+(\\.[\\w\\-]+)+[/#?]?.*$/);\r\n});\r\n\r\n\r\ntest(\"Validate the 'inherits' field is either null or a valid value\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData).to.be.an('object');\r\n  expect(responseData.inherits).to.satisfy((val) => val === null || typeof val === 'string');\r\n});\r\n\r\n\r\ntest(\"IsDisabled field must be a boolean value\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.isDisabled).to.be.a('boolean');\r\n});\r\n\r\n",
                "docs": "Returns a work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Get Work Item Types",
              "filename": "Get Work Item Types.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n  expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Response time is less than 200ms\", function () {\r\n    expect(res.getResponseTime()).to.be.below(200);\r\n});\r\n\r\ntest(\"Value array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.exist.and.to.be.an('array').with.lengthOf(0);\r\n});\r\n\r\n\r\ntest(\"IsDisabled field is a boolean\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.be.an('array');\r\n    responseData.value.forEach(function(workItemType) {\r\n        expect(workItemType.isDisabled).to.be.a('boolean');\r\n    });\r\n});\r\n\r\n\r\ntest(\"Description is a non-empty string\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");\r\n});\r\n\r\n",
                "docs": "Returns a list of all work item types in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Remove Behavior From Work Item Type",
              "filename": "Remove Behavior From Work Item Type.bru",
              "seq": 12,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes/{{witRefNameForBehaviors}}/behaviors/{{behaviorRefName}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "witRefNameForBehaviors",
                    "value": "{{witRefNameForBehaviors}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "behaviorRefName",
                    "value": "{{behaviorRefName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a behavior for the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Update Behavior To Work Item Type",
              "filename": "Update Behavior To Work Item Type.bru",
              "seq": 10,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes/{{witRefNameForBehaviors}}/behaviors?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "witRefNameForBehaviors",
                    "value": "{{witRefNameForBehaviors}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"behavior\": {\n    \"id\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"isDefault\": \"<boolean>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a behavior for the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Update Work Item Type",
              "filename": "Update Work Item Type.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workitemtypes/{{witRefName}}?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "witRefName",
                    "value": "{{witRefName}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"color\": \"<string>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"isDisabled\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Types Get",
              "filename": "Work Item Types Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemtypes/{{workItemType}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n  expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Icon object structure and properties are valid\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.icon).to.be.an('object');\r\n    expect(responseData.icon.id).to.be.a('string');\r\n    expect(responseData.icon.url).to.be.a('string');\r\n});\r\n\r\n",
                "docs": "Returns a work item type definition.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Types List",
              "filename": "Work Item Types List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemtypes?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n\ntest(\"Content-Type header is application/json\", function () {\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\n});\n\n\ntest(\"Value array is present and contains at least one element\", function () {\n    const responseData = res.getBody();\n    \n    expect(responseData).to.have.property('value').that.is.an('array').and.not.empty;\n});\n\n",
                "docs": "Returns the list of work item types",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Types Behaviors",
          "filename": "Work Item Types Behaviors",
          "root": {
            "meta": {
              "name": "Work Item Types Behaviors"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Item Types Behaviors Add",
              "filename": "Work Item Types Behaviors Add.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workitemtypesbehaviors/{{witRefNameForBehaviors}}/behaviors?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "processId",
                    "value": "{{processId}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "witRefNameForBehaviors",
                    "value": "{{witRefNameForBehaviors}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"behavior\": {\n    \"id\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"isDefault\": \"<boolean>\",\n  \"isLegacyDefault\": \"<boolean>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds a behavior to the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Types Behaviors Get",
              "filename": "Work Item Types Behaviors Get.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workitemtypesbehaviors/{{witRefNameForBehaviors}}/behaviors/{{behaviorRefName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a behavior for the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Types Behaviors List",
              "filename": "Work Item Types Behaviors List.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workitemtypesbehaviors/{{witRefNameForBehaviors}}/behaviors?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a list of all behaviors for the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Types Behaviors Remove Behavior From Work Item Type",
              "filename": "Work Item Types Behaviors Remove Behavior From Work Item Type.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workitemtypesbehaviors/{{witRefNameForBehaviors}}/behaviors/{{behaviorRefName}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a behavior for the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Types Behaviors Update",
              "filename": "Work Item Types Behaviors Update.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processes/{{processId}}/workitemtypesbehaviors/{{witRefNameForBehaviors}}/behaviors?api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"behavior\": {\n    \"id\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"isDefault\": \"<boolean>\",\n  \"isLegacyDefault\": \"<boolean>\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a behavior for the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Item Types Field",
          "filename": "Work Item Types Field",
          "root": {
            "docs": "Project specific field definition API.",
            "meta": {
              "name": "Work Item Types Field"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Add",
              "filename": "Add.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefnameForFields}}/fields?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"allowGroups\": \"<boolean>\",\n  \"defaultValue\": \"<string>\",\n  \"name\": \"<string>\",\n  \"pickList\": {\n    \"id\": \"<uuid>\",\n    \"isSuggested\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"readOnly\": \"<boolean>\",\n  \"referenceName\": \"<string>\",\n  \"required\": \"<boolean>\",\n  \"type\": \"string\",\n  \"url\": \"<string>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Adds a field to the work item type in the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Get",
              "filename": "Get.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{workItemType}}/fields/{{fieldRefName}}?api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a single field in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "List",
              "filename": "List.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefnameForFields}}/fields",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a list of all fields in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Remove Field From Work Item Type",
              "filename": "Remove Field From Work Item Type.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/_apis/work/processdefinitions/{{processId}}/workItemTypes/{{witrefnameForFields}}/fields/{{fieldRefName}}?api-version={{api-version}}",
                "method": "DELETE",
                "headers": [],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Removes a field in the work item type of the process.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "Basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Types Field Get",
              "filename": "Work Item Types Field Get.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemtypes/{{workItemType}}/fields/{{workItemTypeField}}?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response Content-Type is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Validate that the response has the required fields\", function () {\r\n    const responseData = res.getBody();\r\n\r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData).to.have.property('defaultValue');\r\n    expect(responseData).to.have.property('alwaysRequired');\r\n    expect(responseData).to.have.property('referenceName');\r\n    expect(responseData).to.have.property('name');\r\n    expect(responseData).to.have.property('url');\r\n});\r\n\r\n\r\ntest(\"Ensure that the defaultValue is null\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData.defaultValue).to.be.null;\r\n});\r\n\r\n\r\ntest(\"Always Required field should be true\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData).to.have.property('alwaysRequired', true);\r\n});\r\n\r\n\r\ntest(\"Ensure that the URL is not empty\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData.url).to.exist.and.to.not.be.empty;\r\n});\r\n\r\n",
                "docs": "Get a field for a work item type with detailed references.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Item Types Field List",
              "filename": "Work Item Types Field List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemtypes/{{workItemType}}/fields?$expand=none&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "$expand",
                    "value": "none",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Count of fields is 0\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData.count).to.equal(0);\r\n});\r\n\r\n\r\ntest(\"Value array has correct structure\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData.value).to.be.an('array').and.to.have.lengthOf(1);\r\n  responseData.value.forEach(function(item) {\r\n    expect(item).to.be.an('object');\r\n    expect(item.defaultValue).to.exist;\r\n    expect(item.alwaysRequired).to.be.true;\r\n    expect(item.referenceName).to.exist;\r\n    expect(item.name).to.exist;\r\n    expect(item.url).to.exist;\r\n  });\r\n});\r\n\r\n\r\ntest(\"Response time is less than 200ms\", function () {\r\n    expect(res.getResponseTime()).to.be.below(200);\r\n});\r\n",
                "docs": "Get a list of fields for a work item type with detailed references.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Work Items",
          "filename": "Work Items",
          "root": {
            "docs": "The Work Item API is used for listing, creating and updating work items",
            "meta": {
              "name": "Work Items"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "Work Items Create",
              "filename": "Work Items Create.bru",
              "seq": 2,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitems/${{type}}?validateOnly=<boolean>&bypassRules=<boolean>&suppressNotifications=<boolean>&$expand=fields&api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "validateOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "bypassRules",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "suppressNotifications",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "fields",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Creates a single work item.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Items Delete Work Items",
              "filename": "Work Items Delete Work Items.bru",
              "seq": 8,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemsdelete?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"destroy\": \"<boolean>\",\n  \"ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"skipNotifications\": \"<boolean>\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes specified work items and sends them to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Items Delete",
              "filename": "Work Items Delete.bru",
              "seq": 4,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitems/{{workItemId}}?destroy=<boolean>&api-version={{api-version}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "destroy",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "{{workItemId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion. It is recommended NOT to use this parameter. If you do, please use this parameter with extreme caution.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Items Get Work Item Template",
              "filename": "Work Items Get Work Item Template.bru",
              "seq": 3,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitems/${{type}}?fields=<string>&asOf=<dateTime>&$expand=fields&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "fields",
                    "value": "<string>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "asOf",
                    "value": "<dateTime>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "fields",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a single work item from a template.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Items Get Work Item",
              "filename": "Work Items Get Work Item.bru",
              "seq": 5,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitems/{{workItemId}}?fields=System.Title&asOf=2022-02-13T00:00:00.000Z&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "fields",
                    "value": "System.Title",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "asOf",
                    "value": "2022-02-13T00:00:00.000Z",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Returns a single work item.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Items Get Work Items Batch",
              "filename": "Work Items Get Work Items Batch.bru",
              "seq": 7,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitemsbatch?api-version={{api-version}}",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"$expand\": \"relations\",\n  \"asOf\": \"<dateTime>\",\n  \"errorPolicy\": \"fail\",\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets work items for a list of work item ids (Maximum 200)",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Items List",
              "filename": "Work Items List.bru",
              "seq": 1,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitems?ids=1&fields=System.Title&errorPolicy=fail&api-version={{api-version}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "ids",
                    "value": "1",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "fields",
                    "value": "System.Title",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "errorPolicy",
                    "value": "fail",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "\r\ntest(\"Response status code is 200\", function () {\r\n    expect(res.getStatus()).to.equal(200);\r\n});\r\n\r\n\r\ntest(\"Content-Type header is application/json\", function () {\r\n    expect(res.getHeader(\"Content-Type\")).to.include(\"application/json\");\r\n});\r\n\r\n\r\ntest(\"Count is a non-negative integer\", function () {\r\n  const responseData = res.getBody();\r\n  \r\n  expect(responseData).to.be.an('object');\r\n  expect(responseData.count).to.be.a('number');\r\n  expect(responseData.count).to.be.at.least(0, \"Count should be a non-negative integer\");\r\n});\r\n\r\n\r\ntest(\"Value array is present and contains the expected number of elements\", function () {\r\n    const responseData = res.getBody();\r\n    \r\n    expect(responseData).to.be.an('object');\r\n    expect(responseData.value).to.exist.and.to.be.an('array');\r\n    expect(responseData.value).to.have.lengthOf(1);\r\n});\r\n\r\n",
                "docs": "Returns a list of work items (Maximum 200)",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            },
            {
              "type": "http",
              "name": "Work Items Update",
              "filename": "Work Items Update.bru",
              "seq": 6,
              "request": {
                "url": "https://{{baseUrl}}/{{organization}}/{{project}}/_apis/wit/workitems/{{workItemId}}?validateOnly=<boolean>&bypassRules=<boolean>&suppressNotifications=<boolean>&$expand=fields&api-version={{api-version}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json-patch+json",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "validateOnly",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "bypassRules",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "suppressNotifications",
                    "value": "<boolean>",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "$expand",
                    "value": "fields",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "api-version",
                    "value": "{{api-version}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "organization",
                    "value": "{{organization}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "project",
                    "value": "{{project}}",
                    "type": "path",
                    "enabled": true
                  },
                  {
                    "name": "workItemId",
                    "value": "{{workItemId}}",
                    "type": "path",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Updates a single work item.",
                "auth": {
                  "mode": "basic",
                  "basic": {
                    "username": "basic",
                    "password": "{{AccessToken}}"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "environments": [],
  "root": {
    "request": {
      "auth": {
        "mode": "none"
      },
      "vars": {
        "req": [
          {
            "name": "explicitArray",
            "value": "false",
            "enabled": true,
            "local": false,
            "uid": "Qcj4WOejAVg4g70nvnoSb"
          }
        ]
      },
      "tests": "bru.getGlobalEnvVar(\"baseUrl\");"
    },
    "docs": "Postman Collection for Azure DevOps REST API\n\n[Get started with the REST APIs for Azure DevOps Services and Azure DevOps Server - Azure DevOps Services REST API | Microsoft Learn](https://learn.microsoft.com/en-us/rest/api/azure/devops/?view=azure-devops-rest-7.2)\n\nv1.7\n\nThis GitHub Repo will contain examples and guidance.\n\n[PatrickGallucci/Azure-DevOps-REST-API-Postman-Collection: Postman Collection for Azure DevOps REST API Version 7.1 (github.com)](https://github.com/PatrickGallucci/Azure-DevOps-REST-API-Postman-Collection)\n\n20250319.1",
    "meta": {
      "name": "Azure DevOps REST API v7.3"
    }
  },
  "brunoConfig": {
    "version": "1",
    "name": "Azure DevOps REST API v7.3",
    "type": "collection",
    "ignore": [
      "node_modules",
      ".git"
    ]
  }
}